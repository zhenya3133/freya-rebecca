#!/usr/bin/env bash
set -euo pipefail

# –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
#  - GitHub CLI: gh auth login
#  - –ù–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ—Ä–Ω–µ –Ω—É–∂–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è (–∏–ª–∏ —É–∫–∞–∑–∞—Ç—å REPO_NWO)

REPO_NWO="${REPO_NWO:-$(gh repo view --json nameWithOwner -q .nameWithOwner 2>/dev/null || true)}"
if [[ -z "$REPO_NWO" ]]; then
  echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –õ–∏–±–æ –∑–∞–ø—É—Å—Ç–∏ –≤ git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —Å gh, –ª–∏–±–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π REPO_NWO=owner/repo"
  exit 1
fi
echo "üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_NWO"

# ---------- 1) –õ–ï–ô–ë–õ–´ ----------
# name|color (hex –±–µ–∑ '#')|description
LABELS=(
  "db|0e8a16|Database & indexing"
  "architecture|5319e7|Architecture & design"
  "docs|0052CC|Documentation"
  "ingest|d73a4a|Ingest pipelines"
  "ci|fbca04|CI & testing"
  "quality|c2e0c6|Eval & quality"
  "rag|1d76db|RAG pipelines"
  "llm|c5def5|LLM provider layer"
  "mcp|006b75|MCP adapters"
  "frontend|d4c5f9|Freya Console UI"
  "a2a|b60205|Agent-to-Agent readiness"
  "ops|bfd4f2|Operations & security"
)

echo "üè∑  –°–æ–∑–¥–∞—é/—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –ª–µ–π–±–ª—ã‚Ä¶"
for spec in "${LABELS[@]}"; do
  IFS='|' read -r name color desc <<<"$spec"
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
  if gh api "repos/${REPO_NWO}/labels/${name}" >/dev/null 2>&1; then
    # –û–±–Ω–æ–≤–∏–º —Ü–≤–µ—Ç/–æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    gh api -X PATCH "repos/${REPO_NWO}/labels/${name}" \
      -f new_name="$name" -f color="$color" -f description="$desc" >/dev/null
  else
    gh api -X POST "repos/${REPO_NWO}/labels" \
      -f name="$name" -f color="$color" -f description="$desc" >/dev/null
  fi
done
echo "‚úÖ –õ–µ–π–±–ª—ã –≥–æ—Ç–æ–≤—ã."

# ---------- 2) –ú–ê–ô–õ–°–¢–û–£–ù–´ ----------
# title|description
MILES=(
  "A. Data Foundation|–•—ç—à–∏/UNIQUE, –ø–æ–ª–∏—Ç–∏–∫–∞ Hot/Warm/Cold, –¥–µ–¥—É–ø, Sizing & Tuning"
  "B. Ingest Front|YouTube Whisper fallback, /api/ingest/text, CI+smoke, eval+metrics"
  "C. Unfreeze RAG|/api/answer,/api/ask,/memory, hybrid+rerank, citations, guardrails"
  "D. MCP Layer|MCP-–∞–¥–∞–ø—Ç–µ—Ä—ã –¥–ª—è ingest/retrieve, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, README"
  "E. Freya Console UI|–ó–∞–≥—Ä—É–∑–∫–∞, –ü–æ–∏—Å–∫, –ß–∞—Ç, –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
  "F. A2A Readiness|–†–æ–ª–∏, outbox/queue, capability cards"
  "G. Scale & Prod|–ü–∞—Ä—Ç–∏—Ü–∏–∏, –∏–Ω–¥–µ–∫—Å—ã, backfill/reindex, –±—ç–∫–∞–ø—ã, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
)

declare -A MNUM  # title -> number
echo "üéØ –°–æ–∑–¥–∞—é/—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é –º–∞–π–ª—Å—Ç–æ—É–Ω—ã‚Ä¶"
for m in "${MILES[@]}"; do
  title="${m%%|*}"
  desc="${m#*|}"
  # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
  existing="$(gh api "repos/${REPO_NWO}/milestones?state=all&per_page=100" | jq -r --arg t "$title" '.[] | select(.title==$t) | @base64' || true)"
  if [[ -n "$existing" ]]; then
    obj="$(echo "$existing" | head -n1 | base64 -d)"
    num="$(echo "$obj" | jq -r '.number')"
    # –û–±–Ω–æ–≤–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –æ—Ç–∫—Ä–æ–µ–º (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∑–∞–∫—Ä—ã—Ç)
    gh api -X PATCH "repos/${REPO_NWO}/milestones/${num}" \
      -f title="$title" -f description="$desc" -f state="open" >/dev/null
    MNUM["$title"]="$num"
  else
    # –°–æ–∑–¥–∞—ë–º
    created="$(gh api -X POST "repos/${REPO_NWO}/milestones" -f title="$title" -f state="open" -f description="$desc")"
    num="$(echo "$created" | jq -r '.number')"
    MNUM["$title"]="$num"
  fi
done
echo "‚úÖ –ú–∞–π–ª—Å—Ç–æ—É–Ω—ã –≥–æ—Ç–æ–≤—ã."

# ---------- 3) –£–¢–ò–õ–ò–¢–ê –°–û–ó–î–ê–ù–ò–Ø ISSUE ----------
create_issue () {
  local title="$1"
  local body="$2"
  local milestone_title="$3"
  local labels_csv="$4"

  local milestone_num="${MNUM[$milestone_title]:-}"
  if [[ -z "$milestone_num" ]]; then
    echo "‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä –º–∞–π–ª—Å—Ç–æ—É–Ω–∞ '$milestone_title' ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω–æ: $title"
    return 0
  fi

  gh issue create \
    --title "$title" \
    --body "$body" \
    --milestone "$milestone_title" \
    --label "$labels_csv" >/dev/null

  echo "  ‚Ä¢ Issue: $title  [${milestone_title}]  {$labels_csv}"
}

echo "üìù –°–æ–∑–¥–∞—é –∑–∞–¥–∞—á–∏‚Ä¶"

# A
create_issue "UNIQUE(ns,slot,source_id,chunk_no) + content_hash" \
"- [ ] –î–æ–±–∞–≤–∏—Ç—å content_hash —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–∞
- [ ] UNIQUE(ns,slot,source_id,chunk_no) + –∏–Ω–¥–µ–∫—Å –ø–æ hash
- [ ] –ò–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ã–π upsert –≤ upsertChunksWithTargets" \
"A. Data Foundation" "db"

create_issue "–ü–æ–ª–∏—Ç–∏–∫–∞ Hot/Warm/Cold + –ø–∞—Ä—Ç–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (ns/slot √ó time)" \
"- [ ] –î–æ–∫—É–º–µ–Ω—Ç policy (–º–µ—Å—è—Ü/–∫–≤–∞—Ä—Ç–∞–ª)
- [ ] –ü–ª–∞–Ω –ø–∞—Ä—Ç–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (doc-first)
- [ ] –ö—Ä–∏—Ç–µ—Ä–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ warm/cold" \
"A. Data Foundation" "architecture"

create_issue "Sizing & Tuning guide" \
"- [ ] –§–æ—Ä–º—É–ª—ã –æ–±—ä—ë–º–æ–≤ (–≤–µ–∫—Ç–æ—Ä/–∏–Ω–¥–µ–∫—Å)
- [ ] –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ HNSW/IVFFLAT
- [ ] VACUUM/REINDEX —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è" \
"A. Data Foundation" "docs"

# B
create_issue "YouTube: Whisper fallback" \
"- [ ] /api/ingest/youtube ‚Äî –µ—Å–ª–∏ –Ω–µ—Ç —Å–∞–±–æ–≤, —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ–º
- [ ] –ü–∞—Ä–∞–º–µ—Ç—Ä—ã lang/timestamps; chunking –∫–∞–∫ —É PDF
- [ ] –õ–∏–º–∏—Ç—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–ª–æ–≥" \
"B. Ingest Front" "ingest"

create_issue "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π ingest /api/ingest/text" \
"- [ ] POST raw text + meta (ns/slot/kind/url)
- [ ] chunkText + upsert + embeddings
- [ ] CLI scripts/ingest_text.sh" \
"B. Ingest Front" "ingest"

create_issue "CI + smoke-—Ç–µ—Å—Ç—ã ingest‚Üíretrieve" \
"- [ ] tsc, –ª–∏–Ω—Ç–µ—Ä, e2e ingest –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
- [ ] –ü—Ä–æ–≤–µ—Ä–∫–∞ retrieve –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º" \
"B. Ingest Front" "ci"

create_issue "Metrics & Evals (baseline)" \
"- [ ] 5‚Äì10 golden-–≤–æ–ø—Ä–æ—Å–æ–≤
- [ ] nightly eval; –∞–ª–µ—Ä—Ç—ã –Ω–∞ —Ä–µ–≥—Ä–µ—Å—Å" \
"B. Ingest Front" "quality"

# C
create_issue "/api/answer: RAG —Å —Ü–∏—Ç–∞—Ç–∞–º–∏" \
"- [ ] –í–µ–∫—Ç–æ—Ä+BM25 —Ä–µ—Ç—Ä–∏–≤, top-50 ‚Üí rerank
- [ ] –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (URL/—Ñ–∞–π–ª/—Ä–µ–ø–æ)
- [ ] Guardrails (timeouts, retries, no-citation=no-answer)" \
"C. Unfreeze RAG" "rag"

create_issue "/api/ask: multi-turn + –ø–∞–º—è—Ç—å" \
"- [ ] Thread storage (short/long)
- [ ] Inline —Ü–∏—Ç–∞—Ç—ã + –∫–Ω–æ–ø–∫–∏ ¬´–ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏¬ª" \
"C. Unfreeze RAG" "rag"

create_issue "LLM provider layer (Option C) ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ RAG" \
"- [ ] –ü–æ–¥–∫–ª—é—á–∏—Ç—å lib/llm/* –≤ /api/answer,/api/ask
- [ ] –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ .env (openai/openrouter)" \
"C. Unfreeze RAG" "llm"

# D
create_issue "MCP –∞–¥–∞–ø—Ç–µ—Ä—ã: ingest tools (GitHub/URL/PDF/YouTube/Text)" \
"- [ ] MCP endpoints –¥–ª—è –Ω–∞—à–∏—Ö —Ä–æ—É—Ç–æ–≤
- [ ] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –∫–≤–æ—Ç—ã
- [ ] README —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –≤—ã–∑–æ–≤–∞" \
"D. MCP Layer" "mcp"

create_issue "MCP: retrieve/search capability" \
"- [ ] –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ (ns/slot/date)
- [ ] –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" \
"D. MCP Layer" "mcp"

# E
create_issue "UI: –ó–∞–≥—Ä—É–∑–∫–∞ (URL/PDF/GitHub/YouTube/Text)" \
"- [ ] –§–æ—Ä–º—ã, –æ–ø—Ü–∏–∏ chunk/dryRun/skipEmb
- [ ] –ü—Ä–æ–≥—Ä–µ—Å—Å/–ª–æ–≥ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏" \
"E. Freya Console UI" "frontend"

create_issue "UI: –ü–æ–∏—Å–∫" \
"- [ ] Query + —Ñ–∏–ª—å—Ç—Ä—ã (ns/slot/domain/date)
- [ ] –°–ø–∏—Å–æ–∫ —á–∞–Ω–∫–æ–≤ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É" \
"E. Freya Console UI" "frontend"

create_issue "UI: –ß–∞—Ç (RAG)" \
"- [ ] Multi-turn; –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ (–µ—Å–ª–∏ openrouter)
- [ ] –¶–∏—Ç–∞—Ç—ã –∏ –∫–Ω–æ–ø–∫–∞ ¬´–∏—Å—Ç–æ—á–Ω–∏–∫–∏¬ª" \
"E. Freya Console UI" "frontend"

create_issue "UI: Admin" \
"- [ ] –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (db-ping, gh-rate)
- [ ] –†–∞–∑–º–µ—Ä—ã —Ç–∞–±–ª–∏—Ü/–∏–Ω–¥–µ–∫—Å–æ–≤; NULL-—ç–º–±–µ–¥–¥–∏–Ω–≥–∏; backfill/reindex" \
"E. Freya Console UI" "frontend"

# F
create_issue "A2A: —Ä–æ–ª–∏ –∏ capability-–∫–∞—Ä—Ç—ã" \
"- [ ] Planner/Retriever/Coder/Runner
- [ ] IO-–≥—Ä–∞–Ω–∏—Ü—ã, capability cards" \
"F. A2A Readiness" "a2a"

create_issue "A2A: outbox/queue –¥–ª—è –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏—è" \
"- [ ] –°—Ö–µ–º–∞ –æ—á–µ—Ä–µ–¥–∏ (outbox)
- [ ] –¢—Ä–µ–π—Å–∏–Ω–≥ –∑–∞–¥–∞—á" \
"F. A2A Readiness" "a2a"

# G
create_issue "–ü–∞—Ä—Ç–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∏–Ω–¥–µ–∫—Å—ã (HNSW/IVFFLAT)" \
"- [ ] –í–∫–ª—é—á–µ–Ω–∏–µ –ø–∞—Ä—Ç–∏—Ü–∏–π –ø–æ –ø–æ—Ä–æ–≥—É –æ–±—ä—ë–º–∞
- [ ] –°—Ç—Ä–∞—Ç–µ–≥–∏—è hot/warm/cold" \
"G. Scale & Prod" "db"

create_issue "Backfill/Reindex schedule + Backups/Restore" \
"- [ ] –ù–æ—á–Ω—ã–µ –¥–∂–æ–±—ã
- [ ] –ë—ç–∫–∞–ø—ã –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è" \
"G. Scale & Prod" "ops"

create_issue "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å" \
"- [ ] –ú–µ—Ç—Ä–∏–∫–∏ latency/size/cache
- [ ] Rate-limits, audit, rotate –∫–ª—é—á–µ–π" \
"G. Scale & Prod" "ops"

echo "‚úÖ Roadmap bootstrap complete."
