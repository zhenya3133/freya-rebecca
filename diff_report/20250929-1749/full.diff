diff --git a/.gitattributes b/.gitattributes
old mode 100644
new mode 100755
diff --git a/.github/PULL_REQUEST_TEMPLATE.md b/.github/PULL_REQUEST_TEMPLATE.md
new file mode 100644
index 0000000..6fc3fe0
--- /dev/null
+++ b/.github/PULL_REQUEST_TEMPLATE.md
@@ -0,0 +1,12 @@
+## Checklist
+
+- [ ] Contract retrieval RC v1 не менялся
+  - [ ] Если менялся: обновлены docs/contract, миграции, примеры
+- [ ] Ingest upsert (chunks) зелёный, идемпотентность сохранена
+- [ ] Eval прошёл локально: `npx tsx apps/web/scripts/evals/run_eval.ts` → hit@5 > 0
+- [ ] Диаг-скрипты выполняются: list_tables/list_columns/count_ns/count_chunks
+- [ ] CI зелёный: typecheck, eslint, bash -n, (и integration если DATABASE_URL задан)
+- [ ] .env.local не закоммичен, env.example актуален
+
+## Notes
+Коротко, что поменяли и почему.
diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
new file mode 100644
index 0000000..5843830
--- /dev/null
+++ b/.github/workflows/ci.yml
@@ -0,0 +1,79 @@
+name: CI
+
+on:
+  pull_request:
+  push:
+    branches: [ main ]
+
+jobs:
+  ci:
+    runs-on: ubuntu-latest
+
+    env:
+      NODE_ENV: production
+      # опц: если задашь в репозитории -> пробежит интеграционный блок
+      DATABASE_URL: ${{ secrets.DATABASE_URL }}
+      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
+      X_ADMIN_KEY: test_admin_key_123
+      RETRIEVE_ALPHA: "0.85"
+      RETRIEVE_BETA: "0.15"
+      RETRIEVE_T_HALF: "180"
+      RETRIEVE_PROBES: "10"
+      BASE: http://localhost:3000
+      NS: rebecca/army/refs
+      SLOT: staging
+
+    steps:
+      - uses: actions/checkout@v4
+
+      - name: Use Node 20
+        uses: actions/setup-node@v4
+        with:
+          node-version: 20
+
+      - name: Set up pnpm
+        uses: pnpm/action-setup@v4
+        with:
+          version: 9
+
+      - name: Install deps (root & apps/web)
+        run: |
+          pnpm install --frozen-lockfile || pnpm install
+
+      # 1) типы + линт
+      - name: Typecheck
+        run: pnpm -w --filter ./apps/web tsc --noEmit
+
+      - name: ESLint
+        run: pnpm -w --filter ./apps/web eslint --max-warnings=0 .
+
+      # 2) shell scripts syntax
+      - name: Bash syntax
+        run: |
+          find apps/web/scripts -type f -name "*.sh" -print0 | xargs -0 -I{} bash -n "{}"
+
+      # 3) интеграционные: только если есть DATABASE_URL
+      - name: Build Next app
+        if: env.DATABASE_URL != ''
+        working-directory: apps/web
+        run: pnpm build
+
+      - name: Start Next app
+        if: env.DATABASE_URL != ''
+        working-directory: apps/web
+        run: |
+          pnpm start &>/tmp/next.log &
+          npx wait-on http://localhost:3000
+
+      - name: Contract test /api/retrieve
+        if: env.DATABASE_URL != ''
+        run: |
+          chmod +x apps/web/scripts/contract/test_retrieve.sh
+          apps/web/scripts/contract/test_retrieve.sh
+
+      # 4) отчёт логов в случае падения
+      - name: Print Next logs on failure
+        if: failure()
+        run: |
+          echo "==== NEXT LOG ===="
+          tail -n +1 /tmp/next.log || true
diff --git a/.gitignore b/.gitignore
old mode 100644
new mode 100755
index 0470db0..1599490
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,19 @@ Thumbs.db
 # runtime payload
 apps/web/answer.json
  .env.local 
+
+# local/env
+apps/web/.env.local
+
+# bundles & tmp
+apps/web/_sanity_bundle/
+apps/web/sanity-bundle-*.tar.gz
+apps/web/eval_reports/
+*.log
+.DS_Store
+apps/web/.env.local
+apps/web/_sanity_bundle/
+apps/web/sanity-bundle-*.tar.gz
+apps/web/eval_reports/
+*.log
+.DS_Store
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..2b05d55
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,126 @@
+# ---------- Makefile (root) ----------
+SHELL := /bin/bash
+.ONESHELL:
+.DEFAULT_GOAL := help
+
+# Параметры по умолчанию (можно переопределять: make ingest:demo NS=foo SLOT=prod)
+WEB_DIR   ?= apps/web
+ENV_FILE  ?= $(WEB_DIR)/.env.local
+BASE      ?= http://localhost:3000
+NS        ?= rebecca/army/refs
+SLOT      ?= staging
+LOCAL_PDF ?= file:///mnt/c/Users/User/Desktop/Mastering\ AI\ Agents-compressed.pdf
+
+# Шорткат: подхватить переменные из .env.local для каждого шага
+define WITH_ENV
+set -euo pipefail; \
+if [[ -f "$(ENV_FILE)" ]]; then set -a; source "$(ENV_FILE)"; set +a; fi; \
+$$@
+endef
+
+.PHONY: help
+help: ## Показать список целей
+	@awk 'BEGIN {FS = ":.*##"; printf "\nTargets:\n"} /^[a-zA-Z0-9_:%-]+:.*##/ {printf "  \033[36m%-22s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)
+
+# ------------------------ Миграции ------------------------
+
+.PHONY: migrate
+migrate: ## Прогнать миграции (G0 + G5)
+	@$(WITH_ENV) $(WEB_DIR)/scripts/migrate.sh
+
+# ------------------------ Диагностика ---------------------
+
+.PHONY: diag:tables
+diag:tables: ## Показать таблицы
+	@$(WITH_ENV) $(WEB_DIR)/scripts/diag/list_tables.sh
+
+.PHONY: diag:columns
+diag:columns: ## Показать колонки таблицы: make diag:columns T=chunks
+	@if [[ -z "$$T" ]]; then echo "Usage: make diag:columns T=<table>"; exit 1; fi
+	@$(WITH_ENV) $(WEB_DIR)/scripts/diag/list_columns.sh "$$T"
+
+.PHONY: diag:ns
+diag:ns: ## Сводка по ns (по таблице chunks). Опц.: make diag:ns NS=...
+	@$(WITH_ENV) psql "$$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off \
+	  -v ns='$(NS)' -f $(WEB_DIR)/scripts/diag/count_ns.sql
+
+.PHONY: diag:chunks
+diag:chunks: ## Подсчет по chunks
+	@$(WITH_ENV) psql "$$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off \
+	  -f $(WEB_DIR)/scripts/diag/count_chunks.sql
+
+.PHONY: diag:memories
+diag:memories: ## Подсчет по memories (временный до удаления)
+	@$(WITH_ENV) psql "$$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off \
+	  -f $(WEB_DIR)/scripts/diag/count_memories.sql
+
+# ------------------------ БД утилиты ----------------------
+
+.PHONY: db:init
+db:init: migrate ## Инициализация базы (миграции)
+
+.PHONY: db:reset
+db:reset: ## TRUNCATE chunks для заданных NS/SLOT + ANALYZE
+	@$(WITH_ENV) psql "$$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -c \
+	  "DELETE FROM chunks WHERE ns='$(NS)' AND slot='$(SLOT)';"
+	@$(WITH_ENV) psql "$$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -c \
+	  "ANALYZE chunks;"
+
+# ------------------------ Ingest / E2E --------------------
+
+.PHONY: ingest:demo
+ingest:demo: ## Полная загрузка демо-корпуса (URL+PDF+GitHub) и ANALYZE
+	@$(WITH_ENV) LOCAL_PDF="$(LOCAL_PDF)" $(WEB_DIR)/scripts/e2e/bootstrap_demo.sh
+
+.PHONY: ingest:url
+ingest:url: ## Пример: make ingest:url Q="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop"
+	@if [[ -z "$$Q" ]]; then echo "Usage: make ingest:url Q=<url>"; exit 1; fi
+	@$(WITH_ENV) curl -sS -X POST "$(BASE)/api/ingest/url" \
+	  -H 'content-type: application/json' -H "x-admin-key: $$X_ADMIN_KEY" \
+	  -d "{\"ns\":\"$(NS)\",\"slot\":\"$(SLOT)\",\"urls\":[\"$$Q\"]}" | jq
+
+.PHONY: ingest:pdf
+ingest:pdf: ## Пример: make ingest:pdf Q="file:///abs/path/file.pdf"
+	@if [[ -z "$$Q" ]]; then echo "Usage: make ingest:pdf Q=<url|file://...>"; exit 1; fi
+	@$(WITH_ENV) curl -sS -X POST "$(BASE)/api/ingest/pdf" \
+	  -H 'content-type: application/json' -H "x-admin-key: $$X_ADMIN_KEY" \
+	  -d "{\"ns\":\"$(NS)\",\"slot\":\"$(SLOT)\",\"url\":\"$$Q\"}" | jq
+
+.PHONY: ingest:gh
+ingest:gh: ## Пример: make ingest:gh OWNER=openai REPO=openai-cookbook LIMIT=10
+	@if [[ -z "$$OWNER" || -z "$$REPO" ]]; then echo "Usage: make ingest:gh OWNER=<o> REPO=<r> [LIMIT=10]"; exit 1; fi
+	@$(WITH_ENV) curl -sS -X POST "$(BASE)/api/ingest/github" \
+	  -H 'content-type: application/json' -H "x-admin-key: $$X_ADMIN_KEY" \
+	  -d "{\"ns\":\"$(NS)\",\"slot\":\"$(SLOT)\",\"owner\":\"$$OWNER\",\"repo\":\"$$REPO\",\"includeExt\":[\".md\"],\"limit\":$${LIMIT:-10}}" | jq
+
+# ------------------------ Retrieve / Eval -----------------
+
+.PHONY: retrieve:test
+retrieve:test: ## Два sanity-запроса к /api/retrieve (basic + allow-domain)
+	@$(WITH_ENV) BASE="$(BASE)" NS="$(NS)" SLOT="$(SLOT)" \
+	  $(WEB_DIR)/scripts/examples/retrieve.sh
+
+.PHONY: eval
+eval: ## Запустить минимальный Golden eval, отчёт -> apps/web/docs/evals/latest.md
+	@$(WITH_ENV) BASE="$(BASE)" NS="$(NS)" SLOT="$(SLOT)" \
+	  npx -y tsx $(WEB_DIR)/scripts/evals/run_eval.ts | jq
+
+# ------------------------ Локальный CI --------------------
+
+.PHONY: ci
+ci: ## Локальный CI: tsc, eslint, bash -n, контрактный тест /api/retrieve
+	@echo ">> tsc --noEmit"
+	@npx -y tsc --noEmit
+	@echo ">> eslint"
+	@npx -y eslint . --max-warnings=0
+	@echo ">> bash -n"
+	@bash -n $(WEB_DIR)/scripts/e2e/bootstrap_demo.sh
+	@bash -n $(WEB_DIR)/scripts/diag/list_tables.sh
+	@bash -n $(WEB_DIR)/scripts/diag/list_columns.sh
+	@bash -n $(WEB_DIR)/scripts/migrate.sh
+	@echo ">> contract smoke: /api/retrieve"
+	@$(WITH_ENV) curl -sS -X POST "$(BASE)/api/retrieve" -H 'content-type: application/json' \
+	  -d "{\"q\":\"ping\",\"ns\":\"$(NS)\",\"slot\":\"$(SLOT)\",\"topK\":1,\"candidateK\":1,\"minSimilarity\":0,\"nsMode\":\"strict\"}" \
+	  | jq '.items!=null' | grep true >/dev/null
+
+# ----------------------------------------------------------
diff --git a/apps/web/.editorconfig b/apps/web/.editorconfig
new file mode 100644
index 0000000..09c2944
--- /dev/null
+++ b/apps/web/.editorconfig
@@ -0,0 +1,11 @@
+root = true
+
+[*]
+end_of_line = lf
+insert_final_newline = true
+charset = utf-8
+indent_style = space
+indent_size = 2
+
+[*.md]
+trim_trailing_whitespace = false
diff --git a/apps/web/.eslintrc.json b/apps/web/.eslintrc.json
old mode 100644
new mode 100755
diff --git a/apps/web/.gitignore b/apps/web/.gitignore
old mode 100644
new mode 100755
diff --git a/apps/web/.vscode/extensions.json b/apps/web/.vscode/extensions.json
new file mode 100644
index 0000000..e85f04e
--- /dev/null
+++ b/apps/web/.vscode/extensions.json
@@ -0,0 +1,19 @@
+{
+  "recommendations": [
+    "ms-vscode-remote.remote-wsl",
+    "ms-vscode-remote.remote-containers",
+    "ms-azuretools.vscode-docker",
+    "dbaeumer.vscode-eslint",
+    "esbenp.prettier-vscode",
+    "EditorConfig.EditorConfig",
+    "bradlc.vscode-tailwindcss",
+    "mikestead.dotenv",
+    "eamodio.gitlens",
+    "usernamehw.errorlens",
+    "oderwat.indent-rainbow",
+    "streetsidesoftware.code-spell-checker",
+    "cweijan.vscode-postgresql",
+    "humao.rest-client",
+    "yzhang.markdown-all-in-one"
+  ]
+}
diff --git a/apps/web/.vscode/settings.json b/apps/web/.vscode/settings.json
new file mode 100644
index 0000000..fb22519
--- /dev/null
+++ b/apps/web/.vscode/settings.json
@@ -0,0 +1,22 @@
+{
+  "files.eol": "\n",
+  "files.insertFinalNewline": true,
+  "editor.formatOnSave": true,
+  "editor.codeActionsOnSave": {
+    "source.fixAll.eslint": "explicit",
+    "source.organizeImports": "explicit"
+  },
+  "prettier.singleQuote": true,
+  "prettier.trailingComma": "all",
+  "prettier.printWidth": 100,
+  "eslint.useFlatConfig": true,
+  "eslint.validate": ["typescript", "typescriptreact", "javascript", "json"],
+  "typescript.tsdk": "node_modules/typescript/lib",
+  "tailwindCSS.experimental.classRegex": [
+    ["clsx\\(([^)]*)\\)", "(?:'|\"|`)([^'\"`]*)(?:'|\"|`)"],
+    ["cva\\(([^)]*)\\)", "(?:'|\"|`)([^'\"`]*)(?:'|\"|`)"]
+  ],
+  "editor.defaultFormatter": "esbenp.prettier-vscode",
+  "markdown.preview.breaks": true,
+  "editor.tabSize": 2
+}
diff --git a/apps/web/Dockerfile b/apps/web/Dockerfile
new file mode 100644
index 0000000..24881f8
--- /dev/null
+++ b/apps/web/Dockerfile
@@ -0,0 +1,9 @@
+FROM node:20-alpine
+WORKDIR /app
+COPY package.json package.json
+COPY package-lock.json package-lock.json
+COPY apps/web/ ./apps/web/
+RUN npm install
+EXPOSE 3000
+CMD npm run dev --prefix apps/web
+
diff --git a/apps/web/Ping-4O.ps1 b/apps/web/Ping-4O.ps1
old mode 100644
new mode 100755
diff --git a/apps/web/README.md b/apps/web/README.md
old mode 100644
new mode 100755
diff --git a/apps/web/Run-Rag.backup.ps1 b/apps/web/Run-Rag.backup.ps1
old mode 100644
new mode 100755
diff --git a/apps/web/Run-Rag.ps1 b/apps/web/Run-Rag.ps1
old mode 100644
new mode 100755
diff --git a/apps/web/Sync-Memory.ps1 b/apps/web/Sync-Memory.ps1
old mode 100644
new mode 100755
diff --git a/apps/web/agents.prod.json b/apps/web/agents.prod.json
old mode 100644
new mode 100755
diff --git a/apps/web/answer.json b/apps/web/answer.json
old mode 100644
new mode 100755
diff --git a/apps/web/ask.json b/apps/web/ask.json
old mode 100644
new mode 100755
diff --git a/apps/web/docs/CHANGELOG.md b/apps/web/docs/CHANGELOG.md
old mode 100644
new mode 100755
diff --git a/apps/web/docs/data-lifecycle.md b/apps/web/docs/data-lifecycle.md
new file mode 100644
index 0000000..91103a4
--- /dev/null
+++ b/apps/web/docs/data-lifecycle.md
@@ -0,0 +1,40 @@
+# Data Lifecycle (RC-v1)
+
+## 1) Идентичность чанка
+- **Unique key**: `(ns, slot, source_id, chunk_no)`.
+- **content_hash**: `sha256(ns|slot|source_id|chunk_no|content)`, NOT NULL.
+- Повторный ingest с теми же `(ns,slot,source_id,chunk_no,content)` → *idempotent update* без изменений.
+
+## 2) Вставка/обновление
+- Вставка: `INSERT ... ON CONFLICT (ns,slot,source_id,chunk_no) DO UPDATE`.
+- При конфликте: обновляем `content`, `title`, `url`, `content_hash`; `embedding` меняем только если прислали новую (`COALESCE(EXCLUDED.embedding, chunks.embedding)`).
+- Таймштампы: `created_at` однажды; `updated_at = NOW()` при любом апдейте.
+
+## 3) Повторный разбор источника (re-ingest)
+- Если контент изменился → изменится `content_hash` → апдейт строки и, при необходимости, **invalidate embeddings** (см. Backfill).
+- Если сегментация изменилась (другой `chunk_no`) — это **новые строки**; старые помечать к удалению отдельной процедурой (см. §6).
+
+## 4) Embeddings
+- Допускаются `NULL` на ingest (фоновая заливка).
+- Backfill-скрипт читает чанки с `embedding IS NULL` **или** с флагом «устаревших» эмбеддингов (см. §5).
+
+## 5) Полу-жизнь и TTL (recency)
+- Для каждого `ns` задаём `half_life_days` и `ttl_days` в таблице-паспортов (пока — конфиг в коде).
+- Итоговый скор: `final = α·similarity + β·time_decay(age)`.
+- При `age > ttl_days` — фильтровать из выдачи (или снижать вес до нуля).
+
+## 6) Удаления и «осиротевшие» чанки
+- При полном re-ingest источника сохраняем список `(source_id, chunk_no)` актуальной схемы.
+- Всё, что не входит в актуальный список, маркируем `to_delete=true` и удаляем «мягко» (архивная таблица) либо жёстко — регламентом задачи.
+
+## 7) Горячие/тёплые/холодные данные
+- **Hot**: последние `N` дней и `ns` с высокой частотой запросов — держим индексы плотными, backfill embeddings по приоритету.
+- **Warm**: старше `N` и до `ttl_days` — обычный приоритет.
+- **Cold**: старше `ttl_days` — кандидаты на архив/удаление.
+
+## 8) Идемпотентность / дедуп
+- Unique key + content_hash исключают дубли на уровне БД и кода.
+- Любой ingest опирается на `unchanged detection`: если `content_hash` совпал — не трогать `embedding`.
+
+## 9) Логи
+- Для каждого admin-ingest писать: `{inserted, updated, unchanged, failures}` + лимиты и окно пагинации (для GitHub/YouTube).
diff --git a/apps/web/docs/evals/latest.md b/apps/web/docs/evals/latest.md
new file mode 100644
index 0000000..c204411
--- /dev/null
+++ b/apps/web/docs/evals/latest.md
@@ -0,0 +1,13 @@
+# Eval report
+Date: 2025-09-23T14:13:50.292Z
+NS: `rebecca/army/refs`, slot: `staging`, base: `http://localhost:3000`
+
+**Summary:** n=5, hit@k=1.000, MRR=1.000
+
+| # | query | rank | top URLs |
+|--:|-------|-----:|----------|
+| 1 | event loop microtask | 1 | developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop<br>developer.mozilla.org/en-US/docs/Web/API/console/time<br>developer.mozilla.org/en-US/docs/Web/API/Console/table |
+| 2 | console.time usage | 1 | developer.mozilla.org/en-US/docs/Web/API/console/time<br>developer.mozilla.org/en-US/docs/Web/API/Console/table<br>developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop |
+| 3 | console.table example | 1 | developer.mozilla.org/en-US/docs/Web/API/Console/table<br>developer.mozilla.org/en-US/docs/Web/API/console/time<br>developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop |
+| 4 | openai cookbook examples | 1 | github.com/openai/openai-cookbook/blob/main/articles/gpt-oss/verifying-implementations.md<br>github.com/openai/openai-cookbook/blob/main/.github/pull_request_template.md<br>github.com/openai/openai-cookbook/blob/main/articles/gpt-oss/run-locally-lmstudio.md |
+| 5 | Mastering AI Agents | 1 | file:///mnt/c/Users/User/Desktop/Mastering AI Agents-compressed.pdf<br>github.com/openai/openai-cookbook/blob/main/articles/gpt-oss/run-vllm.md<br>github.com/openai/openai-cookbook/blob/main/articles/gpt-oss/run-locally-ollama.md |
diff --git a/apps/web/docs/retrieve-api.md b/apps/web/docs/retrieve-api.md
new file mode 100644
index 0000000..9374e7e
--- /dev/null
+++ b/apps/web/docs/retrieve-api.md
@@ -0,0 +1,15 @@
+# /api/retrieve — мини-README
+
+**Метод:** `POST`
+
+## Тело запроса
+```json
+{
+  "q": "строка запроса",
+  "ns": "rebecca/army/refs",
+  "topK": 10,
+  "domainFilter": { "allow": ["developer.mozilla.org"], "deny": ["wikipedia.org"] },
+  "debug": true
+}
+
+
diff --git a/apps/web/eslint.config.mjs b/apps/web/eslint.config.mjs
old mode 100644
new mode 100755
diff --git a/apps/web/ffmpeg-bootstrap.js b/apps/web/ffmpeg-bootstrap.js
new file mode 100644
index 0000000..07a0295
--- /dev/null
+++ b/apps/web/ffmpeg-bootstrap.js
@@ -0,0 +1,8 @@
+if (!process.env.FFMPEG_PATH) {
+  process.env.FFMPEG_PATH = '/usr/bin/ffmpeg';
+}
+try {
+  const ff = require('fluent-ffmpeg');
+  ff.setFfmpegPath(process.env.FFMPEG_PATH);
+} catch (_) {}
+console.log('[ffmpeg-bootstrap] FFMPEG_PATH=', process.env.FFMPEG_PATH);
diff --git a/apps/web/freya-rebecca-v0.4.0.bundle b/apps/web/freya-rebecca-v0.4.0.bundle
old mode 100644
new mode 100755
diff --git a/apps/web/middleware.ts b/apps/web/middleware.ts
old mode 100644
new mode 100755
diff --git a/apps/web/migrations/2025-08-27_rag_logs.sql b/apps/web/migrations/2025-08-27_rag_logs.sql
old mode 100644
new mode 100755
diff --git a/apps/web/next.config.mjs b/apps/web/next.config.mjs
old mode 100644
new mode 100755
diff --git a/apps/web/package.json b/apps/web/package.json
index 8b15a19..d32acba 100644
--- a/apps/web/package.json
+++ b/apps/web/package.json
@@ -1 +1,42 @@
-{"name":"web","version":"0.1.0","private":true,"scripts":{"dev":"next dev --turbopack","build":"next build","start":"next start","lint":"next lint","migrate:g0":"node ./scripts/migrate-g0.js","smoke":"pwsh ./apps/web/tests/Smoke-Evals.ps1"},"dependencies":{"@mozilla/readability":"^0.6.0","cheerio":"^1.1.2","dotenv":"^17.2.1","gray-matter":"^4.0.3","jsdom":"^26.1.0","next":"15.4.6","openai":"^5.13.1","pg":"^8.16.3","react":"19.1.0","react-dom":"19.1.0","youtube-transcript":"^1.2.1","zod":"^3.25.76"},"devDependencies":{"@eslint/eslintrc":"^3","@types/node":"^20","@types/react":"^19","@types/react-dom":"^19","eslint":"^9","eslint-config-next":"15.4.6","typescript":"^5"}}
\ No newline at end of file
+{
+  "name": "web",
+  "version": "0.1.0",
+  "private": true,
+  "scripts": {
+    "dev": "next dev",
+    "dev:tp": "next dev --turbopack",
+    "build": "next build",
+    "start": "next start",
+    "lint": "next lint",
+    "migrate:g0": "node ./scripts/migrate-g0.js",
+    "smoke": "pwsh ./apps/web/tests/Smoke-Evals.ps1"
+  },
+  "dependencies": {
+    "@mozilla/readability": "^0.6.0",
+    "cheerio": "^1.1.2",
+    "dotenv": "^17.2.1",
+    "ffmpeg-static": "^5.2.0",
+    "fluent-ffmpeg": "^2.1.3",
+    "gray-matter": "^4.0.3",
+    "jsdom": "^26.1.0",
+    "next": "15.4.6",
+    "openai": "^5.23.1",
+    "pdf-parse": "^1.1.1",
+    "pg": "^8.16.3",
+    "react": "19.1.0",
+    "react-dom": "19.1.0",
+    "youtube-transcript": "^1.2.1",
+    "ytdl-core": "^4.11.5",
+    "zod": "^3.25.76"
+  },
+  "devDependencies": {
+    "@eslint/eslintrc": "^3",
+    "@types/node": "^20",
+    "@types/pg": "^8.15.5",
+    "@types/react": "^19",
+    "@types/react-dom": "^19",
+    "eslint": "^9",
+    "eslint-config-next": "15.4.6",
+    "typescript": "^5"
+  }
+}
diff --git a/apps/web/patches/0001-release-main-29.08.2025.patch b/apps/web/patches/0001-release-main-29.08.2025.patch
old mode 100644
new mode 100755
diff --git a/apps/web/public/file.svg b/apps/web/public/file.svg
old mode 100644
new mode 100755
diff --git a/apps/web/public/globe.svg b/apps/web/public/globe.svg
old mode 100644
new mode 100755
diff --git a/apps/web/public/next.svg b/apps/web/public/next.svg
old mode 100644
new mode 100755
diff --git a/apps/web/public/vercel.svg b/apps/web/public/vercel.svg
old mode 100644
new mode 100755
diff --git a/apps/web/public/window.svg b/apps/web/public/window.svg
old mode 100644
new mode 100755
diff --git a/apps/web/resp-gpt5.json b/apps/web/resp-gpt5.json
old mode 100644
new mode 100755
diff --git a/apps/web/retrieve_grep_output.txt b/apps/web/retrieve_grep_output.txt
new file mode 100644
index 0000000..d848482
--- /dev/null
+++ b/apps/web/retrieve_grep_output.txt
@@ -0,0 +1,9 @@
+./docs/retrieve-api.md:# /api/retrieve — мини-README
+./scripts/contract/test_retrieve.sh:resp_valid="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$valid")" || fail "valid POST failed (curl)"
+./scripts/contract/test_retrieve.sh:resp_invalid="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$invalid" || true)"
+./scripts/contract/test_retrieve.sh:resp_domain="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$with_domain")" || fail "domain POST failed"
+./scripts/evals/run_eval.mjs:// Node >=18 (встроенный fetch). Читает JSONL кейсы, бьет /api/retrieve, считает hit@k и MRR.
+./scripts/evals/run_eval.mjs:// одно обращение к /api/retrieve
+./scripts/evals/run_eval.mjs:  const r = await fetch(`${BASE}/api/retrieve`, {
+./scripts/evals/run_eval.ts:  const res = await fetch(`${BASE}/api/retrieve`, {
+./src/app/api/retrieve/route.ts:// apps/web/src/app/api/retrieve/route.ts
diff --git a/apps/web/scripts/audit-state.mjs b/apps/web/scripts/audit-state.mjs
old mode 100644
new mode 100755
diff --git a/apps/web/scripts/ci_smoke.sh b/apps/web/scripts/ci_smoke.sh
new file mode 100755
index 0000000..3d3a14b
--- /dev/null
+++ b/apps/web/scripts/ci_smoke.sh
@@ -0,0 +1,96 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Локальный смок-тест RC-v1 для Freya/Rebecca.
+# Проверяет:
+#  1) /api/db-ping
+#  2) /api/admin/sql (SELECT 1) с ADMIN_KEY
+#  3) /api/retrieve (на ns/slot из БД) — что отдаёт items[]
+#
+# Требования окружения:
+#   BASE         — http://localhost:3000
+#   ADMIN_KEY    — dev-12345  (как в .env.local)
+#
+# Необязательно, но полезно:
+#   RETRIEVE_NS       — например "rebecca/army/refs"
+#   RETRIEVE_SLOT     — например "staging"
+#   RETRIEVE_QUERY    — строка запроса (по умолчанию "HTTP")
+#   RETRIEVE_TOPK     — по умолчанию 3
+#   RETRIEVE_CANDK    — по умолчанию 100
+#
+# Пример запуска:
+#   export BASE="http://localhost:3000"
+#   export ADMIN_KEY="dev-12345"
+#   ./scripts/ci_smoke.sh
+#
+# Код завершения !=0 при любой ошибке.
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY (dev-12345)}"
+
+RETRIEVE_NS="${RETRIEVE_NS:-}"
+RETRIEVE_SLOT="${RETRIEVE_SLOT:-}"
+RETRIEVE_QUERY="${RETRIEVE_QUERY:-HTTP}"
+RETRIEVE_TOPK="${RETRIEVE_TOPK:-3}"
+RETRIEVE_CANDK="${RETRIEVE_CANDK:-100}"
+
+say() { printf "\n\033[1;36m[SMOKE]\033[0m %s\n" "$*"; }
+fail() { printf "\n\033[1;31m[FAIL]\033[0m %s\n" "$*"; exit 1; }
+
+# 1) db-ping
+say "1) GET $BASE/api/db-ping"
+PING_JSON="$(curl -fsS "$BASE/api/db-ping" || true)"
+echo "$PING_JSON" | jq .
+echo "$PING_JSON" | jq -e '.ok == true' >/dev/null || fail "/api/db-ping not ok"
+
+# 2) admin sql: SELECT 1
+say "2) POST $BASE/api/admin/sql (SELECT 1)"
+jq -n '{ sql: "SELECT 1 AS ok" }' \
+| curl -fsS -X POST "$BASE/api/admin/sql" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @- | tee /tmp/smoke_sql.json >/dev/null
+
+cat /tmp/smoke_sql.json | jq -e '.ok == true' >/dev/null || fail "admin sql not ok"
+cat /tmp/smoke_sql.json | jq -e '.rows[0].ok == 1' >/dev/null || fail "admin sql rows mismatch"
+
+# 2.1) Если ns/slot не заданы, узнаем топовые из БД
+if [[ -z "$RETRIEVE_NS" || -z "$RETRIEVE_SLOT" ]]; then
+  say "2.1) Fetch top ns/slot from DB"
+  jq -n '{"sql":"SELECT ns, slot, COUNT(*) AS cnt FROM chunks GROUP BY ns, slot ORDER BY cnt DESC LIMIT 1;"}' \
+  | curl -fsS -X POST "$BASE/api/admin/sql" \
+    -H "content-type: application/json" \
+    -H "x-admin-key: $ADMIN_KEY" \
+    --data-binary @- > /tmp/smoke_ns.json
+
+  cat /tmp/smoke_ns.json | jq -e '.ok == true' >/dev/null || fail "cannot select ns/slot"
+  RETRIEVE_NS="$(cat /tmp/smoke_ns.json | jq -r '.rows[0].ns')"
+  RETRIEVE_SLOT="$(cat /tmp/smoke_ns.json | jq -r '.rows[0].slot')"
+
+  [[ -n "$RETRIEVE_NS" && -n "$RETRIEVE_SLOT" ]] || fail "ns/slot empty"
+  say "Using ns='$RETRIEVE_NS', slot='$RETRIEVE_SLOT'"
+fi
+
+# 3) retrieve
+say "3) POST $BASE/api/retrieve (q='$RETRIEVE_QUERY')"
+jq -n --arg q "$RETRIEVE_QUERY" --arg ns "$RETRIEVE_NS" --arg slot "$RETRIEVE_SLOT" \
+      --argjson topK "$RETRIEVE_TOPK" --argjson candK "$RETRIEVE_CANDK" \
+'{
+  q: $q,
+  ns: $ns,
+  slot: $slot,
+  nsMode: "prefix",
+  topK: $topK,
+  candidateK: $candK,
+  minSimilarity: 0,
+  include: ["url","title","content","score"],
+  debugVersion: true
+}' \
+| curl -fsS -X POST "$BASE/api/retrieve" \
+  -H "content-type: application/json" \
+  --data-binary @- > /tmp/smoke_retrieve.json
+
+cat /tmp/smoke_retrieve.json | jq '.items | length'
+cat /tmp/smoke_retrieve.json | jq -e '.items | length >= 1' >/dev/null || fail "retrieve returned no items"
+
+say "SMOKE OK ✅"
diff --git a/apps/web/scripts/contract/test_retrieve.sh b/apps/web/scripts/contract/test_retrieve.sh
new file mode 100644
index 0000000..c48f51d
--- /dev/null
+++ b/apps/web/scripts/contract/test_retrieve.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+BASE="${BASE:-http://localhost:3000}"
+
+pass() { echo "OK  - $1"; }
+fail() { echo "FAIL- $1"; exit 1; }
+
+# 1) valid body
+valid='{"q":"ping","ns":"rebecca/army/refs","slot":"staging","topK":1,"candidateK":1,"minSimilarity":0,"nsMode":"strict"}'
+resp_valid="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$valid")" || fail "valid POST failed (curl)"
+echo "$resp_valid" | jq -e '.items != null' >/dev/null 2>&1 && pass "valid JSON accepted" || fail "valid JSON not accepted"
+
+# 2) invalid body (нет q)
+invalid='{"ns":"rebecca/army/refs","slot":"staging","topK":1}'
+resp_invalid="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$invalid" || true)"
+echo "$resp_invalid" | jq -e 'has("error")' >/dev/null 2>&1 && pass "invalid JSON rejected with error" || fail "invalid JSON passed unexpectedly"
+
+# 3) optional domain allow
+with_domain='{"q":"event loop","ns":"rebecca/army/refs","slot":"staging","topK":3,"candidateK":100,"minSimilarity":0,"nsMode":"prefix","domainFilter":{"allow":["developer.mozilla.org"]}}'
+resp_domain="$(curl -sS -X POST "$BASE/api/retrieve" -H 'content-type: application/json' -d "$with_domain")" || fail "domain POST failed"
+echo "$resp_domain" | jq -e '.items != null' >/dev/null 2>&1 && pass "domain allow accepted" || fail "domain allow not accepted"
diff --git a/apps/web/scripts/db/maintenance.sh b/apps/web/scripts/db/maintenance.sh
new file mode 100755
index 0000000..8da9fa7
--- /dev/null
+++ b/apps/web/scripts/db/maintenance.sh
@@ -0,0 +1,4 @@
+#!/usr/bin/env bash
+set -euo pipefail
+: "${DATABASE_URL:?DATABASE_URL is required}"
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -f "$(dirname "$0")/maintenance.sql"
diff --git a/apps/web/scripts/db/maintenance.sql b/apps/web/scripts/db/maintenance.sql
new file mode 100644
index 0000000..8b32323
--- /dev/null
+++ b/apps/web/scripts/db/maintenance.sql
@@ -0,0 +1,5 @@
+-- ANALYZE target
+ANALYZE public.chunks;
+
+-- опционально: вакуум
+-- VACUUM (ANALYZE) public.chunks;
diff --git a/apps/web/scripts/diag/count_chunks.sql b/apps/web/scripts/diag/count_chunks.sql
new file mode 100644
index 0000000..f419bd2
--- /dev/null
+++ b/apps/web/scripts/diag/count_chunks.sql
@@ -0,0 +1,6 @@
+\pset pager off
+SELECT ns, slot, COUNT(*) AS cnt
+FROM chunks
+GROUP BY ns, slot
+ORDER BY cnt DESC, ns, slot
+LIMIT 200;
diff --git a/apps/web/scripts/diag/count_chunks_ns.ts b/apps/web/scripts/diag/count_chunks_ns.ts
new file mode 100644
index 0000000..bc34766
--- /dev/null
+++ b/apps/web/scripts/diag/count_chunks_ns.ts
@@ -0,0 +1,26 @@
+// scripts/diag/count_chunks_ns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+
+const pool = new Pool({ connectionString: url });
+
+async function main() {
+  const ns = process.env.NS || "rebecca/army/refs";
+  const like = ns.endsWith("%") ? ns : `${ns}%`;
+  const sql = `
+    select ns, count(*)::int as cnt
+    from chunks
+    where ns like $1
+    group by 1
+    order by cnt desc
+    limit 50
+  `;
+  const r = await pool.query(sql, [like]);
+  console.table(r.rows);
+  await pool.end();
+}
+main().catch(e => { console.error("DB error:", e); process.exit(1); });
diff --git a/apps/web/scripts/diag/count_memories.sql b/apps/web/scripts/diag/count_memories.sql
new file mode 100644
index 0000000..d91f223
--- /dev/null
+++ b/apps/web/scripts/diag/count_memories.sql
@@ -0,0 +1,9 @@
+\pset pager off
+SELECT
+  ns,
+  COALESCE(slot,'staging') AS slot,
+  COUNT(*) AS cnt
+FROM memories
+GROUP BY ns, COALESCE(slot,'staging')
+ORDER BY cnt DESC, ns, slot
+LIMIT 200;
diff --git a/apps/web/scripts/diag/count_memories_ns.ts b/apps/web/scripts/diag/count_memories_ns.ts
new file mode 100644
index 0000000..0122686
--- /dev/null
+++ b/apps/web/scripts/diag/count_memories_ns.ts
@@ -0,0 +1,26 @@
+// scripts/diag/count_memories_ns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+
+const pool = new Pool({ connectionString: url });
+
+async function main() {
+  const ns = process.env.NS || "rebecca/army/refs";
+  const like = ns.endsWith("%") ? ns : `${ns}%`;
+  const sql = `
+    select ns, count(*)::int as cnt
+    from memories
+    where ns like $1
+    group by 1
+    order by cnt desc
+    limit 50
+  `;
+  const r = await pool.query(sql, [like]);
+  console.table(r.rows);
+  await pool.end();
+}
+main().catch(e => { console.error("DB error:", e); process.exit(1); });
diff --git a/apps/web/scripts/diag/count_ns.sql b/apps/web/scripts/diag/count_ns.sql
new file mode 100644
index 0000000..1ae36cc
--- /dev/null
+++ b/apps/web/scripts/diag/count_ns.sql
@@ -0,0 +1,34 @@
+-- apps/web/scripts/diag/count_ns.sql
+\pset pager off
+
+-- if :ns не передан, используем пустую строку (значит "все ns")
+\if :{?ns}
+\else
+\set ns ''
+\endif
+
+-- добавим % в конец для префикс-поиска
+\set ns_pat :ns '%'
+
+-- 1) разрез по ns
+SELECT
+  ns,
+  COUNT(*)                                                     AS total,
+  COUNT(*) FILTER (WHERE slot='staging')                      AS staging,
+  COUNT(*) FILTER (WHERE slot='prod')                         AS prod,
+  COUNT(*) FILTER (WHERE url ILIKE '%developer.mozilla.org%') AS mdn,
+  COUNT(*) FILTER (WHERE url ILIKE '%arxiv.org%')             AS arxiv
+FROM chunks
+WHERE (:'ns' = '' OR ns LIKE :'ns_pat')
+GROUP BY ns
+ORDER BY ns;
+
+-- 2) общий итог
+SELECT
+  COUNT(*)                                                     AS total,
+  COUNT(*) FILTER (WHERE slot='staging')                      AS staging,
+  COUNT(*) FILTER (WHERE slot='prod')                         AS prod,
+  COUNT(*) FILTER (WHERE url ILIKE '%developer.mozilla.org%') AS mdn,
+  COUNT(*) FILTER (WHERE url ILIKE '%arxiv.org%')             AS arxiv
+FROM chunks
+WHERE (:'ns' = '' OR ns LIKE :'ns_pat');
diff --git a/apps/web/scripts/diag/count_ns.ts b/apps/web/scripts/diag/count_ns.ts
new file mode 100644
index 0000000..413d6e8
--- /dev/null
+++ b/apps/web/scripts/diag/count_ns.ts
@@ -0,0 +1,31 @@
+// scripts/diag/count_ns.ts
+// Запуск: node --experimental-strip-types scripts/diag/count_ns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+
+const pool = new Pool({ connectionString: url });
+
+async function main() {
+  const ns = process.env.NS || "rebecca/army/refs";
+  const like = ns.endsWith("%") ? ns : `${ns}%`;
+  const sql = `
+    select namespace, count(*) as cnt
+    from memories
+    where namespace like $1
+    group by 1
+    order by cnt desc
+    limit 50
+  `;
+  const r = await pool.query(sql, [like]);
+  console.table(r.rows);
+  await pool.end();
+}
+
+main().catch((e) => {
+  console.error("DB error:", e);
+  process.exit(1);
+});
diff --git a/apps/web/scripts/diag/list_columns.sh b/apps/web/scripts/diag/list_columns.sh
new file mode 100755
index 0000000..c6ee0a8
--- /dev/null
+++ b/apps/web/scripts/diag/list_columns.sh
@@ -0,0 +1,19 @@
+#!/usr/bin/env bash
+set -euo pipefail
+: "${DATABASE_URL:?set DATABASE_URL first}"
+
+TABLE="${1:-chunks}"
+
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off --quiet <<SQL
+SELECT
+  table_schema AS schema,
+  table_name   AS table,
+  ordinal_position AS pos,
+  column_name AS column,
+  data_type   AS type,
+  is_nullable AS nullable,
+  column_default
+FROM information_schema.columns
+WHERE table_schema='public' AND table_name='${TABLE}'
+ORDER BY ordinal_position;
+SQL
diff --git a/apps/web/scripts/diag/list_columns.sql b/apps/web/scripts/diag/list_columns.sql
new file mode 100644
index 0000000..47764da
--- /dev/null
+++ b/apps/web/scripts/diag/list_columns.sql
@@ -0,0 +1,15 @@
+-- Использование:
+--   psql "$DATABASE_URL" -v tbl='chunks' -f scripts/diag/list_columns.sql
+
+SELECT
+  c.table_schema AS schema,
+  c.table_name   AS table,
+  c.ordinal_position AS pos,
+  c.column_name  AS column,
+  c.data_type    AS type,
+  c.is_nullable  AS nullable,
+  c.column_default
+FROM information_schema.columns c
+WHERE c.table_schema = 'public'
+  AND c.table_name   = :'tbl'
+ORDER BY c.ordinal_position;
diff --git a/apps/web/scripts/diag/list_columns.ts b/apps/web/scripts/diag/list_columns.ts
new file mode 100644
index 0000000..d07fefa
--- /dev/null
+++ b/apps/web/scripts/diag/list_columns.ts
@@ -0,0 +1,27 @@
+// scripts/diag/list_columns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+
+const pool = new Pool({ connectionString: url });
+
+const CANDIDATE_TABLES = (process.env.CANDIDATE_TABLES || 'memories, memory, docs, documents, chunks, chunk, items')
+  .split(',')
+  .map(s => s.trim())
+  .filter(Boolean);
+
+async function main() {
+  const q = `
+    select table_name, column_name, data_type
+    from information_schema.columns
+    where table_schema='public' and table_name = any($1)
+    order by table_name, ordinal_position
+  `;
+  const r = await pool.query(q, [CANDIDATE_TABLES]);
+  console.table(r.rows);
+  await pool.end();
+}
+main().catch(e => { console.error("DB error:", e); process.exit(1); });
diff --git a/apps/web/scripts/diag/list_tables.sh b/apps/web/scripts/diag/list_tables.sh
new file mode 100755
index 0000000..6bb470d
--- /dev/null
+++ b/apps/web/scripts/diag/list_tables.sh
@@ -0,0 +1,13 @@
+#!/usr/bin/env bash
+set -euo pipefail
+: "${DATABASE_URL:?set DATABASE_URL first}"
+
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off <<'SQL'
+SELECT
+  schemaname AS schema,
+  tablename  AS table,
+  tableowner AS owner
+FROM pg_tables
+WHERE schemaname='public'
+ORDER BY tablename;
+SQL
diff --git a/apps/web/scripts/diag/list_tables.sql b/apps/web/scripts/diag/list_tables.sql
new file mode 100644
index 0000000..cb81f8e
--- /dev/null
+++ b/apps/web/scripts/diag/list_tables.sql
@@ -0,0 +1,8 @@
+-- Показать таблицы в public
+SELECT
+  schemaname  AS schema,
+  tablename   AS table,
+  tableowner  AS owner
+FROM pg_tables
+WHERE schemaname = 'public'
+ORDER BY 1,2;
diff --git a/apps/web/scripts/diag/slots_by_ns.ts b/apps/web/scripts/diag/slots_by_ns.ts
new file mode 100644
index 0000000..15b5437
--- /dev/null
+++ b/apps/web/scripts/diag/slots_by_ns.ts
@@ -0,0 +1,24 @@
+// scripts/diag/slots_by_ns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+const pool = new Pool({ connectionString: url });
+
+async function main() {
+  const ns = process.env.NS || "rebecca/army/refs";
+  const like = ns.endsWith("%") ? ns : `${ns}%`;
+  const sql = `
+    select slot, count(*)::int as cnt
+    from chunks
+    where ns like $1
+    group by 1
+    order by cnt desc, slot asc
+  `;
+  const r = await pool.query(sql, [like]);
+  console.table(r.rows);
+  await pool.end();
+}
+main().catch(e => { console.error("DB error:", e); process.exit(1); });
diff --git a/apps/web/scripts/diag/top_ns.ts b/apps/web/scripts/diag/top_ns.ts
new file mode 100644
index 0000000..4b39201
--- /dev/null
+++ b/apps/web/scripts/diag/top_ns.ts
@@ -0,0 +1,31 @@
+// scripts/diag/top_ns.ts
+import { Pool } from "pg";
+
+const url =
+  process.env.DATABASE_URL ||
+  process.env.PGURL ||
+  `postgres://${process.env.PGUSER || "postgres"}:${process.env.PGPASSWORD || ""}@${process.env.PGHOST || "localhost"}:${process.env.PGPORT || 5432}/${process.env.PGDATABASE || "postgres"}`;
+
+const pool = new Pool({ connectionString: url });
+
+async function main() {
+  const limit = Number(process.env.LIMIT || 20);
+
+  const q1 = `
+    select 'memories' as tbl, ns, count(*)::int as cnt
+    from memories group by 2 order by cnt desc limit $1
+  `;
+  const q2 = `
+    select 'chunks' as tbl, ns, count(*)::int as cnt
+    from chunks group by 2 order by cnt desc limit $1
+  `;
+  const [m, c] = await Promise.all([pool.query(q1, [limit]), pool.query(q2, [limit])]);
+
+  console.log("\n=== Top ns in memories ===");
+  console.table(m.rows);
+  console.log("\n=== Top ns in chunks ===");
+  console.table(c.rows);
+
+  await pool.end();
+}
+main().catch(e => { console.error("DB error:", e); process.exit(1); });
diff --git a/apps/web/scripts/e2e/bootstrap_demo.sh b/apps/web/scripts/e2e/bootstrap_demo.sh
new file mode 100755
index 0000000..8a7bfc8
--- /dev/null
+++ b/apps/web/scripts/e2e/bootstrap_demo.sh
@@ -0,0 +1,109 @@
+# apps/web/scripts/e2e/bootstrap_demo.sh
+#!/usr/bin/env bash
+set -euo pipefail
+
+WEB_DIR="$(cd "$(dirname "$0")/../../.." && pwd)/web"
+BASE="${BASE:-http://localhost:3000}"
+NS="${NS:-rebecca/army/refs}"
+SLOT="${SLOT:-staging}"
+
+# админ-ключ обязателен для /api/ingest/*
+ADMIN="${X_ADMIN_KEY:-${X_ADMIN_KEY_FILE:+$(cat "$X_ADMIN_KEY_FILE")}}"
+
+# локальный PDF (для удобства на WSL/Windows)
+LOCAL_PDF="${LOCAL_PDF:-}"
+
+echo "WEB_DIR=$WEB_DIR"
+echo "BASE=$BASE"
+echo "NS=$NS SLOT=$SLOT"
+
+if [[ -z "${ADMIN:-}" ]]; then
+  echo "ERROR: X_ADMIN_KEY не задан. Экспортни его (или X_ADMIN_KEY_FILE) и перезапусти." >&2
+  exit 1
+fi
+
+# маленький хелпер: POST JSON, печатаем код и тело; при 2xx — прогоняем через jq
+post_json () {
+  local endpoint="$1"; shift
+  local json="$1"; shift
+
+  local tmp="$(mktemp)"
+  local code
+  code=$(curl -sS -o "$tmp" -w '%{http_code}' \
+    -X POST "$BASE$endpoint" \
+    -H 'content-type: application/json' \
+    -H "x-admin-key: ${ADMIN}" \
+    --data "$json" || true)
+
+  if [[ "$code" =~ ^2 ]]; then
+    # корректный JSON → можно выборочно показать поля
+    jq . "$tmp"
+  else
+    echo "HTTP $code"
+    cat "$tmp"
+    rm -f "$tmp"
+    exit 1
+  fi
+  rm -f "$tmp"
+}
+
+# 0) подчистим
+echo ">> TRUNCATE chunks for ns=$NS slot=$SLOT"
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -c \
+  "DELETE FROM chunks WHERE ns = '$NS' AND slot = '$SLOT';"
+
+# 1) ingest URL (MDN)
+echo ">> ingest URL (MDN)"
+URL_BODY=$(jq -n \
+  --arg ns   "$NS" \
+  --arg slot "$SLOT" \
+  --argjson urls '[
+    "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop",
+    "https://developer.mozilla.org/en-US/docs/Web/API/Console/table",
+    "https://developer.mozilla.org/en-US/docs/Web/API/console/time"
+  ]' \
+  '{
+     ns: $ns, slot: $slot,
+     urls: $urls,
+     chunk: { chars: 1200, overlap: 150 }
+   }')
+post_json "/api/ingest/url" "$URL_BODY" | jq '{ok, textChunks, textInserted, textUpdated, failures}'
+
+# 2) ingest PDF (локалка или небольшой публичный PDF)
+PDF_URL="$LOCAL_PDF"
+if [[ -z "$PDF_URL" ]]; then
+  PDF_URL="https://arxiv.org/pdf/2402.19472.pdf"
+fi
+echo ">> ingest PDF ($PDF_URL)"
+PDF_BODY=$(jq -n \
+  --arg ns   "$NS" \
+  --arg slot "$SLOT" \
+  --arg url  "$PDF_URL" \
+  '{
+     ns: $ns, slot: $slot,
+     url: $url,
+     chunk: { chars: 1200, overlap: 150 }
+   }')
+post_json "/api/ingest/pdf" "$PDF_BODY" | jq '{ok, pages, chunks, textInserted, textUpdated}'
+
+# 3) ingest GitHub (малое окно)
+echo ">> ingest GitHub (openai/openai-cookbook, .md, limit 10)"
+GH_BODY=$(jq -n \
+  --arg ns   "$NS" \
+  --arg slot "$SLOT" \
+  '{
+     ns: $ns, slot: $slot,
+     owner: "openai", repo: "openai-cookbook",
+     includeExt: [".md"],
+     limit: 10,
+     chunk: { chars: 1200, overlap: 150 }
+   }')
+post_json "/api/ingest/github" "$GH_BODY" | jq '{ok, pageFiles, docs, textChunks, inserted, updated, nextCursor}'
+
+# 4) ANALYZE
+echo ">> ANALYZE chunks"
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -c "ANALYZE chunks;"
+
+# 5) сводка
+echo ">> summary:"
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -f "$WEB_DIR/scripts/diag/count_ns.sql"
diff --git a/apps/web/scripts/embed_backfill.sh b/apps/web/scripts/embed_backfill.sh
new file mode 100755
index 0000000..cb75542
--- /dev/null
+++ b/apps/web/scripts/embed_backfill.sh
@@ -0,0 +1,40 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/embed_backfill.sh rebecca/army/refs staging 300 16
+#   ./scripts/embed_backfill.sh "" "" 300 16        # без фильтров ns/slot
+#
+# Требования: BASE, ADMIN_KEY в окружении.
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY (dev-12345)}"
+
+NS="${1:-}"
+SLOT="${2:-}"
+LIMIT="${3:-200}"
+BATCH="${4:-16}"
+
+if [[ -n "$NS" && -n "$SLOT" ]]; then
+  jq -n \
+    --arg ns "$NS" \
+    --arg slot "$SLOT" \
+    --argjson limit "$LIMIT" \
+    --argjson batchSize "$BATCH" \
+    '{ ns:$ns, slot:$slot, limit:$limit, batchSize:$batchSize }' \
+  | curl -sS -X POST "$BASE/api/admin/embed-backfill" \
+      -H "content-type: application/json" \
+      -H "x-admin-key: $ADMIN_KEY" \
+      --data-binary @-
+else
+  jq -n \
+    --argjson limit "$LIMIT" \
+    --argjson batchSize "$BATCH" \
+    '{ limit:$limit, batchSize:$batchSize }' \
+  | curl -sS -X POST "$BASE/api/admin/embed-backfill" \
+      -H "content-type: application/json" \
+      -H "x-admin-key: $ADMIN_KEY" \
+      --data-binary @-
+fi
+
+echo
\ No newline at end of file
diff --git a/apps/web/scripts/evals/golden/rebecca_army_refs.jsonl b/apps/web/scripts/evals/golden/rebecca_army_refs.jsonl
new file mode 100644
index 0000000..ce84c55
--- /dev/null
+++ b/apps/web/scripts/evals/golden/rebecca_army_refs.jsonl
@@ -0,0 +1,8 @@
+{ "q": "Что такое микрозадачи (microtasks) в Event Loop и как они связаны с Promise?", "must_have": ["developer.mozilla.org", "html.spec.whatwg.org"], "k": 10 }
+{ "q": "Как работает console.time()/console.timeEnd() и есть ли ограничения по label?", "must_have": ["developer.mozilla.org"], "k": 10 }
+{ "q": "Как создать инициализационный агент GitHub Actions, который генерирует issue по шаблону?", "must_have": ["github.com", "docs.github.com"], "k": 10 }
+{ "q": "Какие ключевые отличия между queueMicrotask и process.nextTick?", "must_have": ["developer.mozilla.org", "nodejs.org"], "k": 10 }
+{ "q": "Что делает Console API метод console.groupCollapsed и как закрыть группу?", "must_have": ["developer.mozilla.org"], "k": 10 }
+{ "q": "Шаблон агента для веб-скрейпинга с ограничением домена: best practices?", "must_have": ["github.com", "chromedevtools.github.io"], "k": 10 }
+{ "q": "Порядок обработки задач: timers, pending, idle, poll, check, close — объясни на примере?", "must_have": ["nodejs.org"], "k": 10 }
+{ "q": "Есть ли у console.assert побочные эффекты и как правильно формировать условие?", "must_have": ["developer.mozilla.org"], "k": 10 }
diff --git a/apps/web/scripts/evals/run_eval.mjs b/apps/web/scripts/evals/run_eval.mjs
new file mode 100644
index 0000000..796c75a
--- /dev/null
+++ b/apps/web/scripts/evals/run_eval.mjs
@@ -0,0 +1,133 @@
+// Node >=18 (встроенный fetch). Читает JSONL кейсы, бьет /api/retrieve, считает hit@k и MRR.
+// BASE берется из env или дефолт http://localhost:3000
+import fs from "node:fs/promises";
+import path from "node:path";
+import { fileURLToPath } from "node:url";
+
+const __dirname = path.dirname(fileURLToPath(import.meta.url));
+
+const BASE = process.env.BASE?.trim() || "http://localhost:3000";
+const CASES = process.env.CASES?.trim() ||
+  path.join(__dirname, "sample_cases.jsonl");
+const OUT_MD = process.env.OUT_MD?.trim() ||
+  path.resolve(__dirname, "../../../docs/evals/latest.md");
+
+// маленький помощник: читать JSONL
+async function readJsonl(file) {
+  const txt = await fs.readFile(file, "utf8");
+  return txt.split(/\r?\n/).filter(Boolean).map((line, i) => {
+    try { return JSON.parse(line); } catch (e) {
+      throw new Error(`JSONL parse error at line ${i+1}: ${e.message}`);
+    }
+  });
+}
+
+// одно обращение к /api/retrieve
+async function retrieve({ q, ns, slot, k = 5, candidateK = 500 }) {
+  const body = {
+    q, ns, slot,
+    topK: k, candidateK,
+    minSimilarity: 0.0,
+    nsMode: "prefix",
+  };
+  const r = await fetch(`${BASE}/api/retrieve`, {
+    method: "POST",
+    headers: { "content-type": "application/json" },
+    body: JSON.stringify(body),
+  });
+  if (!r.ok) {
+    const t = await r.text().catch(()=> "");
+    throw new Error(`retrieve ${r.status} ${r.statusText}: ${t.slice(0,200)}`);
+  }
+  return await r.json();
+}
+
+// проверяем «успех» кейса
+function judge(caseItem, items) {
+  const k = caseItem.k ?? 5;
+  const urls = items.map(x => x.url || "");
+  // критерии: anyOfDomains ИЛИ substring ИЛИ регэкспы (любой, если указан)
+  const anyOfDomains = Array.isArray(caseItem.anyOfDomains) ? caseItem.anyOfDomains : [];
+  const substr = Array.isArray(caseItem.mustContain) ? caseItem.mustContain : [];
+  const regexes = Array.isArray(caseItem.mustMatch) ? caseItem.mustMatch.map(s => new RegExp(s)) : [];
+
+  // функция попадания для одного url
+  const okUrl = (u) => {
+    if (!u) return false;
+    if (anyOfDomains.length) {
+      try {
+        const h = new URL(u).hostname.toLowerCase();
+        if (anyOfDomains.some(d => h === d || h.endsWith(`.${d}`))) return true;
+      } catch{}
+    }
+    if (substr.length && substr.some(s => u.includes(s))) return true;
+    if (regexes.length && regexes.some(rx => rx.test(u))) return true;
+    return false;
+  };
+
+  // hit@k
+  const topK = urls.slice(0, k);
+  const hit = topK.some(okUrl) ? 1 : 0;
+
+  // MRR (reciprocal rank первого совпадения)
+  let rr = 0;
+  for (let i = 0; i < topK.length; i++) {
+    if (okUrl(topK[i])) { rr = 1 / (i + 1); break; }
+  }
+
+  // индекс первого совпадения (для отчета)
+  let firstIdx = -1;
+  for (let i = 0; i < topK.length; i++) {
+    if (okUrl(topK[i])) { firstIdx = i; break; }
+  }
+
+  return { hit, rr, firstIdx, topKUrls: topK };
+}
+
+async function main() {
+  const cases = await readJsonl(CASES);
+  if (!cases.length) throw new Error("no cases in JSONL");
+
+  const results = [];
+  for (const c of cases) {
+    const ns = c.ns || process.env.NS;
+    const slot = c.slot || process.env.SLOT || "staging";
+    if (!ns) throw new Error("case missing ns (or export NS=...)");
+
+    const res = await retrieve({ q: c.q, ns, slot, k: c.k ?? 5, candidateK: c.candidateK ?? 500 });
+    const judgeRes = judge(c, res.items || []);
+    results.push({ case: c, judge: judgeRes });
+  }
+
+  const n = results.length;
+  const hitAtK = results.reduce((s, r) => s + r.judge.hit, 0) / n;
+  const mrr   = results.reduce((s, r) => s + r.judge.rr, 0) / n;
+
+  // печать в консоль (кратко)
+  console.log(JSON.stringify({
+    n, hitAtK: Number(hitAtK.toFixed(4)), mrr: Number(mrr.toFixed(4))
+  }, null, 2));
+
+  // отчёт в Markdown
+  const lines = [];
+  lines.push(`# Retrieval Eval (RC v1)`);
+  lines.push(`Base: \`${BASE}\``);
+  lines.push(`Date: ${new Date().toISOString()}`);
+  lines.push(``);
+  lines.push(`**Cases:** ${n}`);
+  lines.push(`**hit@k:** ${hitAtK.toFixed(4)}`);
+  lines.push(`**MRR:** ${mrr.toFixed(4)}`);
+  lines.push(``);
+  lines.push(`| # | q | k | hit | rr | first_idx | topK urls |`);
+  lines.push(`|---|---|---:|---:|---:|---:|---|`);
+  results.forEach((r, i) => {
+    const { q, k } = { q: r.case.q, k: r.case.k ?? 5 };
+    const { hit, rr, firstIdx, topKUrls } = r.judge;
+    lines.push(`| ${i+1} | ${q.replace(/\|/g,"\\|")} | ${k} | ${hit} | ${rr.toFixed(3)} | ${firstIdx} | ${topKUrls.map(u=>u||"-").join("<br>")} |`);
+  });
+  lines.push(``);
+  await fs.mkdir(path.dirname(OUT_MD), { recursive: true });
+  await fs.writeFile(OUT_MD, lines.join("\n"), "utf8");
+}
+
+main().catch(err => { console.error(err); process.exit(1); });
diff --git a/apps/web/scripts/evals/run_eval.ts b/apps/web/scripts/evals/run_eval.ts
new file mode 100644
index 0000000..28b4754
--- /dev/null
+++ b/apps/web/scripts/evals/run_eval.ts
@@ -0,0 +1,144 @@
+// apps/web/scripts/evals/run_eval.ts
+import fs from "node:fs/promises";
+import path from "node:path";
+
+type Case = {
+  q: string;
+  // подсказка, как мы считаем "попадание"
+  must_url_substr?: string;
+
+  // per-case опции запроса
+  topK?: number;
+  candidateK?: number;
+  minSimilarity?: number;
+  nsMode?: "strict" | "prefix";
+  domainAllow?: string[];      // НОВОЕ: allow-домены для этого кейса
+  domainDeny?: string[];       // опционально
+};
+
+type RetrieveReq = {
+  q: string;
+  ns: string;
+  slot: string;
+  topK: number;
+  candidateK: number;
+  minSimilarity: number;
+  nsMode: "strict" | "prefix";
+  domainFilter?: { allow?: string[]; deny?: string[] };
+};
+
+const BASE = process.env.BASE || "http://localhost:3000";
+const NS   = process.env.NS   || "rebecca/army/refs";
+const SLOT = process.env.SLOT || "staging";
+const CASES = process.env.EVAL_CASES || "apps/web/scripts/evals/sample_cases.jsonl";
+const OUTMD = process.env.EVAL_REPORT || "apps/web/docs/evals/latest.md";
+
+async function readJsonl(file: string): Promise<Case[]> {
+  const abs = path.resolve(file);
+  const raw = await fs.readFile(abs, "utf8");
+  return raw
+    .split(/\r?\n/)
+    .map(l => l.trim())
+    .filter(Boolean)
+    .map(l => JSON.parse(l));
+}
+
+async function callRetrieve(req: RetrieveReq) {
+  const res = await fetch(`${BASE}/api/retrieve`, {
+    method: "POST",
+    headers: { "content-type": "application/json" },
+    body: JSON.stringify(req),
+  });
+  const j = await res.json();
+  if (!res.ok) {
+    throw new Error(`retrieve HTTP ${res.status}: ${JSON.stringify(j)}`);
+  }
+  return j;
+}
+
+function metricHitAtK(ranks: number[]): number {
+  // ranks: 1..K для попавших; 0 — промах
+  const hits = ranks.filter(x => x > 0).length;
+  return ranks.length ? hits / ranks.length : 0;
+}
+
+function metricMRR(ranks: number[]): number {
+  let s = 0;
+  for (const r of ranks) s += r > 0 ? 1 / r : 0;
+  return ranks.length ? s / ranks.length : 0;
+}
+
+function mdReport(now: Date, ranks: number[], rows: Array<{q:string; rank:number; url?:string; urls:string[];}>) {
+  const hitAtK = metricHitAtK(ranks);
+  const mrr    = metricMRR(ranks);
+  const lines: string[] = [];
+  lines.push(`# Eval report`);
+  lines.push(`Date: ${now.toISOString()}`);
+  lines.push(`NS: \`${NS}\`, slot: \`${SLOT}\`, base: \`${BASE}\``);
+  lines.push("");
+  lines.push(`**Summary:** n=${ranks.length}, hit@k=${hitAtK.toFixed(3)}, MRR=${mrr.toFixed(3)}`);
+  lines.push("");
+  lines.push(`| # | query | rank | top URLs |`);
+  lines.push(`|--:|-------|-----:|----------|`);
+  rows.forEach((r, i) => {
+    const show = r.urls.slice(0, 3).map(u => u.replace(/^https?:\/\//, "")).join("<br>");
+    lines.push(`| ${i+1} | ${r.q} | ${r.rank || 0} | ${show} |`);
+  });
+  lines.push("");
+  return lines.join("\n");
+}
+
+async function main() {
+  const cases = await readJsonl(CASES);
+  const ranks: number[] = [];
+  const rowsForMd: Array<{q:string; rank:number; url?:string; urls:string[];}> = [];
+
+  for (const c of cases) {
+    const req: RetrieveReq = {
+      q: c.q,
+      ns: NS,
+      slot: SLOT,
+      topK: c.topK ?? 5,
+      candidateK: c.candidateK ?? Math.max(200, c.topK ?? 5),
+      minSimilarity: c.minSimilarity ?? 0.0,
+      nsMode: c.nsMode ?? "prefix",
+    };
+    if ((c.domainAllow && c.domainAllow.length) || (c.domainDeny && c.domainDeny.length)) {
+      req.domainFilter = {};
+      if (c.domainAllow?.length) req.domainFilter.allow = c.domainAllow;
+      if (c.domainDeny?.length)  req.domainFilter.deny  = c.domainDeny;
+    }
+
+    const r = await callRetrieve(req);
+    const items: Array<{url?: string}> = Array.isArray(r?.items) ? r.items : [];
+    const urls = items.map(it => it?.url || "");
+
+    // ранк первой ссылки, содержащей must_url_substr (если задан)
+    let rank = 0;
+    if (c.must_url_substr) {
+      const needle = c.must_url_substr.toLowerCase();
+      const idx = urls.findIndex(u => (u || "").toLowerCase().includes(needle));
+      rank = idx >= 0 ? idx + 1 : 0;
+    } else {
+      // если критерий не задан — считаем попаданием, если вообще есть хоть одна ссылка
+      rank = urls.length > 0 ? 1 : 0;
+    }
+
+    ranks.push(rank);
+    rowsForMd.push({ q: c.q, rank, url: urls[rank-1], urls });
+  }
+
+  const now = new Date();
+  const out = { n: ranks.length, hitAtK: metricHitAtK(ranks), mrr: metricMRR(ranks) };
+  console.log(JSON.stringify(out, null, 2));
+
+  // markdown отчёт
+  const md = mdReport(now, ranks, rowsForMd);
+  await fs.mkdir(path.dirname(OUTMD), { recursive: true });
+  await fs.writeFile(OUTMD, md, "utf8");
+}
+
+main().catch(err => {
+  console.error(err);
+  process.exit(1);
+});
diff --git a/apps/web/scripts/evals/sample_cases.jsonl b/apps/web/scripts/evals/sample_cases.jsonl
new file mode 100644
index 0000000..3ec39db
--- /dev/null
+++ b/apps/web/scripts/evals/sample_cases.jsonl
@@ -0,0 +1,5 @@
+{"q":"event loop microtask","must_url_substr":"developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop","domainAllow":["developer.mozilla.org"]}
+{"q":"console.time usage","must_url_substr":"developer.mozilla.org/en-US/docs/Web/API/console/time","domainAllow":["developer.mozilla.org"]}
+{"q":"console.table example","must_url_substr":"developer.mozilla.org/en-US/docs/Web/API/Console/table","domainAllow":["developer.mozilla.org"]}
+{"q":"openai cookbook examples","must_url_substr":"github.com/openai/openai-cookbook","domainAllow":["github.com"]}
+{"q":"Mastering AI Agents","must_url_substr":"file://"}
diff --git a/apps/web/scripts/ingest_from_desktop.sh b/apps/web/scripts/ingest_from_desktop.sh
new file mode 100755
index 0000000..2b8b2a1
--- /dev/null
+++ b/apps/web/scripts/ingest_from_desktop.sh
@@ -0,0 +1,101 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# ==== ENV ====
+: "${BASE:=http://localhost:3000}"
+: "${X_ADMIN_KEY:?need X_ADMIN_KEY}"
+: "${NS:?need NS}"
+: "${SLOT:=staging}"
+export ADMIN_KEY="${ADMIN_KEY:-$X_ADMIN_KEY}"
+
+# ==== Windows Desktop in/out ====
+WIN_DESKTOP=$(wslpath "$(powershell.exe -NoProfile -Command "[Environment]::GetFolderPath('Desktop')" | tr -d '\r')")
+IN_DIR="${WIN_DESKTOP}/Rebecca_Ingest/in"
+OUT_DIR="${WIN_DESKTOP}/Rebecca_Ingest/out"
+mkdir -p "$IN_DIR" "$OUT_DIR"
+
+# ==== deps check ====
+need() { command -v "$1" >/dev/null 2>&1 || { echo "need $1"; exit 1; }; }
+need pandoc; need catdoc; need jq; need python3; need curl; need pdftotext
+
+# ==== tmp ====
+TMP_DIR=/tmp/rebecca_ingest
+TXT_DIR="$TMP_DIR/txt"
+rm -rf "$TMP_DIR"; mkdir -p "$TXT_DIR"
+
+# ==== convert .docx/.doc/.pdf -> .txt ====
+find "$IN_DIR" -maxdepth 1 -type f \( -iname '*.docx' -o -iname '*.doc' -o -iname '*.pdf' \) | while read -r f; do
+  bn="$(basename "$f")"; base="${bn%.*}"
+  if echo "$bn" | grep -qi '\.docx$'; then
+    pandoc -f docx -t plain "$f" -o "$TXT_DIR/$base.txt"
+  elif echo "$bn" | grep -qi '\.doc$'; then
+    catdoc "$f" > "$TXT_DIR/$base.txt" || true
+  else
+    pdftotext -layout "$f" "$TXT_DIR/$base.txt" || true
+    [ -s "$TXT_DIR/$base.txt" ] || rm -f "$TXT_DIR/$base.txt"
+  fi
+done
+
+# ==== build items (chunk ~1200, overlap 120, stable source_id by abs path) ====
+export TXT_DIR
+python3 - <<'PY' > /tmp/items.json
+import os, json, hashlib
+TXT_DIR=os.environ.get("TXT_DIR")
+CHARS=1200; OVER=120
+def chunks_for_text(s, ch=CHARS, ov=OVER):
+    out=[]; i=0; n=len(s); k=0
+    while i<n:
+        part=s[i:i+ch].strip()
+        if part: out.append({"chunk_no":k,"content":part})
+        if i+ch>=n: break
+        i+=ch-ov; k+=1
+    return out
+items=[]
+for fn in sorted(os.listdir(TXT_DIR)):
+    if not fn.lower().endswith(".txt"): continue
+    p=os.path.join(TXT_DIR,fn)
+    with open(p,'r',encoding='utf-8',errors='ignore') as f:
+        txt=f.read().replace('\r',' ').strip()
+    if not txt: continue
+    title=os.path.splitext(fn)[0]
+    abs_linux_path=os.path.abspath(p)
+    sid="text:"+hashlib.sha1(abs_linux_path.encode("utf-8")).hexdigest()[:16]
+    items.append({
+        "source_id": sid,
+        "url": None,
+        "title": title,
+        "source_type": "text",
+        "kind": "text",
+        "doc_metadata": {
+            "ingest":"seed","file":fn,
+            "chunk_chars":CHARS,"overlap":OVER,
+            "path_linux":abs_linux_path,
+            "content_sha1": hashlib.sha1(txt.encode("utf-8")).hexdigest()
+        },
+        "chunks": chunks_for_text(txt)
+    })
+print(json.dumps(items, ensure_ascii=False))
+PY
+
+
+# ---- auth self-check (dryRun) ----
+echo "[auth-check] Using X_ADMIN_KEY (len=${#X_ADMIN_KEY})"
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: ${X_ADMIN_KEY}" \
+  --data-binary '{"ns":"'"$NS"'","slot":"'"$SLOT"'","items":[{"source_id":"text:auth-selfcheck","url":null,"title":"Auth self-check","source_type":"text","kind":"text","doc_metadata":{},"chunks":[{"chunk_no":0,"content":"auth check chunk > 32 chars"}]}],"minChars":32,"dryRun":true}' \
+| jq '{ok,dryRun,error}'
+
+# ==== payload -> seed ====
+jq -n --arg ns "$NS" --arg slot "$SLOT" --slurpfile items /tmp/items.json \
+'{ ns:$ns, slot:$slot, items:$items[0], minChars:32, dryRun:false }' > /tmp/seed_batch.json
+
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: ${X_ADMIN_KEY}" \
+  --data-binary @/tmp/seed_batch.json \
+| tee "$OUT_DIR/seed_result.json" \
+| jq '{ok,textChunks,textInserted,textUpdated,unchanged,targetsCount,ms,error}'
+
+# ==== embeddings backfill ====
+bash ./scripts/embed_backfill.sh "$NS" "$SLOT" | tee "$OUT_DIR/embed_backfill.log"
diff --git a/apps/web/scripts/ingest_github.sh b/apps/web/scripts/ingest_github.sh
new file mode 100755
index 0000000..1b58ab2
--- /dev/null
+++ b/apps/web/scripts/ingest_github.sh
@@ -0,0 +1,83 @@
+# apps/web/scripts/ingest_github.sh
+#!/usr/bin/env bash
+set -euo pipefail
+
+BASE="${BASE:-http://localhost:3000}"
+ADMIN_KEY="${ADMIN_KEY:-${X_ADMIN_KEY:-}}"
+
+if [ $# -lt 3 ]; then
+  echo "Usage: $0 <ns> <slot> <owner/repo> [--ref <ref>] [--path <prefix>] [--include \".md,.txt\"] [--exclude \".png,.jpg\"] [--cursor N] [--limit M] [--dry] [--no-emb] [--chars N] [--overlap N]" >&2
+  exit 1
+fi
+
+ns="$1"; slot="$2"; or="$3"; shift 3
+owner="${or%%/*}"; repo="${or#*/}"
+
+ref="main"
+path=""
+include=""
+exclude=""
+cursor=""
+limit=""
+dry="false"
+noemb="false"
+chars=""
+overlap=""
+
+while [ $# -gt 0 ]; do
+  case "$1" in
+    --ref) ref="$2"; shift 2;;
+    --path) path="$2"; shift 2;;
+    --include) include="$2"; shift 2;;    # строка через запятую: ".md,.txt"
+    --exclude) exclude="$2"; shift 2;;
+    --cursor) cursor="$2"; shift 2;;
+    --limit) limit="$2"; shift 2;;
+    --dry) dry="true"; shift 1;;
+    --no-emb) noemb="true"; shift 1;;
+    --chars) chars="$2"; shift 2;;
+    --overlap) overlap="$2"; shift 2;;
+    *) echo "Unknown arg: $1" >&2; exit 1;;
+  esac
+done
+
+jq -n \
+  --arg ns "$ns" \
+  --arg slot "$slot" \
+  --arg owner "$owner" \
+  --arg repo "$repo" \
+  --arg ref "$ref" \
+  --arg path "$path" \
+  --arg include "$include" \
+  --arg exclude "$exclude" \
+  --arg cursor "$cursor" \
+  --arg limit "$limit" \
+  --arg dry "$dry" \
+  --arg noemb "$noemb" \
+  --arg chars "$chars" \
+  --arg overlap "$overlap" '
+{
+  ns:$ns, slot:$slot,
+  owner:$owner, repo:$repo, ref:$ref,
+}
++ ( ($path|length)>0 ? { path:$path } : {} )
++ ( ($include|length)>0 ? { includeExt: ($include|split(",")|map(.|gsub("^\\s+|\\s+$";""))) } : {} )
++ ( ($exclude|length)>0 ? { excludeExt: ($exclude|split(",")|map(.|gsub("^\\s+|\\s+$";""))) } : {} )
++ ( ($cursor|length)>0 ? { cursor: ($cursor|tonumber) } : {} )
++ ( ($limit|length)>0 ? { limit: ($limit|tonumber) } : {} )
++ ( ($dry == "true") ? { dryRun:true } : {} )
++ ( ($noemb == "true") ? { skipEmbeddings:true } : {} )
++ (
+    ( ($chars|length)>0 or ($overlap|length)>0 )
+    ? { chunk:
+        ( {}
+          + ( ($chars|length)>0 ? { chars: ($chars|tonumber) } : {} )
+          + ( ($overlap|length)>0 ? { overlap: ($overlap|tonumber) } : {} )
+        )
+      }
+    : {}
+  )
+' \
+| curl -sS -X POST "$BASE/api/ingest/github" \
+    -H "content-type: application/json" \
+    -H "x-admin-key: ${ADMIN_KEY}" \
+    --data-binary @-
diff --git a/apps/web/scripts/ingest_github_paged.sh b/apps/web/scripts/ingest_github_paged.sh
new file mode 100755
index 0000000..b1cc0b0
--- /dev/null
+++ b/apps/web/scripts/ingest_github_paged.sh
@@ -0,0 +1,161 @@
+# apps/web/scripts/ingest_github_paged.sh
+#!/usr/bin/env bash
+set -euo pipefail
+
+# --- Defaults ---
+APP="${APP:-$HOME/projects/freya-rebecca/apps/web}"
+BASE="${BASE:-http://localhost:3000}"
+NS="${NS:-rebecca/army/refs}"
+SLOT="${SLOT:-staging}"
+OWNER=""
+REPO=""
+REF="main"
+PATH_PREFIX=""
+INCLUDE_LIST=""    # ".md,.mdx,.py,.ipynb,.txt,.ts,.tsx"
+EXCLUDE_LIST=""    # optional
+LIMIT=200
+CURSOR=0
+DRYRUN="false"
+NOEMB="false"
+
+usage() {
+  cat <<EOF
+Usage:
+  $(basename "$0") --ns NS --slot SLOT --owner OWNER --repo REPO [--ref main] [--path subdir]
+                   [--include ".md,.mdx,.py,.ipynb,.txt"] [--exclude ".png,.pdf"]
+                   [--limit 200] [--cursor 0] [--dry-run] [--no-emb]
+Env:
+  APP  (default: $APP)
+  BASE (default: $BASE)
+  ADM  (x-admin-key; auto-read from \$APP/.env.local if empty)
+EOF
+}
+
+# --- Args ---
+while [[ $# -gt 0 ]]; do
+  case "$1" in
+    --ns) NS="$2"; shift 2;;
+    --slot) SLOT="$2"; shift 2;;
+    --owner) OWNER="$2"; shift 2;;
+    --repo) REPO="$2"; shift 2;;
+    --ref) REF="$2"; shift 2;;
+    --path) PATH_PREFIX="$2"; shift 2;;
+    --include) INCLUDE_LIST="$2"; shift 2;;
+    --exclude) EXCLUDE_LIST="$2"; shift 2;;
+    --limit) LIMIT="$2"; shift 2;;
+    --cursor) CURSOR="$2"; shift 2;;
+    --dry-run) DRYRUN="true"; shift 1;;
+    --no-emb) NOEMB="true"; shift 1;;
+    -h|--help) usage; exit 0;;
+    *) echo "Unknown arg: $1"; usage; exit 1;;
+  esac
+done
+
+# --- Admin header ---
+if [[ -z "${ADM:-}" ]]; then
+  if [[ -f "$APP/.env.local" ]]; then
+    ADM="x-admin-key: $(grep -E '^X_ADMIN_KEY=' "$APP/.env.local" | cut -d= -f2- || true)"
+  fi
+fi
+if [[ -z "${ADM:-}" ]]; then
+  echo "!! ADM (x-admin-key) not found. Export ADM or put X_ADMIN_KEY in $APP/.env.local"
+  exit 1
+fi
+
+# --- Normalize include/exclude into JSON arrays (strings -> ["a","b"]) ---
+include_json="null"
+exclude_json="null"
+if [[ -n "$INCLUDE_LIST" ]]; then
+  include_json=$(jq -nc --arg s "$INCLUDE_LIST" '$s|split(",")|map(.|gsub("^\\s+|\\s+$";""))')
+fi
+if [[ -n "$EXCLUDE_LIST" ]]; then
+  exclude_json=$(jq -nc --arg s "$EXCLUDE_LIST" '$s|split(",")|map(.|gsub("^\\s+|\\s+$";""))')
+fi
+
+echo ">>> Ingest: ns=$NS slot=$SLOT owner=$OWNER repo=$REPO ref=$REF limit=$LIMIT from cursor=$CURSOR dryRun=$DRYRUN noEmb=$NOEMB"
+echo "    BASE=$BASE APP=$APP"
+echo "    include=$INCLUDE_LIST exclude=$EXCLUDE_LIST"
+echo
+
+# --- checkpoint ---
+CKPT_DIR="$APP/.ingest_checkpoints"
+mkdir -p "$CKPT_DIR"
+CKPT="$CKPT_DIR/${OWNER}_${REPO}_${REF}.cursor"
+if [[ "$CURSOR" == "0" && -f "$CKPT" ]]; then
+  CURSOR="$(cat "$CKPT")"
+fi
+
+next="$CURSOR"
+total_inserted=0
+total_updated=0
+total_unchanged=0
+total_chunks=0
+total_emb=0
+page=0
+
+while :; do
+  # 1) базовый payload (только обязательные поля и числа как числа)
+  payload=$(jq -n \
+    --arg ns "$NS" --arg slot "$SLOT" \
+    --arg owner "$OWNER" --arg repo "$REPO" --arg ref "$REF" \
+    --argjson cursor "$next" --argjson limit "$LIMIT" \
+    '{ns:$ns,slot:$slot,owner:$owner,repo:$repo,ref:$ref,cursor:$cursor,limit:$limit}')
+
+  # 2) необязательные поля добавляем ПО ОДНОМУ, чтобы не городить jq-программу
+  if [[ -n "$PATH_PREFIX" ]]; then
+    payload=$(echo "$payload" | jq --arg path "$PATH_PREFIX" '. + {path:$path}')
+  fi
+  if [[ "$include_json" != "null" ]]; then
+    payload=$(echo "$payload" | jq --argjson include "$include_json" '. + {includeExt:$include}')
+  fi
+  if [[ "$exclude_json" != "null" ]]; then
+    payload=$(echo "$payload" | jq --argjson exclude "$exclude_json" '. + {excludeExt:$exclude}')
+  fi
+  if [[ "$DRYRUN" == "true" ]]; then
+    payload=$(echo "$payload" | jq '. + {dryRun:true}')
+  fi
+  if [[ "$NOEMB" == "true" ]]; then
+    payload=$(echo "$payload" | jq '. + {skipEmbeddings:true}')
+  fi
+
+  # 3) запрос
+  resp=$(curl -sS -X POST "$BASE/api/ingest/github" \
+    -H 'Content-Type: application/json' -H "$ADM" \
+    --data-binary "$payload")
+
+  ok=$(echo "$resp" | jq -r '.ok // false')
+  if [[ "$ok" != "true" ]]; then
+    echo "$resp" | jq .; echo "!! Error, stopping."
+    exit 1
+  fi
+
+  page=$((page+1))
+  totalFiles=$(echo "$resp" | jq -r '.totalFiles')
+  windowStart=$(echo "$resp" | jq -r '.windowStart')
+  windowEnd=$(echo "$resp" | jq -r '.windowEnd')
+  pageFiles=$(echo "$resp" | jq -r '.pageFiles')
+  textChunks=$(echo "$resp" | jq -r '.textChunks // 0')
+  inserted=$(echo "$resp" | jq -r '.textInserted // 0')
+  updated=$(echo "$resp" | jq -r '.textUpdated // 0')
+  same=$(echo "$resp" | jq -r '.unchanged // 0')
+  embw=$(echo "$resp" | jq -r '.embedWritten // 0')
+  ms=$(echo "$resp" | jq -r '.ms')
+  next=$(echo "$resp" | jq -r '.nextCursor')
+
+  total_chunks=$((total_chunks + textChunks))
+  total_inserted=$((total_inserted + inserted))
+  total_updated=$((total_updated + updated))
+  total_unchanged=$((total_unchanged + same))
+  total_emb=$((total_emb + embw))
+
+  echo ">>> Page #$page  files[$windowStart..$windowEnd] pageFiles=$pageFiles  chunks=$textChunks  ins=$inserted upd=$updated same=$same emb=$embw  time=${ms}ms"
+
+  if [[ "$next" != "null" && -n "$next" ]]; then
+    printf "%s" "$next" > "$CKPT"
+    sleep 1
+  else
+    rm -f "$CKPT"
+    echo ">>> Done. totalFiles=$totalFiles pages=$page chunks=$total_chunks ins=$total_inserted upd=$total_updated same=$total_unchanged emb=$total_emb"
+    exit 0
+  fi
+done
diff --git a/apps/web/scripts/ingest_many.sh b/apps/web/scripts/ingest_many.sh
new file mode 100755
index 0000000..363707a
--- /dev/null
+++ b/apps/web/scripts/ingest_many.sh
@@ -0,0 +1,61 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/ingest_many.sh rebecca/army/refs staging urls.txt
+#   ./scripts/ingest_many.sh rebecca/army/refs staging urls.txt --dry --no-emb
+#
+# Требуется окружение:
+#   BASE         (например http://localhost:3000)
+#   ADMIN_KEY    (или X_ADMIN_KEY — наш assertAdmin принимает оба)
+#
+# Формат urls.txt: по одному URL на строку, пустые и #комментарии игнорируются.
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY or set X_ADMIN_KEY and export ADMIN_KEY=...}"
+
+NS="${1:?need ns}"
+SLOT="${2:?need slot}"
+LIST="${3:?need path to file with URLs}"
+
+DRY=false
+NOEMB=false
+shift 3 || true
+while [[ $# -gt 0 ]]; do
+  case "$1" in
+    --dry) DRY=true ;;
+    --no-emb) NOEMB=true ;;
+    *) echo "Unknown flag: $1" >&2; exit 2 ;;
+  esac
+  shift
+done
+
+mapfile -t URLS < <(grep -vE '^\s*(#|$)' "$LIST" | sed 's/\r$//')
+if [[ ${#URLS[@]} -eq 0 ]]; then
+  echo "No URLs found in $LIST" >&2
+  exit 1
+fi
+
+# Грузим пачками по 10, чтобы не спамить сеть/модель
+BATCH=10
+i=0
+while [[ $i -lt ${#URLS[@]} ]]; do
+  CHUNK=( "${URLS[@]:$i:$BATCH}" )
+  i=$(( i + BATCH ))
+
+  jq -n --arg ns "$NS" --arg slot "$SLOT" \
+        --argjson dry "$([[ "$DRY" == true ]] && echo true || echo false)" \
+        --argjson noemb "$([[ "$NOEMB" == true ]] && echo true || echo false)" \
+        --argjson urls "$(printf '%s\n' "${CHUNK[@]}" | jq -R . | jq -s .)" \
+'{
+  ns: $ns,
+  slot: $slot,
+  urls: $urls,
+  dryRun: $dry,
+  skipEmbeddings: $noemb
+}' | curl -fsS -X POST "$BASE/api/ingest/url" \
+     -H "content-type: application/json" \
+     -H "x-admin-key: $ADMIN_KEY" \
+     --data-binary @- \
+  | jq '{ok, ns, slot, dryRun, skipEmbeddings, textChunks, textInserted, textUpdated, unchanged, embedWritten, ms}'
+done
diff --git a/apps/web/scripts/ingest_pdf.sh b/apps/web/scripts/ingest_pdf.sh
new file mode 100755
index 0000000..a772412
--- /dev/null
+++ b/apps/web/scripts/ingest_pdf.sh
@@ -0,0 +1,63 @@
+# apps/web/scripts/ingest_pdf.sh
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/ingest_pdf.sh NS SLOT URL                 # обычная загрузка
+#   ./scripts/ingest_pdf.sh NS SLOT URL --dry           # dry-run
+#   ./scripts/ingest_pdf.sh NS SLOT URL --no-emb        # пропустить эмбеддинги
+#   ./scripts/ingest_pdf.sh NS SLOT URL --max 20000000  # лимит размера PDF (байты)
+#   ./scripts/ingest_pdf.sh NS SLOT URL --chars 1200 --overlap 180
+#
+# Требуется окружение: BASE, ADMIN_KEY
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY}"
+
+NS="${1:?need ns}"
+SLOT="${2:?need slot}"
+URL="${3:?need pdf url}"
+shift 3 || true
+
+DRY=false
+NOEMB=false
+MAXBYTES=0
+CHARS=0
+OVERLAP=0
+
+while [[ $# -gt 0 ]]; do
+  case "$1" in
+    --dry) DRY=true ;;
+    --no-emb) NOEMB=true ;;
+    --max) shift; MAXBYTES="${1:?need number}" ;;
+    --chars) shift; CHARS="${1:?need number}" ;;
+    --overlap) shift; OVERLAP="${1:?need number}" ;;
+    *) echo "Unknown flag: $1" >&2; exit 2 ;;
+  esac
+  shift || true
+done
+
+make_chunk_json() {
+  local c="$1" o="$2"
+  jq -n --argjson c "${c:-0}" --argjson o "${o:-0}" '
+    (if $c>0 then {chars:$c} else {} end)
+    + (if $o>0 then {overlap:$o} else {} end)
+  '
+}
+
+CHUNK_JSON="$(make_chunk_json "$CHARS" "$OVERLAP")"
+
+jq -n \
+  --arg ns "$NS" --arg slot "$SLOT" --arg url "$URL" \
+  --argjson dry "$([[ "$DRY" == true ]] && echo true || echo false)" \
+  --argjson noemb "$([[ "$NOEMB" == true ]] && echo true || echo false)" \
+  --argjson max "$MAXBYTES" \
+  --argjson chunk "$CHUNK_JSON" '
+  { ns: $ns, slot: $slot, url: $url, dryRun: $dry, skipEmbeddings: $noemb }
+  | ( if ($max|tonumber) > 0 then . + { maxFileBytes: ($max|tonumber) } else . end )
+  | ( if ( ($chunk|type)=="object" and ($chunk|length)>0 ) then . + { chunk: $chunk } else . end )
+' \
+| curl -fsS -X POST "$BASE/api/ingest/pdf" \
+  -H "content-type: application/json" -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @- \
+| jq '{ok, ns, slot, url, dryRun, pages, textChunks, textInserted, textUpdated, unchanged, embedWritten, ms}'
diff --git a/apps/web/scripts/ingest_pdf_file.sh b/apps/web/scripts/ingest_pdf_file.sh
new file mode 100755
index 0000000..6d5a05c
--- /dev/null
+++ b/apps/web/scripts/ingest_pdf_file.sh
@@ -0,0 +1,66 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/ingest_pdf_file.sh NS SLOT /abs/path/to/file.pdf           # обычная загрузка
+#   ./scripts/ingest_pdf_file.sh NS SLOT /abs/path/to/file.pdf --dry     # dry-run
+#   ./scripts/ingest_pdf_file.sh NS SLOT /abs/path/to/file.pdf --no-emb  # без эмбеддингов
+#   ./scripts/ingest_pdf_file.sh NS SLOT /abs/path/to/file.pdf --chars 1200 --overlap 180
+# Требуется окружение: BASE, ADMIN_KEY (как для остальных скриптов)
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY}"
+
+NS="${1:?need ns}"
+SLOT="${2:?need slot}"
+PDF_PATH="${3:?need absolute path to local PDF}"
+shift 3 || true
+
+if [[ ! -f "$PDF_PATH" ]]; then
+  echo "File not found: $PDF_PATH" >&2
+  exit 1
+fi
+
+DRY=false
+NOEMB=false
+MAXBYTES=0
+CHARS=0
+OVERLAP=0
+
+while [[ $# -gt 0 ]]; do
+  case "$1" in
+    --dry) DRY=true ;;
+    --no-emb) NOEMB=true ;;
+    --max) shift; MAXBYTES="${1:?need number}" ;;
+    --chars) shift; CHARS="${1:?need number}" ;;
+    --overlap) shift; OVERLAP="${1:?need number}" ;;
+    *) echo "Unknown flag: $1" >&2; exit 2 ;;
+  esac
+  shift || true
+done
+
+make_chunk_json() {
+  local c="$1" o="$2"
+  jq -n --argjson c "${c:-0}" --argjson o "${o:-0}" '
+    (if $c>0 then {chars:$c} else {} end)
+    + (if $o>0 then {overlap:$o} else {} end)
+  '
+}
+
+CHUNK_JSON="$(make_chunk_json "$CHARS" "$OVERLAP")"
+URL="file://$PDF_PATH"
+
+jq -n \
+  --arg ns "$NS" --arg slot "$SLOT" --arg url "$URL" \
+  --argjson dry "$([[ "$DRY" == true ]] && echo true || echo false)" \
+  --argjson noemb "$([[ "$NOEMB" == true ]] && echo true || echo false)" \
+  --argjson max "$MAXBYTES" \
+  --argjson chunk "$CHUNK_JSON" '
+  { ns: $ns, slot: $slot, url: $url, dryRun: $dry, skipEmbeddings: $noemb }
+  | ( if ($max|tonumber) > 0 then . + { maxFileBytes: ($max|tonumber) } else . end )
+  | ( if ( ($chunk|type)=="object" and ($chunk|length)>0 ) then . + { chunk: $chunk } else . end )
+' \
+| curl -fsS -X POST "$BASE/api/ingest/pdf" \
+  -H "content-type: application/json" -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @- \
+| jq '{ok, ns, slot, url, dryRun, pages, textChunks, textInserted, textUpdated, unchanged, embedWritten, ms}'
diff --git a/apps/web/scripts/ingest_readme_pdfs.sh b/apps/web/scripts/ingest_readme_pdfs.sh
new file mode 100755
index 0000000..57422eb
--- /dev/null
+++ b/apps/web/scripts/ingest_readme_pdfs.sh
@@ -0,0 +1,59 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+APP="${APP:-$HOME/projects/freya-rebecca/apps/web}"
+BASE="${BASE:-http://localhost:3000}"
+NS="${NS:-rebecca/army/refs}"
+SLOT="${SLOT:-staging}"
+OWNER="${OWNER:?-- set OWNER}"
+REPO="${REPO:?-- set REPO}"
+REF="${REF:-main}"
+LIMIT="${LIMIT:-30}"              # сколько URL отправлять за 1 запрос
+MAX_FILE_BYTES="${MAX_FILE_BYTES:-20000000}"
+
+# заголовок admin
+if [[ -z "${ADM:-}" ]]; then
+  if [[ -f "$APP/.env.local" ]]; then
+    ADM="x-admin-key: $(grep -E '^X_ADMIN_KEY=' "$APP/.env.local" | cut -d= -f2- || true)"
+  fi
+fi
+[[ -z "${ADM:-}" ]] && { echo "!! ADM not set"; exit 1; }
+
+echo ">>> Read README for $OWNER/$REPO@$REF ..."
+readme_json="$(curl -fsS "https://api.github.com/repos/$OWNER/$REPO/contents/README.md?ref=$REF")"
+content_b64="$(jq -r '.content // empty' <<<"$readme_json")"
+[[ -z "$content_b64" ]] && { echo "No README.md content"; exit 0; }
+readme_txt="$(printf '%s' "$content_b64" | tr -d '\n' | base64 -d)"
+
+# добываем все http(s) ссылки и фильтруем pdf
+mapfile -t pdfs < <(printf '%s\n' "$readme_txt" | \
+  grep -oE '(https?://[^ )>\"]+)' | \
+  sed 's/[),.;:]*$//' | \
+  grep -iE '\.pdf($|\?)' | sort -u)
+
+echo "found PDF links: ${#pdfs[@]}"
+((${#pdfs[@]}==0)) && exit 0
+
+# пачками шлём в /api/ingest/url
+cursor=0
+while (( cursor < ${#pdfs[@]} )); do
+  batch=( "${pdfs[@]:$cursor:$LIMIT}" )
+  cursor=$((cursor + ${#batch[@]} ))
+
+  printf '>>> Batch of %d\n' "${#batch[@]}"
+
+  # собираем JSON-массив
+  urls_json="$(printf '%s\n' "${batch[@]}" | jq -R . | jq -s .)"
+
+  curl -fsS -X POST "$BASE/api/ingest/url" \
+    -H 'Content-Type: application/json' -H "$ADM" \
+    --data-binary "$(jq -n \
+      --arg ns "$NS" \
+      --arg slot "$SLOT" \
+      --argjson urls "$urls_json" \
+      --argjson maxFileBytes "$MAX_FILE_BYTES" \
+      '{ns:$ns,slot:$slot,urls:$urls,maxFileBytes:$maxFileBytes}')"
+  echo
+done
+
+echo ">>> Done."
diff --git a/apps/web/scripts/ingest_url.sh b/apps/web/scripts/ingest_url.sh
new file mode 100755
index 0000000..996ee10
--- /dev/null
+++ b/apps/web/scripts/ingest_url.sh
@@ -0,0 +1,21 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/ingest_url.sh rebecca/army/refs staging https://www.rfc-editor.org/rfc/rfc2616
+# Требования: BASE, X_ADMIN_KEY в окружении.
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${X_ADMIN_KEY:?need X_ADMIN_KEY from .env.local}"
+
+NS="${1:?need ns}"
+SLOT="${2:?need slot}"
+URL="${3:?need url}"
+
+jq -n --arg ns "$NS" --arg slot "$SLOT" --arg url "$URL" \
+  '{ ns:$ns, slot:$slot, urls:[$url], followRedirects:true }' \
+| curl -sS -X POST "$BASE/api/ingest/url" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: $X_ADMIN_KEY" \
+  --data-binary @-
+echo
diff --git a/apps/web/scripts/ingest_youtube.sh b/apps/web/scripts/ingest_youtube.sh
new file mode 100755
index 0000000..34b8fb0
--- /dev/null
+++ b/apps/web/scripts/ingest_youtube.sh
@@ -0,0 +1,98 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+BASE="${BASE:-http://localhost:3000}"
+ADMIN_KEY="${ADMIN_KEY:-${X_ADMIN_KEY:-}}"
+
+if [ $# -lt 3 ]; then
+  echo "Usage: $0 <ns> <slot> <video_url_or_id> [--lang <en|ru|...>] [--timestamps] [--dry] [--no-emb] [--chars N] [--overlap N]" >&2
+  exit 1
+fi
+
+ns="$1"; slot="$2"; v="$3"; shift 3
+lang=""
+timestamps="false"
+dry="false"
+noemb="false"
+chars=""
+overlap=""
+
+while [ $# -gt 0 ]; do
+  case "$1" in
+    --lang) lang="$2"; shift 2;;
+    --timestamps) timestamps="true"; shift 1;;
+    --dry) dry="true"; shift 1;;
+    --no-emb) noemb="true"; shift 1;;
+    --chars) chars="$2"; shift 2;;
+    --overlap) overlap="$2"; shift 2;;
+    *) echo "Unknown arg: $1" >&2; exit 1;;
+  esac
+done
+
+# простая проверка: это «чистый» 11-символьный ID или URL?
+videoId_field=""
+url_field=""
+if [[ "$v" =~ ^[A-Za-z0-9_-]{11}$ ]]; then
+  videoId_field="$v"
+else
+  url_field="$v"
+fi
+
+# собираем JSON Питоном (чтобы не зависеть от особенностей jq)
+payload="$(
+  NS="$ns" SLOT="$slot" VIDEOID="$videoId_field" URL="$url_field" LANG="$lang" \
+  DRY="$dry" NOEMB="$noemb" TIMESTAMPS="$timestamps" CHARS="$chars" OVERLAP="$overlap" \
+  python3 - <<'PY'
+import os, json
+
+def truthy(x): 
+    return str(x).lower() == "true"
+
+d = {
+    "ns":   os.environ["NS"],
+    "slot": os.environ["SLOT"],
+}
+
+vid = os.environ.get("VIDEOID","").strip()
+url = os.environ.get("URL","").strip()
+lang = os.environ.get("LANG","").strip()
+dry  = truthy(os.environ.get("DRY","false"))
+noem = truthy(os.environ.get("NOEMB","false"))
+tst  = truthy(os.environ.get("TIMESTAMPS","false"))
+chars = os.environ.get("CHARS","").strip()
+over  = os.environ.get("OVERLAP","").strip()
+
+if vid:
+    d["videoId"] = vid
+elif url:
+    d["url"] = url
+
+if lang:
+    d["lang"] = lang
+if dry:
+    d["dryRun"] = True
+if noem:
+    d["skipEmbeddings"] = True
+if tst:
+    d["includeTimestamps"] = True
+
+chunk = {}
+if chars:
+    try: chunk["chars"] = int(chars)
+    except: pass
+if over:
+    try: chunk["overlap"] = int(over)
+    except: pass
+if chunk:
+    d["chunk"] = chunk
+
+print(json.dumps(d, ensure_ascii=False))
+PY
+)"
+
+# отправляем
+curl -sS -X POST "$BASE/api/ingest/youtube" \
+  -H 'content-type: application/json' \
+  -H "x-admin-key: ${ADMIN_KEY}" \
+  --data-binary "$payload"
+echo
diff --git a/apps/web/scripts/ingest_youtube_via_seed.sh b/apps/web/scripts/ingest_youtube_via_seed.sh
new file mode 100755
index 0000000..ac6fa40
--- /dev/null
+++ b/apps/web/scripts/ingest_youtube_via_seed.sh
@@ -0,0 +1,213 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# ==== Требуемые переменные окружения ====
+: "${BASE:?need BASE, e.g. http://localhost:3000}"
+: "${X_ADMIN_KEY:?need X_ADMIN_KEY (из .env.local)}"
+: "${NS:?need NS, e.g. rebecca/army/refs}"
+: "${SLOT:=staging}"
+
+# Whisper fallback (только если нет субтитров):
+OPENAI_API_KEY="${OPENAI_API_KEY:-}"
+WHISPER_MODEL="${WHISPER_MODEL:-whisper-1}"
+
+URL="${1:-}"
+if [[ -z "$URL" ]]; then
+  echo "Usage: $0 <youtube_url_or_id>  [max_seconds]" >&2
+  exit 1
+fi
+MAX_SEC="${2:-900}"   # по умолчанию 15 минут
+
+# ==== Вспомогательные ====
+tmpdir="$(mktemp -d -t ytseed-XXXXXX)"
+cleanup() { rm -rf "$tmpdir" || true; }
+trap cleanup EXIT
+
+# Простая функция логов
+log(){ printf '[yt-seed] %s\n' "$*"; }
+
+# Извлечём ID (11 символов) из URL/ID
+ensure_id() {
+  local in="$1"
+  if [[ "$in" =~ ^[A-Za-z0-9_-]{11}$ ]]; then
+    echo "$in"; return 0
+  fi
+  # пробуем достать из v=...
+  if [[ "$in" =~ v=([A-Za-z0-9_-]{11}) ]]; then
+    echo "${BASH_REMATCH[1]}"; return 0
+  fi
+  # короткая форма youtu.be/ID
+  if [[ "$in" =~ youtu\.be/([A-Za-z0-9_-]{11}) ]]; then
+    echo "${BASH_REMATCH[1]}"; return 0
+  fi
+  return 1
+}
+
+VID="$(ensure_id "$URL" || true)"
+if [[ -z "$VID" ]]; then
+  echo "Cannot parse video id from: $URL" >&2
+  exit 1
+fi
+
+log "Video ID: $VID"
+work="$tmpdir/${VID}"
+mkdir -p "$work"
+
+# ==== 1) Пытаемся выкачать автосабы через yt-dlp ====
+log "Trying to fetch auto-subs (ru,en)..."
+set +e
+yt-dlp \
+  --skip-download \
+  --write-auto-subs \
+  --sub-lang "ru,en" \
+  --sub-format "vtt" \
+  -o "$work/%(id)s.%(ext)s" \
+  "https://www.youtube.com/watch?v=${VID}" \
+  >/dev/null 2>&1
+rc=$?
+set -e
+
+txt="$work/${VID}.txt"
+have_subs="0"
+
+for vtt in "$work/${VID}."*.vtt; do
+  if [[ -f "$vtt" ]]; then
+    log "Found subs: $(basename "$vtt") -> convert to txt"
+    python3 - "$vtt" "$txt" <<'PY'
+import sys, re
+vtt, out = sys.argv[1], sys.argv[2]
+def strip_vtt(text: str) -> str:
+    # убираем заголовки, таймкоды, веб-вебвтт метаданные
+    lines = []
+    for line in text.splitlines():
+        if line.startswith("WEBVTT"): continue
+        if re.match(r'^\d{2}:\d{2}:\d{2}\.\d{3}\s--> ', line): continue
+        if re.match(r'^\d+\s*$', line): continue
+        line = re.sub(r'<[^>]+>', '', line)  # html-теги
+        line = line.strip()
+        if line:
+            lines.append(line)
+    # иногда субтитры покадрово — склеиваем и убираем повторы
+    text = ' '.join(lines)
+    text = re.sub(r'\s+', ' ', text)
+    return text.strip()
+
+with open(vtt, 'r', encoding='utf-8', errors='ignore') as f:
+    raw = f.read()
+clean = strip_vtt(raw)
+with open(out, 'w', encoding='utf-8') as f:
+    f.write(clean + "\n")
+PY
+    if [[ -s "$txt" ]]; then
+      have_subs="1"
+      break
+    fi
+  fi
+done
+
+# ==== 2) Если субтитров нет — Whisper fallback ====
+if [[ "$have_subs" != "1" ]]; then
+  if [[ -z "$OPENAI_API_KEY" ]]; then
+    echo "No subs and OPENAI_API_KEY is empty. Cannot transcribe via Whisper." >&2
+    exit 1
+  fi
+  log "No subs. Extract audio and transcribe with Whisper..."
+
+  wav="$work/${VID}.wav"
+  # bestaudio -> wav 16k mono, обрезаем до MAX_SEC
+  ffmpeg -hide_banner -loglevel error \
+    -ss 0 -t "$MAX_SEC" \
+    -i "$(yt-dlp -f bestaudio --no-check-certificates -g "https://www.youtube.com/watch?v=${VID}")" \
+    -ac 1 -ar 16000 -vn -f wav "$wav"
+
+  log "Send to Whisper API..."
+  # multipart/form-data через curl
+  resp="$work/whisper.json"
+  curl -sS -X POST "https://api.openai.com/v1/audio/transcriptions" \
+    -H "Authorization: Bearer ${OPENAI_API_KEY}" \
+    -H "Content-Type: multipart/form-data" \
+    -F "model=${WHISPER_MODEL}" \
+    -F "response_format=text" \
+    -F "file=@${wav}" \
+    > "$txt"
+
+  if [[ ! -s "$txt" ]]; then
+    echo "Whisper transcription failed (empty output)" >&2
+    exit 1
+  fi
+fi
+
+# ==== 3) Чанкуем и готовим payload под /api/ingest/seed ====
+log "Chunking text..."
+chunks="$work/chunks.json"
+python3 - "$txt" "$chunks" <<'PY'
+import sys, json, re
+inp, outp = sys.argv[1], sys.argv[2]
+CHARS = 1200
+OVER  = 120
+with open(inp, 'r', encoding='utf-8', errors='ignore') as f:
+    txt = f.read()
+txt = re.sub(r'\s+', ' ', txt).strip()
+parts = []
+i = 0; k = 0
+n = len(txt)
+while i < n:
+    part = txt[i:i+CHARS].strip()
+    if part:
+        parts.append({"chunk_no": k, "content": part})
+        k += 1
+    if i + CHARS >= n: break
+    i += CHARS - OVER
+with open(outp, 'w', encoding='utf-8') as f:
+    json.dump(parts, f, ensure_ascii=False)
+PY
+
+if [[ ! -s "$chunks" ]]; then
+  echo "No chunks produced" >&2
+  exit 1
+fi
+
+# ==== 4) Собираем seed payload и шлём ====
+log "POST /api/ingest/seed ..."
+payload="$work/seed_payload.json"
+jq -n \
+  --arg ns "$NS" \
+  --arg slot "$SLOT" \
+  --arg sid "youtube:${VID}" \
+  --arg url "https://www.youtube.com/watch?v=${VID}" \
+  --arg title "$VID" \
+  --slurpfile ch "$chunks" \
+'{
+  ns: $ns,
+  slot: $slot,
+  items: [{
+    source_id: $sid,
+    url: $url,
+    title: $title,
+    source_type: "youtube",
+    kind: "youtube-seed",
+    doc_metadata: { ingest: "seed", note: "yt via seed" },
+    chunks: $ch[0]
+  }],
+  minChars: 32,
+  dryRun: false
+}' > "$payload"
+
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: $X_ADMIN_KEY" \
+  --data-binary @"$payload" | jq '{ok, textChunks, textInserted, textUpdated, unchanged, targetsCount, ms, error}'
+
+# ==== 5) Запишем эмбеддинги ====
+if [[ -d "$(dirname "$0")/.." ]]; then
+  pushd "$(dirname "$0")/.." >/dev/null
+  if [[ -x "./scripts/embed_backfill.sh" ]]; then
+    log "Running embed_backfill..."
+    ADMIN_KEY="${ADMIN_KEY:-$X_ADMIN_KEY}" ./scripts/embed_backfill.sh "$NS" "$SLOT" | jq .
+  else
+    log "Warning: scripts/embed_backfill.sh not found or not executable"
+  fi
+  popd >/dev/null
+fi
+
+log "Done."
diff --git a/apps/web/scripts/ingest_youtube_via_seed_whisper_only.sh b/apps/web/scripts/ingest_youtube_via_seed_whisper_only.sh
new file mode 100755
index 0000000..e2f7ac7
--- /dev/null
+++ b/apps/web/scripts/ingest_youtube_via_seed_whisper_only.sh
@@ -0,0 +1,140 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# ===== required env =====
+: "${BASE:?need BASE, e.g. http://localhost:3000}"
+: "${X_ADMIN_KEY:?need X_ADMIN_KEY (from .env.local)}"
+: "${NS:?need NS, e.g. rebecca/army/refs}"
+: "${SLOT:=staging}"
+: "${OPENAI_API_KEY:?need OPENAI_API_KEY (from .env.local)}"
+
+WHISPER_MODEL="${WHISPER_MODEL:-whisper-1}"
+
+URL="${1:-}"
+MAX_SEC="${2:-900}"   # default 15 min
+if [[ -z "$URL" ]]; then
+  echo "Usage: $0 <youtube_url_or_id> [max_seconds]" >&2
+  exit 1
+fi
+
+log(){ printf '[yt-whisper] %s\n' "$*"; }
+
+# extract 11-char video id
+ensure_id() {
+  local in="$1"
+  if [[ "$in" =~ ^[A-Za-z0-9_-]{11}$ ]]; then echo "$in"; return 0; fi
+  if [[ "$in" =~ v=([A-Za-z0-9_-]{11}) ]]; then echo "${BASH_REMATCH[1]}"; return 0; fi
+  if [[ "$in" =~ youtu\.be/([A-Za-z0-9_-]{11}) ]]; then echo "${BASH_REMATCH[1]}"; return 0; fi
+  return 1
+}
+
+VID="$(ensure_id "$URL" || true)"
+if [[ -z "$VID" ]]; then
+  echo "Cannot parse video id from: $URL" >&2
+  exit 1
+fi
+
+tmpdir="$(mktemp -d -t ytwhisper-XXXXXX)"
+trap 'rm -rf "$tmpdir"' EXIT
+work="$tmpdir/$VID"; mkdir -p "$work"
+
+log "Video ID: $VID"
+
+# bestaudio direct URL (yt-dlp), convert to wav 16k mono, trim to MAX_SEC
+log "Extracting audio via yt-dlp + ffmpeg (<= ${MAX_SEC}s)…"
+WAV="$work/${VID}.wav"
+ffmpeg -hide_banner -loglevel error \
+  -ss 0 -t "$MAX_SEC" \
+  -i "$(yt-dlp -f bestaudio --no-check-certificates -g "https://www.youtube.com/watch?v=${VID}")" \
+  -ac 1 -ar 16000 -vn -f wav "$WAV"
+
+# Whisper API
+log "Transcribing via Whisper API…"
+TXT="$work/${VID}.txt"
+curl -sS -X POST "https://api.openai.com/v1/audio/transcriptions" \
+  -H "Authorization: Bearer ${OPENAI_API_KEY}" \
+  -H "Content-Type: multipart/form-data" \
+  -F "model=${WHISPER_MODEL}" \
+  -F "response_format=text" \
+  -F "file=@${WAV}" \
+  > "$TXT"
+
+if [[ ! -s "$TXT" ]]; then
+  echo "Whisper transcription failed (empty output)" >&2
+  exit 1
+fi
+
+# Chunk text
+log "Chunking text…"
+CHUNKS="$work/chunks.json"
+python3 - "$TXT" "$CHUNKS" <<'PY'
+import sys, json, re
+inp, outp = sys.argv[1], sys.argv[2]
+CHARS = 1200
+OVER  = 120
+with open(inp, 'r', encoding='utf-8', errors='ignore') as f:
+    txt = f.read()
+txt = re.sub(r'\s+', ' ', txt).strip()
+parts = []
+i = 0; k = 0; n = len(txt)
+while i < n:
+    part = txt[i:i+CHARS].strip()
+    if part:
+        parts.append({"chunk_no": k, "content": part})
+        k += 1
+    if i + CHARS >= n: break
+    i += CHARS - OVER
+with open(outp, 'w', encoding='utf-8') as f:
+    json.dump(parts, f, ensure_ascii=False)
+PY
+
+if [[ ! -s "$CHUNKS" ]]; then
+  echo "No chunks produced" >&2
+  exit 1
+fi
+
+# Seed payload
+log "POST /api/ingest/seed …"
+PAYLOAD="$work/seed_payload.json"
+jq -n \
+  --arg ns "$NS" \
+  --arg slot "$SLOT" \
+  --arg sid "youtube:${VID}" \
+  --arg url "https://www.youtube.com/watch?v=${VID}" \
+  --arg title "$VID" \
+  --slurpfile ch "$CHUNKS" \
+'{
+  ns: $ns,
+  slot: $slot,
+  items: [{
+    source_id: $sid,
+    url: $url,
+    title: $title,
+    source_type: "youtube",
+    kind: "youtube-whisper",
+    doc_metadata: { ingest: "seed", note: "yt whisper only" },
+    chunks: $ch[0]
+  }],
+  minChars: 32,
+  dryRun: false
+}' > "$PAYLOAD"
+
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: $X_ADMIN_KEY" \
+  --data-binary @"$PAYLOAD" \
+  | jq '{ok, textChunks, textInserted, textUpdated, unchanged, targetsCount, ms, error}'
+
+# Backfill
+if [[ -d "$(dirname "$0")/.." ]]; then
+  pushd "$(dirname "$0")/.." >/dev/null
+  if [[ -x "./scripts/embed_backfill.sh" ]]; then
+    log "Running embed_backfill…"
+    ADMIN_KEY="${ADMIN_KEY:-$X_ADMIN_KEY}" ./scripts/embed_backfill.sh "$NS" "$SLOT" | jq .
+  else
+    log "Warning: scripts/embed_backfill.sh not found or not executable"
+  fi
+  popd >/dev/null
+fi
+
+log "Done."
diff --git a/apps/web/scripts/migrate-g0.js b/apps/web/scripts/migrate-g0.js
old mode 100644
new mode 100755
diff --git a/apps/web/scripts/migrate.sh b/apps/web/scripts/migrate.sh
new file mode 100755
index 0000000..5b0ecdf
--- /dev/null
+++ b/apps/web/scripts/migrate.sh
@@ -0,0 +1,37 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Абсолютные пути к scripts/ и scripts/migrations/
+SCRIPTS_DIR="$(cd "$(dirname "$0")" && pwd)"
+MIG_DIR="${SCRIPTS_DIR}/migrations"
+
+# Проверим переменные и psql
+: "${DATABASE_URL:?DATABASE_URL is not set (export it or source apps/web/.env.local)}"
+command -v psql >/dev/null || { echo "psql not found"; exit 1; }
+
+echo "== running migrations from: ${MIG_DIR}"
+
+# Базовые расширения (идемпотентно)
+psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off <<'SQL'
+CREATE EXTENSION IF NOT EXISTS vector;
+CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
+CREATE EXTENSION IF NOT EXISTS pgcrypto;
+SQL
+
+# Прогоним все G*.sql по алфавиту (G0_init.sql, G5_*.sql, и т.д.)
+shopt -s nullglob
+for f in "${MIG_DIR}"/G*.sql; do
+  echo "-- psql -f $(basename "$f")"
+  psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -f "$f"
+done
+shopt -u nullglob
+
+# (опционально) поставить дефолт для ivfflat.probes
+if [[ -n "${RETRIEVE_PROBES:-}" ]]; then
+  DBNAME="$(psql "$DATABASE_URL" -Atc 'select current_database()')"
+  psql "$DATABASE_URL" -v ON_ERROR_STOP=1 -P pager=off -c \
+    "ALTER DATABASE \"${DBNAME}\" SET ivfflat.probes = ${RETRIEVE_PROBES};"
+  echo "ivfflat.probes default -> ${RETRIEVE_PROBES}"
+fi
+
+echo "Migrations OK."
diff --git a/apps/web/scripts/migrations/20250927_content_hash_unique.sql b/apps/web/scripts/migrations/20250927_content_hash_unique.sql
new file mode 100644
index 0000000..5c334e8
--- /dev/null
+++ b/apps/web/scripts/migrations/20250927_content_hash_unique.sql
@@ -0,0 +1,32 @@
+-- 20250927_content_hash_unique.sql
+
+-- 0) расширение для digest()
+CREATE EXTENSION IF NOT EXISTS pgcrypto;
+
+-- 1) столбец content_hash (врем. NULL → затем backfill → NOT NULL)
+ALTER TABLE chunks
+  ADD COLUMN IF NOT EXISTS content_hash text;
+
+-- 2) backfill: детерминированный хеш по идентичности чанка + контенту
+--    sha256(ns|slot|source_id|chunk_no|content)
+UPDATE chunks
+SET content_hash = encode(digest(
+  coalesce(ns,'') || '|' ||
+  coalesce(slot,'') || '|' ||
+  coalesce(source_id,'') || '|' ||
+  chunk_no::text || '|' ||
+  coalesce(content,'')
+, 'sha256'), 'hex')
+WHERE content_hash IS NULL;
+
+-- 3) запрет NULL после backfill
+ALTER TABLE chunks
+  ALTER COLUMN content_hash SET NOT NULL;
+
+-- 4) строгая уникальность идентичности чанка
+CREATE UNIQUE INDEX IF NOT EXISTS chunks_unique_identity_idx
+  ON chunks (ns, slot, source_id, chunk_no);
+
+-- 5) полезные индексы
+CREATE INDEX IF NOT EXISTS chunks_ns_slot_created_at_idx
+  ON chunks (ns, slot, created_at DESC);
diff --git a/apps/web/scripts/migrations/G0_init.sql b/apps/web/scripts/migrations/G0_init.sql
new file mode 100644
index 0000000..d5ba0c2
--- /dev/null
+++ b/apps/web/scripts/migrations/G0_init.sql
@@ -0,0 +1,24 @@
+-- Схема и расширения (идемпотентно)
+CREATE EXTENSION IF NOT EXISTS vector;
+CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
+CREATE EXTENSION IF NOT EXISTS pgcrypto;
+
+CREATE TABLE IF NOT EXISTS public.chunks (
+  id            uuid PRIMARY KEY DEFAULT uuid_generate_v4(),
+  ns            text NOT NULL,
+  slot          text NOT NULL CHECK (slot IN ('staging','prod')),
+  content       text NOT NULL,
+  embedding     vector(1536) NOT NULL,
+  url           text,
+  title         text,
+  snippet       text,
+  published_at  timestamptz,
+  source_type   text,
+  kind          text,
+  metadata      jsonb NOT NULL DEFAULT '{}'::jsonb,
+  content_hash  text NOT NULL,
+  source_id     text,
+  chunk_no      integer NOT NULL,
+  created_at    timestamptz NOT NULL DEFAULT now(),
+  updated_at    timestamptz NOT NULL DEFAULT now()
+);
diff --git a/apps/web/scripts/migrations/G5_indexes_upserts.sql b/apps/web/scripts/migrations/G5_indexes_upserts.sql
new file mode 100644
index 0000000..9d6abc5
--- /dev/null
+++ b/apps/web/scripts/migrations/G5_indexes_upserts.sql
@@ -0,0 +1,17 @@
+-- Индексы и инварианты (идемпотентно)
+CREATE INDEX IF NOT EXISTS chunks_ns_slot_idx
+  ON public.chunks(ns, slot);
+
+CREATE INDEX IF NOT EXISTS chunks_ns_slot_published_idx
+  ON public.chunks(ns, slot, published_at DESC);
+
+CREATE INDEX IF NOT EXISTS chunks_metadata_gin_idx
+  ON public.chunks USING gin(metadata);
+
+-- ANN индекс по эмбеддингам
+CREATE INDEX IF NOT EXISTS chunks_embedding_ivfflat_idx
+  ON public.chunks USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);
+
+-- Ключ идемпотентности ingest
+CREATE UNIQUE INDEX IF NOT EXISTS chunks_unique_source_idx
+  ON public.chunks(ns, slot, COALESCE(source_id, ''), chunk_no);
diff --git a/apps/web/scripts/migrations/G6_make_embedding_nullable.sql b/apps/web/scripts/migrations/G6_make_embedding_nullable.sql
new file mode 100644
index 0000000..255b7ba
--- /dev/null
+++ b/apps/web/scripts/migrations/G6_make_embedding_nullable.sql
@@ -0,0 +1,2 @@
+ALTER TABLE chunks ALTER COLUMN embedding DROP NOT NULL;
+
diff --git a/apps/web/scripts/migrations/g5_backfill_chunks_from_memories.sql b/apps/web/scripts/migrations/g5_backfill_chunks_from_memories.sql
new file mode 100644
index 0000000..de53fb6
--- /dev/null
+++ b/apps/web/scripts/migrations/g5_backfill_chunks_from_memories.sql
@@ -0,0 +1,19 @@
+-- Бэκфилл chunks из memories по rebecca/army/refs*, без дублей по id
+
+-- 1) Индекс по ns (ускорит фильтрацию/вставку)
+CREATE INDEX IF NOT EXISTS idx_memories_ns ON public.memories(ns);
+
+-- 2) Вставляем недостающие записи
+INSERT INTO public.chunks (id, kind, ns, slot, content, embedding, metadata, created_at)
+SELECT m.id, m.kind, m.ns, m.slot, m.content, m.embedding, m.metadata, m.created_at
+FROM public.memories m
+LEFT JOIN public.chunks c ON c.id = m.id
+WHERE m.ns LIKE 'rebecca/army/refs%'
+  AND c.id IS NULL;
+
+-- 3) Индексы на chunks
+CREATE INDEX IF NOT EXISTS idx_chunks_ns ON public.chunks(ns);
+
+-- Если у тебя pgvector установлен и тип embedding = vector(...), раскомментируй строку ниже.
+-- Подбери операторный класс под твою метрику: vector_cosine_ops / vector_l2_ops / vector_ip_ops
+-- CREATE INDEX IF NOT EXISTS idx_chunks_embedding ON public.chunks USING ivfflat (embedding vector_cosine_ops) WITH (lists = 100);
diff --git a/apps/web/scripts/retrieve.sh b/apps/web/scripts/retrieve.sh
new file mode 100755
index 0000000..5a6603e
--- /dev/null
+++ b/apps/web/scripts/retrieve.sh
@@ -0,0 +1,98 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/retrieve.sh "HTTP methods" rebecca/army/refs staging 5 200
+#   ./scripts/retrieve.sh --lite "HTTP" rebecca/army/refs staging 5 100
+#   ./scripts/retrieve.sh --max 300 "HTTP methods" rebecca/army/refs staging 5 200
+#
+# Требуется:
+#   BASE=http://localhost:3000
+
+LITE=false
+MAX_CHARS=0
+
+# Флаги: --lite, --max N
+while [[ $# -gt 0 ]]; do
+  case "$1" in
+    --lite) LITE=true; shift ;;
+    --max)
+      shift
+      [[ $# -gt 0 ]] || { echo "Expected number after --max" >&2; exit 2; }
+      MAX_CHARS="$1"; shift ;;
+    *) break ;;
+  esac
+done
+
+: "${BASE:?need BASE like http://localhost:3000}"
+
+Q="${1:?need query string}"
+NS="${2:?need ns}"
+SLOT="${3:?need slot}"
+TOP="${4:-5}"
+CAND="${5:-200}"
+
+# Формируем include как JSON-массив через jq (без ручных кавычек)
+if [[ "$LITE" == true ]]; then
+  INCLUDE_JSON='["url","title","score"]'
+else
+  INCLUDE_JSON='["url","title","content","score"]'
+fi
+
+REQ="$(jq -n \
+  --arg q "$Q" \
+  --arg ns "$NS" \
+  --arg slot "$SLOT" \
+  --argjson top "$TOP" \
+  --argjson cand "$CAND" \
+  --argjson include "$INCLUDE_JSON" \
+'{
+  q: $q,
+  ns: $ns,
+  slot: $slot,
+  nsMode: "prefix",
+  topK: $top,
+  candidateK: $cand,
+  minSimilarity: 0,
+  include: $include,
+  debugVersion: true
+}')"
+
+echo -e "\n--- REQUEST ---"
+echo "$REQ" | jq .
+
+# Запрос: тело в файл, статус в переменную
+OUT="$(mktemp)"
+STATUS="$(curl -sS -o "$OUT" -w "%{http_code}" -X POST "$BASE/api/retrieve" \
+  -H "content-type: application/json" \
+  --data-binary @<(echo "$REQ"))"
+
+echo -e "\n--- RESPONSE (HTTP $STATUS) ---"
+cat "$OUT" | head -c 1000;  # показываем начало для наглядности
+echo
+
+if [[ "$STATUS" != "200" ]]; then
+  echo -e "\nRequest failed with HTTP $STATUS. Raw body above."
+  exit 1
+fi
+
+# Проверяем, что это объект с полем items
+if ! jq -e 'type=="object" and has("items")' "$OUT" >/dev/null 2>&1; then
+  echo -e "\nUnexpected response (no .items). Raw body:"
+  cat "$OUT"
+  exit 2
+fi
+
+# Парсинг и опциональная обрезка контента
+if [[ "$LITE" == true ]]; then
+  jq '{top: (.items|length), items: [.items[] | {score, url, title}]}' "$OUT"
+else
+  if [[ "$MAX_CHARS" -gt 0 ]]; then
+    jq --argjson max "$MAX_CHARS" \
+      '{top: (.items|length), items: [.items[] | {score, url, title, content: (.content|tostring|.[0:$max])}]}' "$OUT"
+  else
+    jq '{top: (.items|length), items: [.items[] | {score, url, title}]}' "$OUT"
+  fi
+fi
+
+rm -f "$OUT"
diff --git a/apps/web/scripts/run_admin_sql.sh b/apps/web/scripts/run_admin_sql.sh
new file mode 100755
index 0000000..e928868
--- /dev/null
+++ b/apps/web/scripts/run_admin_sql.sh
@@ -0,0 +1,22 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Использование:
+#   ./scripts/run_admin_sql.sh "SELECT 1;"
+# Требования: BASE, ADMIN_KEY в окружении.
+
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY (dev-12345 from .env.local)}"
+
+SQL="${1:-}"
+if [[ -z "$SQL" ]]; then
+  echo "Usage: $0 \"SELECT 1;\"" >&2
+  exit 1
+fi
+
+jq -n --arg sql "$SQL" '{sql:$sql}' \
+| curl -sS -X POST "$BASE/api/admin/sql" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @-
+echo
diff --git a/apps/web/scripts/smoke_pdf.sh b/apps/web/scripts/smoke_pdf.sh
new file mode 100755
index 0000000..daf3b97
--- /dev/null
+++ b/apps/web/scripts/smoke_pdf.sh
@@ -0,0 +1,49 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Быстрый self-check для /api/ingest/pdf
+# Требуется: BASE, ADMIN_KEY
+: "${BASE:?need BASE like http://localhost:3000}"
+: "${ADMIN_KEY:?need ADMIN_KEY}"
+
+NS="${1:-rebecca/army/refs}"
+SLOT="${2:-staging}"
+PDF_URL="${3:-https://arxiv.org/pdf/1706.03762.pdf}"
+
+echo "[SMOKE:PDF] 1) Dry-run…"
+jq -n --arg ns "$NS" --arg slot "$SLOT" --arg url "$PDF_URL" \
+'{
+  ns:$ns, slot:$slot, url:$url,
+  dryRun:true,
+  chunk:{chars:1200, overlap:180}
+}' \
+| curl -fsS -X POST "$BASE/api/ingest/pdf" \
+  -H "content-type: application/json" -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @- \
+| jq '{ok, textChunks, ms}'
+
+echo "[SMOKE:PDF] 2) Real ingest (no embeddings)…"
+jq -n --arg ns "$NS" --arg slot "$SLOT" --arg url "$PDF_URL" \
+'{
+  ns:$ns, slot:$slot, url:$url,
+  skipEmbeddings:true,
+  chunk:{chars:1200, overlap:180}
+}' \
+| curl -fsS -X POST "$BASE/api/ingest/pdf" \
+  -H "content-type: application/json" -H "x-admin-key: $ADMIN_KEY" \
+  --data-binary @- \
+| jq '{ok, textInserted, textUpdated, unchanged, embedWritten, ms}'
+
+echo "[SMOKE:PDF] 3) Backfill embeddings…"
+this_ns="$NS" this_slot="$SLOT"
+apps/web/scripts/embed_backfill.sh "$this_ns" "$this_slot" 100 16 || true
+
+echo "[SMOKE:PDF] 4) NULL embeddings by URL…"
+apps/web/scripts/run_admin_sql.sh "
+SELECT COUNT(*) AS nulls_by_url
+FROM chunks
+WHERE ns='${NS}'
+  AND slot='${SLOT}'
+  AND source_id='${PDF_URL}'
+  AND embedding IS NULL;
+"
diff --git a/apps/web/seed.json b/apps/web/seed.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/agents/rebecca.core.v1.json b/apps/web/seeds/agents/rebecca.core.v1.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/army/seed.json b/apps/web/seeds/army/seed.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/analyst.json b/apps/web/seeds/profiles/analyst.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/docs.json b/apps/web/seeds/profiles/docs.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/qa.json b/apps/web/seeds/profiles/qa.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/rag.json b/apps/web/seeds/profiles/rag.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/rebecca.profiles.v1.json b/apps/web/seeds/profiles/rebecca.profiles.v1.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/security.json b/apps/web/seeds/profiles/security.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/profiles/toolsmith.json b/apps/web/seeds/profiles/toolsmith.json
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/rebecca/01-architecture.md b/apps/web/seeds/rebecca/01-architecture.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/rebecca/02-rag-pipeline.md b/apps/web/seeds/rebecca/02-rag-pipeline.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/rebecca/03-prompts-style.md b/apps/web/seeds/rebecca/03-prompts-style.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/rebecca/04-kb-curation.md b/apps/web/seeds/rebecca/04-kb-curation.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/autogen.md b/apps/web/seeds/refs/agents/autogen.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/crewai.md b/apps/web/seeds/refs/agents/crewai.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/guardrails.md b/apps/web/seeds/refs/agents/guardrails.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/langgraph.md b/apps/web/seeds/refs/agents/langgraph.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/llamaindex.md b/apps/web/seeds/refs/agents/llamaindex.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/agents/openai-agents.md b/apps/web/seeds/refs/agents/openai-agents.md
old mode 100644
new mode 100755
diff --git a/apps/web/seeds/refs/seed.json b/apps/web/seeds/refs/seed.json
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/ingest/page.tsx b/apps/web/src/app/admin/ingest/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/logs/page.tsx b/apps/web/src/app/admin/logs/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/memory/page.tsx b/apps/web/src/app/admin/memory/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/playground/page.tsx b/apps/web/src/app/admin/playground/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/profiles/page.tsx b/apps/web/src/app/admin/profiles/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/admin/traces/page.tsx b/apps/web/src/app/admin/traces/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/_archive/20250914-235609/freya-initiative/route.ts b/apps/web/src/app/api/_archive/20250914-235609/freya-initiative/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/_archive/20250914-235609/memory-import/github/route.ts b/apps/web/src/app/api/_archive/20250914-235609/memory-import/github/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/_archive/20250914-235609/memory-import/plain/route.ts b/apps/web/src/app/api/_archive/20250914-235609/memory-import/plain/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/admin/echo/route.ts b/apps/web/src/app/api/admin/echo/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/admin/embed-backfill/route.ts b/apps/web/src/app/api/admin/embed-backfill/route.ts
new file mode 100644
index 0000000..1da142e
--- /dev/null
+++ b/apps/web/src/app/api/admin/embed-backfill/route.ts
@@ -0,0 +1,90 @@
+// apps/web/src/app/api/admin/embed-backfill/route.ts
+import { NextRequest, NextResponse } from "next/server";
+import { pool } from "@/lib/pg";
+import { embedMany } from "@/lib/embeddings";
+import { assertAdmin } from "@/lib/admin";
+
+export const runtime = "nodejs";
+export const dynamic = "force-dynamic";
+
+type Body = {
+  ns?: string | null;
+  slot?: string | null;
+  limit?: number;      // default 200
+  batchSize?: number;  // default 16
+};
+
+// Преобразуем массив чисел в литерал для pgvector: [0.1,0.2,...]
+function toVectorLiteral(vec: number[]): string {
+  return `[${vec.join(",")}]`;
+}
+
+export async function POST(req: NextRequest) {
+  try {
+    // единая проверка ключа: ADMIN_KEY + заголовок x-admin-key
+    assertAdmin(req);
+
+    const body = (await req.json().catch(() => ({}))) as Body;
+    const ns = (body.ns || "").trim();
+    const slot = (body.slot || "").trim();
+    const limit = Number.isFinite(body.limit) ? Math.max(1, Number(body.limit)) : 200;
+    const batchSize = Number.isFinite(body.batchSize) ? Math.max(1, Number(body.batchSize)) : 16;
+
+    // Собираем WHERE + параметры для pool.query
+    let where = "WHERE embedding IS NULL";
+    const params: any[] = [];
+    if (ns) {
+      params.push(ns);
+      where += ` AND ns = $${params.length}`;
+    }
+    if (slot) {
+      params.push(slot);
+      where += ` AND slot = $${params.length}`;
+    }
+
+    let processed = 0;
+    const startedAt = Date.now();
+
+    while (processed < limit) {
+      const take = Math.min(batchSize, limit - processed);
+
+      // SELECT c параметром LIMIT как $N
+      const selectParams = params.slice(); // копия
+      selectParams.push(take);
+      const selectSql = `
+        SELECT id, content
+        FROM chunks
+        ${where}
+        ORDER BY id
+        LIMIT $${selectParams.length}
+      `;
+      const sel = await pool.query<{ id: string; content: string }>(selectSql, selectParams);
+      const rows = sel.rows;
+      if (!rows.length) break;
+
+      // Эмбеддинги: ДОЛЖНЫ быть длины, соответствующей типу vector(N) в БД (у тебя N=383)
+      const texts = rows.map(r => String(r.content ?? ""));
+      const vectors = await embedMany(texts); // number[][]
+
+      // Обновляем по одному (каст к ::vector проверит размерность)
+      for (let i = 0; i < rows.length; i++) {
+        const id = rows[i].id;
+        const vec = vectors[i];
+        const vecLit = toVectorLiteral(vec);
+        await pool.query(
+          `UPDATE chunks SET embedding = $1::vector, updated_at = NOW() WHERE id = $2`,
+          [vecLit, id]
+        );
+        processed += 1;
+        if (processed >= limit) break;
+      }
+    }
+
+    const tookMs = Date.now() - startedAt;
+    return NextResponse.json({ ok: true, processed, tookMs });
+  } catch (err: any) {
+    const msg = err?.message || String(err);
+    const code = msg === "unauthorized" ? 401 : (msg === "ADMIN_KEY is not set" ? 500 : 500);
+    return NextResponse.json({ ok: false, error: msg }, { status: code });
+  }
+}
diff --git a/apps/web/src/app/api/admin/logs/list/route.ts b/apps/web/src/app/api/admin/logs/list/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/admin/sql/route.ts b/apps/web/src/app/api/admin/sql/route.ts
old mode 100644
new mode 100755
index 649c10e..3463e2b
--- a/apps/web/src/app/api/admin/sql/route.ts
+++ b/apps/web/src/app/api/admin/sql/route.ts
@@ -1,5 +1,7 @@
+// apps/web/src/app/api/admin/sql/route.ts
 import { NextRequest, NextResponse } from "next/server";
 import { q } from "@/lib/db";
+import { assertAdmin } from "@/lib/admin";
 
 export const runtime = "nodejs";
 
@@ -7,15 +9,13 @@ export const runtime = "nodejs";
 //  • SELECT
 //  • CREATE [UNIQUE] INDEX
 //  • CREATE TABLE IF NOT EXISTS eval_traces (...)
+// (как и раньше)
 const ALLOWED = /^\s*(?:select|create\s+(?:unique\s+)?index|create\s+table\s+if\s+not\s+exists\s+eval_traces)\b/i;
 
 export async function POST(req: NextRequest) {
   try {
-    const expect = process.env.ADMIN_KEY?.trim();
-    if (!expect) return NextResponse.json({ ok: false, error: "not found" }, { status: 404 });
-
-    const got = req.headers.get("x-admin-key")?.trim();
-    if (got !== expect) return NextResponse.json({ ok: false, error: "unauthorized" }, { status: 401 });
+    // единая проверка ключа: ADMIN_KEY + заголовок x-admin-key
+    assertAdmin(req);
 
     const body = await req.json().catch(() => ({}));
     const sql: string = String(body?.sql ?? "");
@@ -29,6 +29,8 @@ export async function POST(req: NextRequest) {
     const rows = await q<any>(sql);
     return NextResponse.json({ ok: true, rows });
   } catch (e: any) {
-    return NextResponse.json({ ok: false, error: e?.message ?? "sql failed" }, { status: 500 });
+    const msg = e?.message || "sql failed";
+    const code = msg === "unauthorized" ? 401 : (msg === "ADMIN_KEY is not set" ? 500 : 500);
+    return NextResponse.json({ ok: false, error: msg }, { status: code });
   }
 }
diff --git a/apps/web/src/app/api/admin/whoami/route.ts b/apps/web/src/app/api/admin/whoami/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/agents/save/route.ts b/apps/web/src/app/api/agents/save/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/debug/admin/route.ts b/apps/web/src/app/api/debug/admin/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/debug/env/route.ts b/apps/web/src/app/api/debug/env/route.ts
new file mode 100644
index 0000000..beb8f6b
--- /dev/null
+++ b/apps/web/src/app/api/debug/env/route.ts
@@ -0,0 +1,11 @@
+import { NextResponse } from "next/server";
+export const runtime = "nodejs";
+export const dynamic = "force-dynamic";
+export async function GET() {
+  const x = process.env.X_ADMIN_KEY || "";
+  const d = process.env.DATABASE_URL || "";
+  return NextResponse.json({
+    X_ADMIN_KEY: { len: x.length },
+    DATABASE_URL: { len: d.length, startsWith: d.slice(0, 16) }
+  });
+}
diff --git a/apps/web/src/app/api/debug/logs/route.ts b/apps/web/src/app/api/debug/logs/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/dev/db/create-logs/route.ts b/apps/web/src/app/api/dev/db/create-logs/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/chunks/route.ts b/apps/web/src/app/api/diag/chunks/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/emb-ping/route.ts b/apps/web/src/app/api/diag/emb-ping/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/gh-rate/route.ts b/apps/web/src/app/api/diag/gh-rate/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/github/route.ts b/apps/web/src/app/api/diag/github/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/llm/route.ts b/apps/web/src/app/api/diag/llm/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/mem-stats/route.ts b/apps/web/src/app/api/diag/mem-stats/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/diag/wipe-ns/route.ts b/apps/web/src/app/api/diag/wipe-ns/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/evals/smoke/route.ts b/apps/web/src/app/api/evals/smoke/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/evals/trace/route.ts b/apps/web/src/app/api/evals/trace/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/evals/traces/export/route.ts b/apps/web/src/app/api/evals/traces/export/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/evals/traces/route.ts b/apps/web/src/app/api/evals/traces/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/health/db/route.ts b/apps/web/src/app/api/health/db/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/health/env/route.ts b/apps/web/src/app/api/health/env/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/ingest/github/route.ts b/apps/web/src/app/api/ingest/github/route.ts
index a4744df..26ede19 100644
--- a/apps/web/src/app/api/ingest/github/route.ts
+++ b/apps/web/src/app/api/ingest/github/route.ts
@@ -1,49 +1,48 @@
 // apps/web/src/app/api/ingest/github/route.ts
 import { NextResponse } from "next/server";
 import { embedMany } from "@/lib/embeddings";
-import { upsertMemoriesBatch } from "@/lib/memories";
 import { chunkText, normalizeChunkOpts } from "@/lib/chunking";
+import { retryFetch } from "@/lib/retryFetch";
+import { assertAdmin } from "@/lib/admin";
+import { upsertChunksWithTargets, type IngestDoc } from "@/lib/ingest_upsert";
 
 export const runtime = "nodejs";
 export const dynamic = "force-dynamic";
 
 type Body = {
   ns: string;
-  slot?: string | null;
+  slot?: "staging" | "prod" | string | null;
   kind?: string | null;
+
   owner: string;
   repo: string;
-  ref?: string | null;          // branch or sha
-  path?: string | null;         // subdir filter (prefix)
-  includeExt?: string[] | null; // e.g. [".md",".mdx",".py",".ipynb",".txt"]
-  excludeExt?: string[] | null;
+  ref?: string | null;          // branch / tag / sha
+  path?: string | null;         // префикс каталога (фильтр)
+  includeExt?: string[] | null; // например [".md",".mdx",".py",".ipynb",".txt"]
+  excludeExt?: string[] | null; // что исключить
 
-  // НОВОЕ: пагинация
-  cursor?: number | null;       // смещение в отсортированном списке файлов (0..)
-  limit?: number | null;        // сколько файлов взять сейчас (дефолт 250)
+  cursor?: number | null;       // смещение
+  limit?: number | null;        // кол-во файлов на страницу (<= 250)
 
-  // НОВОЕ: "сухой прогон" — только посчитать/список, без скачивания/эмбеддингов
-  dryRun?: boolean | null;
+  dryRun?: boolean | null;         // только план без записи
+  skipEmbeddings?: boolean | null; // не считать эмбеддинги (для последующего backfill)
 
-  // стандартные опции чанкинга
   chunk?: { chars?: number; overlap?: number };
 };
 
-function assertAdmin(req: Request) {
-  const need = (process.env.X_ADMIN_KEY || "").trim();
-  if (!need) return;
-  const got = (req.headers.get("x-admin-key") || "").trim();
-  if (need && got !== need) throw new Error("unauthorized");
-}
-
 const GH = "https://api.github.com";
 const UA =
   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36";
 
-// мягкие лимиты на один ВЫЗОВ (страницу)
-const MAX_LIMIT_FILES     = 250;     // максимум файлов за один вызов (страницу)
-const MAX_FILE_BYTES      = 1_000_000; // пропускаем файлы >1 МБ
-const MAX_TOTAL_CHUNKS    = 3000;    // общий лимит чанков на один вызов
+// мягкие лимиты на вызов
+const MAX_LIMIT_FILES  = 250;
+const MAX_FILE_BYTES   = 1_000_000;
+const MAX_TOTAL_CHUNKS = 3000;
+
+// Параллелизм и батчи — можно крутить под свой кластер
+const FETCH_CONCURRENCY = Number(process.env.INGEST_FETCH_CONCURRENCY || 6);   // параллельных fetch к GitHub
+const EMBED_BATCH       = Number(process.env.INGEST_EMBED_BATCH || 128);       // документов на один вызов embedMany
+const BACKFILL_LIMIT    = Number(process.env.INGEST_BACKFILL_LIMIT || 5000);   // лимит на backfill NULL-эмбеддингов/страница
 
 async function gh<T = any>(url: string) {
   const headers: Record<string, string> = {
@@ -52,14 +51,53 @@ async function gh<T = any>(url: string) {
   };
   const tok = (process.env.GITHUB_TOKEN || "").trim();
   if (tok) headers["Authorization"] = `Bearer ${tok}`;
-  const res = await fetch(url, { headers, redirect: "follow" });
+  const res = await retryFetch(url, { headers, redirect: "follow" });
   if (!res.ok) {
     const text = await res.text().catch(() => "");
-    throw new Error(`GitHub ${res.status} ${res.statusText}: ${text.slice(0, 300)}`);
+    throw new Error(`GitHub ${res.status} ${res.statusText}: ${text.slice(0,300)}`);
   }
   return (await res.json()) as T;
 }
 
+async function resolveSha(owner: string, repo: string, ref?: string | null): Promise<{ sha: string; usedRef: string }> {
+  const want = (ref || "").trim();
+
+  // пусто → default_branch
+  if (!want) {
+    const info = await gh<{ default_branch: string }>(`${GH}/repos/${owner}/${repo}`);
+    const def = info.default_branch || "master";
+    const head = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/heads/${def}`);
+    return { sha: head.object.sha, usedRef: def };
+  }
+
+  // heads/<ref>
+  try {
+    const head = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/heads/${want}`);
+    return { sha: head.object.sha, usedRef: want };
+  } catch {}
+
+  // tags/<ref>
+  try {
+    const tag = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/tags/${want}`);
+    return { sha: tag.object.sha, usedRef: want };
+  } catch {}
+
+  // refs/<ref>
+  try {
+    const anyRef = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/${want}`);
+    return { sha: anyRef.object.sha, usedRef: want };
+  } catch {}
+
+  // уже sha?
+  if (/^[0-9a-f]{7,40}$/i.test(want)) return { sha: want, usedRef: want };
+
+  // fallback → default_branch
+  const info = await gh<{ default_branch: string }>(`${GH}/repos/${owner}/${repo}`);
+  const def = info.default_branch || "master";
+  const head = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/heads/${def}`);
+  return { sha: head.object.sha, usedRef: def };
+}
+
 function extOf(name: string) {
   const i = name.lastIndexOf(".");
   return i >= 0 ? name.slice(i).toLowerCase() : "";
@@ -74,11 +112,42 @@ function ipynbToText(nb: any): string {
   }
 }
 
+function chunkArray<T>(arr: T[], size: number): T[][] {
+  if (size <= 0) return [arr];
+  const out: T[][] = [];
+  for (let i = 0; i < arr.length; i += size) out.push(arr.slice(i, i + size));
+  return out;
+}
+
+async function mapWithConcurrency<I, O>(
+  items: I[],
+  limit: number,
+  fn: (item: I, index: number) => Promise<O>
+): Promise<O[]> {
+  if (limit <= 1) {
+    const out: O[] = [];
+    for (let i = 0; i < items.length; i++) out.push(await fn(items[i], i));
+    return out;
+  }
+  const results: O[] = new Array(items.length) as any;
+  let i = 0;
+  const runners = new Array(Math.min(limit, items.length)).fill(0).map(async () => {
+    while (true) {
+      const idx = i++;
+      if (idx >= items.length) break;
+      results[idx] = await fn(items[idx], idx);
+    }
+  });
+  await Promise.all(runners);
+  return results;
+}
+
 export async function POST(req: Request) {
-  const started = Date.now();
+  const t0 = Date.now();
   let stage = "init";
   try {
     assertAdmin(req);
+
     const {
       ns,
       slot = "staging",
@@ -89,42 +158,40 @@ export async function POST(req: Request) {
       path = "",
       includeExt,
       excludeExt,
-
       cursor = 0,
       limit = MAX_LIMIT_FILES,
       dryRun = false,
-
+      skipEmbeddings = false,
       chunk,
     } = (await req.json()) as Body;
 
     if (!ns || !owner || !repo) {
-      return NextResponse.json({ ok: false, error: "ns, owner, repo required" }, { status: 400 });
+      return NextResponse.json({ ok: false, stage, error: "ns, owner, repo required" }, { status: 400 });
     }
     const lim = Math.max(1, Math.min(Number(limit) || MAX_LIMIT_FILES, MAX_LIMIT_FILES));
     const cur = Math.max(0, Number(cursor) || 0);
+    const opts = normalizeChunkOpts(chunk);
 
-    // 1) определяем commit SHA
+    // 1) ref → sha
     stage = "ref";
-    let sha = "";
-    try {
-      const head = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/heads/${ref}`);
-      sha = head.object.sha;
-    } catch {
-      const anyRef = await gh<{ object: { sha: string } }>(`${GH}/repos/${owner}/${repo}/git/refs/${ref}`);
-      sha = anyRef.object.sha;
-    }
+    const { sha, usedRef } = await resolveSha(owner, repo, ref);
 
-    // 2) получаем дерево файлов, фильтруем и сортируем
+    // 2) дерево + фильтры
     stage = "tree";
     const tree = await gh<{ tree: { path: string; type: string; sha: string }[] }>(
       `${GH}/repos/${owner}/${repo}/git/trees/${sha}?recursive=1`
     );
 
+    // карта blobSha по пути
+    const blobShaByPath = new Map<string,string>();
+    for (const t of tree.tree) {
+      if (t.type === "blob") blobShaByPath.set(t.path, t.sha);
+    }
+
     const allowByExt = (name: string) => {
       const e = extOf(name);
       if (includeExt && includeExt.length && !includeExt.includes(e)) return false;
       if (excludeExt && excludeExt.includes(e)) return false;
-      // базовый отсев бинарников/медиа
       if ([".png",".jpg",".jpeg",".gif",".webp",".svg",".pdf",".zip",".tar",".gz",".7z",".mp4",".mp3"].includes(e)) return false;
       return true;
     };
@@ -140,120 +207,261 @@ export async function POST(req: Request) {
     const nextCursor = cur + pageFiles.length < totalFiles ? cur + pageFiles.length : null;
 
     if (dryRun) {
-      // Ничего не скачиваем/не пишем — только план
       return NextResponse.json({
         ok: true,
-        ns, slot, owner, repo, ref,
+        ns, slot, owner, repo, ref: usedRef,
         totalFiles,
         windowStart: cur,
         windowEnd: cur + pageFiles.length - 1,
         pageFiles: pageFiles.length,
         nextCursor,
-        ms: Date.now() - started,
-        preview: pageFiles.slice(0, 10), // маленький список для наглядности
+        ms: Date.now() - t0,
+        preview: pageFiles.slice(0, 10),
       });
     }
 
     if (!pageFiles.length) {
       return NextResponse.json({
         ok: true,
-        ns, slot, owner, repo, ref,
+        ns, slot, owner, repo, ref: usedRef,
         totalFiles,
         windowStart: cur,
         windowEnd: cur - 1,
         pageFiles: 0,
-        chunks: 0,
-        written: 0,
+        textChunks: 0,
+        textInserted: 0,
+        textUpdated: 0,
+        unchanged: 0,
+        embedWritten: 0,
         nextCursor,
-        ms: Date.now() - started,
+        ms: Date.now() - t0,
       });
     }
 
-    // 3) скачиваем контент выбранных файлов и чанк-ним (с ограничениями)
+    // 3) fetch + chunk (с ограничениями) + SKIP-FETCH + ПАРАЛЛЕЛИЗМ
     stage = "fetch+chunk";
-    const chunksAll: string[] = [];
-    const metas: any[] = [];
-    const opts = normalizeChunkOpts(chunk);
+    const docs: IngestDoc[] = [];
+    let producedChunks = 0;
 
-    for (const p of pageFiles) {
-      // метаданные и размер
-      const meta = await gh<{ size?: number; path: string }>(
-        `${GH}/repos/${owner}/${repo}/contents/${encodeURIComponent(p)}?ref=${ref}`
-      );
-      if ((meta as any)?.size && (meta as any).size > MAX_FILE_BYTES) continue;
-
-      const raw = await gh<{ content: string; encoding: string; path: string; size?: number }>(
-        `${GH}/repos/${owner}/${repo}/contents/${encodeURIComponent(p)}?ref=${ref}`
-      );
-
-      let text = "";
-      if (raw.encoding === "base64") {
-        const buf = Buffer.from(raw.content, "base64").toString("utf8");
-        if (extOf(raw.path) === ".ipynb") {
-          try { text = ipynbToText(JSON.parse(buf)); } catch { text = ""; }
-        } else {
-          text = buf;
+    const { pool } = await import("@/lib/pg");
+    const client = await pool.connect();
+
+    // sourceIds всей страницы — понадобятся для бэкофилла эмбеддингов даже при skip-fetch
+    const sourceIdsPage: string[] = pageFiles.map((p) => `github:${owner}/${repo}@${usedRef}:${p}`);
+
+    try {
+      // Обрабатываем файлы параллельно с лимитом FETCH_CONCURRENCY
+      const perFile = await mapWithConcurrency(pageFiles, FETCH_CONCURRENCY, async (p) => {
+        const blobSha = blobShaByPath.get(p) || null;
+
+        // если в БД уже есть чанки с таким же blob_sha — пропускаем скачивание
+        if (blobSha) {
+          const check = await client.query<{ exists: boolean }>(
+            `
+            SELECT EXISTS (
+              SELECT 1
+              FROM chunks
+              WHERE source_id = $1
+                AND (metadata->>'blob_sha') = $2
+              LIMIT 1
+            ) AS exists
+            `,
+            [`github:${owner}/${repo}@${usedRef}:${p}`, blobSha]
+          );
+          if (check.rows[0]?.exists) {
+            return { doc: null as IngestDoc | null, chunks: 0 };
+          }
+        }
+
+        // метаданные (размер)
+        const meta = await gh<{ size?: number; path: string }>(
+          `${GH}/repos/${owner}/${repo}/contents/${encodeURIComponent(p)}?ref=${usedRef}`
+        );
+        if ((meta as any)?.size && (meta as any).size > MAX_FILE_BYTES) {
+          return { doc: null, chunks: 0 };
         }
-      }
-      text = (text || "").trim();
-      if (!text) continue;
 
-      const parts = chunkText(text, opts);
-      for (const part of parts) {
-        chunksAll.push(part);
-        metas.push({
+        const raw = await gh<{ content: string; encoding: string; path: string; size?: number }>(
+          `${GH}/repos/${owner}/${repo}/contents/${encodeURIComponent(p)}?ref=${usedRef}`
+        );
+
+        let text = "";
+        if (raw.encoding === "base64") {
+          const buf = Buffer.from(raw.content, "base64").toString("utf8");
+          if (extOf(raw.path) === ".ipynb") {
+            try { text = ipynbToText(JSON.parse(buf)); } catch { text = ""; }
+          } else {
+            text = buf;
+          }
+        }
+        text = (text || "").trim();
+        if (!text) return { doc: null, chunks: 0 };
+
+        const parts = chunkText(text, opts);
+        if (!parts.length) return { doc: null, chunks: 0 };
+
+        const sourceUrl = `https://github.com/${owner}/${repo}/blob/${usedRef}/${raw.path}`;
+        const sourceId  = `github:${owner}/${repo}@${usedRef}:${raw.path}`;
+
+        const doc: IngestDoc = {
+          ns,
+          slot,
+          source_id: sourceId,
+          url: sourceUrl,
+          title: null,
+          published_at: null,
           source_type: "github",
-          owner, repo, ref, path: raw.path,
-          chunk: opts,
-          chunk_chars: part.length,
-        });
-        if (chunksAll.length >= MAX_TOTAL_CHUNKS) break;
+          kind: kind || "github",
+          doc_metadata: {
+            source_type: "github",
+            owner, repo, ref: usedRef, path: raw.path,
+            blob_sha: blobSha || null,
+            chunk: opts,
+            chunk_total: parts.length,
+          },
+          chunks: parts.map((content, i) => ({
+            content,
+            chunk_no: i,
+            metadata: {
+              source_type: "github",
+              owner, repo, ref: usedRef, path: raw.path,
+              blob_sha: blobSha || null,
+              chunk: opts,
+              chunk_chars: content.length,
+            },
+          })),
+        };
+
+        return { doc, chunks: parts.length };
+      });
+
+      // Собираем результаты, ограничиваем по MAX_TOTAL_CHUNKS
+      for (const r of perFile) {
+        if (!r?.doc) continue;
+        if (producedChunks + r.chunks > MAX_TOTAL_CHUNKS) {
+          // обрежем doc до остатка
+          const rest = MAX_TOTAL_CHUNKS - producedChunks;
+          if (rest <= 0) break;
+          const slim: IngestDoc = {
+            ...r.doc,
+            doc_metadata: { ...(r.doc.doc_metadata || {}), chunk_total: rest },
+            chunks: r.doc.chunks.slice(0, rest),
+          };
+          docs.push(slim);
+          producedChunks += rest;
+          break;
+        } else {
+          docs.push(r.doc);
+          producedChunks += r.chunks;
+        }
       }
-      if (chunksAll.length >= MAX_TOTAL_CHUNKS) break;
+    } finally {
+      // client оставляем открытым до окончания эмбеддингов
     }
 
-    if (!chunksAll.length) {
-      return NextResponse.json({
-        ok: true,
-        ns, slot, owner, repo, ref,
-        totalFiles,
-        windowStart: cur,
-        windowEnd: cur + pageFiles.length - 1,
-        pageFiles: pageFiles.length,
-        chunks: 0,
-        written: 0,
-        nextCursor,
-        ms: Date.now() - started,
-      });
-    }
+    // 4) upsert чанков с таргетами
+    stage = "db-upsert";
+    const { inserted, updated, targets, unchanged } = docs.length
+      ? await upsertChunksWithTargets(docs)
+      : { inserted: 0, updated: 0, targets: [] as {id: string, content: string}[], unchanged: 0 };
+
+    // 5) эмбеддинги (включая бэкофилл для embedding IS NULL) + БАТЧИ + Пакетный UPDATE
+    let embedWritten = 0;
+    if (!skipEmbeddings) {
+      stage = "embed+backfill";
+
+      type TargetRow = { id: string; content: string };
+      const targetRows: TargetRow[] = [];
+
+      // (а) изменившиеся/новые
+      for (const t of targets) targetRows.push({ id: t.id, content: t.content });
+
+      // (б) бэкофилл: null-эмбеддинги по всем source_id страницы
+      if (sourceIdsPage.length) {
+        const r = await client.query<TargetRow>(
+          `
+          SELECT id, content
+          FROM chunks
+          WHERE embedding IS NULL
+            AND source_id = ANY($1)
+          LIMIT $2
+        `,
+          [sourceIdsPage, BACKFILL_LIMIT]
+        );
+        for (const row of r.rows) {
+          if (!targetRows.find((x) => x.id === row.id)) targetRows.push(row);
+        }
+      }
 
-    // 4) эмбеддинги и запись
-    stage = "embed";
-    const vectors = await embedMany(chunksAll);
+      // Батчами считаем и пишем
+      const batches = chunkArray(targetRows, EMBED_BATCH);
+
+      for (const batch of batches) {
+        if (!batch.length) continue;
+
+        stage = "embed";
+        const vectorsRaw = await embedMany(batch.map((t) => t.content));
+
+        // → строка вида "[0.1,-0.2,...]" без пробелов
+        const toPgVector = (v: any): string => {
+          const arr: number[] = Array.isArray(v)
+            ? v.map((x) => Number(x))
+            : Array.isArray((v as any)?.embedding)
+            ? (v as any).embedding.map((x: any) => Number(x))
+            : [];
+          if (!arr.length) throw new Error("Empty embedding vector");
+          return `[${arr.join(",")}]`;
+        };
+
+        const ids: string[] = [];
+        const vecs: string[] = [];
+        for (let i = 0; i < batch.length; i++) {
+          ids.push(batch[i].id);
+          vecs.push(toPgVector((vectorsRaw as any)[i]));
+        }
 
-    stage = "db";
-    const records = chunksAll.map((content, i) => ({
-      kind: kind || "github",
-      ns, slot,
-      content,
-      embedding: vectors[i],
-      metadata: metas[i],
-    }));
+        // Пакетный апдейт одним запросом
+        stage = "db-embed";
+        await client.query("BEGIN");
+        try {
+          await client.query(
+            `
+            WITH data AS (
+              SELECT UNNEST($1::text[]) AS id, UNNEST($2::text[]) AS vec
+            )
+            UPDATE chunks c
+            SET embedding = data.vec::vector, updated_at = NOW()
+            FROM data
+            WHERE c.id = data.id
+            `,
+            [ids, vecs]
+          );
+          await client.query("COMMIT");
+          embedWritten += ids.length;
+        } catch (e) {
+          await client.query("ROLLBACK");
+          throw e;
+        }
+      }
+    }
 
-    // Важно: у тебя upsertMemoriesBatch возвращает number (сколько записей сделано)
-    const written: number = await upsertMemoriesBatch(records);
+    // Закрываем подключение
+    client.release();
 
     return NextResponse.json({
       ok: true,
-      ns, slot, owner, repo, ref,
+      ns, slot, owner, repo, ref: usedRef,
       totalFiles,
       windowStart: cur,
       windowEnd: cur + pageFiles.length - 1,
       pageFiles: pageFiles.length,
-      chunks: chunksAll.length,
-      written,
+      textChunks: producedChunks,
+      textInserted: inserted,
+      textUpdated: updated,
+      unchanged,
+      embedWritten,
       nextCursor,
-      ms: Date.now() - started,
+      ms: Date.now() - t0,
     });
   } catch (e: any) {
     return NextResponse.json({ ok: false, stage, error: e?.message || String(e) }, { status: 500 });
diff --git a/apps/web/src/app/api/ingest/pdf/route.ts b/apps/web/src/app/api/ingest/pdf/route.ts
index a52fedb..7d46a19 100644
--- a/apps/web/src/app/api/ingest/pdf/route.ts
+++ b/apps/web/src/app/api/ingest/pdf/route.ts
@@ -1,10 +1,11 @@
 // apps/web/src/app/api/ingest/pdf/route.ts
 import { NextResponse } from "next/server";
-import { embedMany } from "@/lib/embeddings";
-import { upsertMemoriesBatch } from "@/lib/memories";
+import { assertAdmin } from "@/lib/admin";
 import { chunkText, normalizeChunkOpts } from "@/lib/chunking";
-import fs from "node:fs/promises";
-import path from "node:path";
+import { upsertChunksWithTargets, type IngestDoc } from "@/lib/ingest_upsert";
+import { embedMany } from "@/lib/embeddings";
+import { pool } from "@/lib/pg";
+import { retryFetch } from "@/lib/retryFetch";
 
 export const runtime = "nodejs";
 export const dynamic = "force-dynamic";
@@ -12,94 +13,181 @@ export const dynamic = "force-dynamic";
 type Body = {
   ns: string;
   url: string;
-  slot?: string | null;
-  kind?: string | null;
+  slot?: "staging" | "prod" | string | null;
+  kind?: string | null;                 // "pdf" по умолчанию
   chunk?: { chars?: number; overlap?: number };
+  maxFileBytes?: number | null;         // лимит на размер PDF
+  dryRun?: boolean;                     // только посчитать чанки, без записи в БД
+  skipEmbeddings?: boolean;             // пропустить расчёт эмбеддингов
 };
 
-function assertAdmin(req: Request) {
-  const need = (process.env.X_ADMIN_KEY || "").trim();
-  if (!need) return;
-  const got = (req.headers.get("x-admin-key") || "").trim();
-  if (need && got !== need) throw new Error("unauthorized");
+// user-agent пригодится для некоторых источников
+const UA =
+  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36";
+
+async function importPdfParse(): Promise<(buf: Buffer) => Promise<any>> {
+  const mod: any = await import("pdf-parse");
+  const pdfParse = mod?.default ?? mod;
+  return (buf: Buffer) => pdfParse(buf);
 }
 
-async function fetchPdfAsBuffer(url: string): Promise<Buffer> {
-  // Локальный путь для отладки: url = file:///abs/path/to/file.pdf
+async function fetchAsBuffer(url: string, maxBytes?: number): Promise<Buffer> {
   if (url.startsWith("file://")) {
-    const p = url.replace("file://", "");
-    const abs = path.isAbsolute(p) ? p : path.join(process.cwd(), p);
-    return await fs.readFile(abs);
+    const { readFile } = await import("node:fs/promises");
+    return readFile(url.slice("file://".length));
   }
-
-  // HTTP(S)
-  const res = await fetch(url, { redirect: "follow" });
-  if (!res.ok) {
-    throw new Error(`fetch failed: ${res.status} ${res.statusText}`);
+  const r = await retryFetch(url, { redirect: "follow", headers: { "User-Agent": UA, Accept: "application/pdf,*/*" } });
+  if (!r.ok) throw new Error(`fetch failed: ${r.status} ${r.statusText}`);
+  // если тело доступно стримом — читаем с лимитом
+  const reader = r.body?.getReader();
+  if (!reader) return Buffer.from(await r.arrayBuffer());
+  const parts: Uint8Array[] = [];
+  let total = 0, limit = Number(maxBytes) || Infinity;
+  while (true) {
+    const { done, value } = await reader.read();
+    if (done) break;
+    if (value) {
+      total += value.byteLength;
+      if (total > limit) throw new Error(`response too large (${total} > ${limit})`);
+      parts.push(value);
+    }
   }
-  const ab = await res.arrayBuffer();
-  return Buffer.from(ab);
+  return Buffer.concat(parts);
+}
+
+// На случай, если pdf-parse не справился или источник капризный — Jina рендер
+async function fetchPdfViaJina(url: string): Promise<string> {
+  const enc = encodeURI(url).replace(/^https?:\/\//, "");
+  const jina = `https://r.jina.ai/https://${enc}`;
+  const r = await retryFetch(jina, { redirect: "follow", headers: { "User-Agent": UA } });
+  if (!r.ok) throw new Error(`Jina ${r.status} ${r.statusText}`);
+  return await r.text();
 }
 
-async function extractTextFromPdf(buf: Buffer): Promise<{ text: string; pages?: number }> {
-  // Импортируем напрямую lib-реализацию, минуя index.js с "debug mode"
-  const mod: any = await import("pdf-parse/lib/pdf-parse.js");
-  const pdfParse = mod?.default ?? mod; // совместимо с ESM/CJS
-  const out = await pdfParse(buf);
-  return { text: out.text || "", pages: out.numpages };
+function toVectorLiteral(vec: number[]): string {
+  return `[${vec.join(",")}]`;
 }
 
 export async function POST(req: Request) {
   const t0 = Date.now();
+  let stage: string = "init";
   try {
     assertAdmin(req);
-    const { ns, url, slot = "staging", kind = "pdf", chunk } = (await req.json()) as Body;
+    const body = (await req.json()) as Body;
+
+    const ns   = (body.ns || "").trim();
+    const url  = (body.url || "").trim();
+    const slot = ((body.slot || "staging") as "staging" | "prod");
+    const kind = (body.kind || "pdf");
+    const opts = normalizeChunkOpts(body.chunk);
+    const MAXB = Number.isFinite(Number(body.maxFileBytes)) ? Math.max(50_000, Number(body.maxFileBytes)) : undefined;
+    const dryRun = !!body.dryRun;
+    const skipEmb = !!body.skipEmbeddings;
+
     if (!ns || !url) {
-      return NextResponse.json({ ok: false, error: "ns and url are required" }, { status: 400 });
+      return NextResponse.json({ ok: false, stage, error: "ns and url are required" }, { status: 400 });
+    }
+    if (!["staging","prod"].includes(slot)) {
+      return NextResponse.json({ ok: false, stage, error: "slot must be 'staging'|'prod'" }, { status: 400 });
+    }
+
+    stage = "download";
+    let text = "";
+    let pages: number | undefined;
+
+    try {
+      const buf = await fetchAsBuffer(url, MAXB);
+      const pdfParse = await importPdfParse();
+      stage = "pdf-parse";
+      const out = await pdfParse(buf);
+      text  = (out?.text || "").replace(/\s+/g, " ").trim();
+      pages = out?.numpages;
+    } catch {
+      stage = "fallback-jina";
+      text = (await fetchPdfViaJina(url)).replace(/\s+/g, " ").trim();
     }
 
-    const buf = await fetchPdfAsBuffer(url);
-    const { text, pages } = await extractTextFromPdf(buf);
-    if (!text?.trim()) throw new Error("empty text extracted from PDF");
+    if (!text) {
+      return NextResponse.json({
+        ok: true, ns, slot, url, dryRun,
+        pages: pages ?? null,
+        textChunks: 0, textInserted: 0, textUpdated: 0, unchanged: 0, embedWritten: 0,
+        ms: Date.now() - t0,
+      });
+    }
 
-    const opts = normalizeChunkOpts(chunk);
-    const chunks = chunkText(text, opts);
-    if (!chunks.length) throw new Error("no chunks produced");
+    stage = "chunk";
+    const parts = chunkText(text, opts);
+    const textChunks = parts.length;
 
-    const vectors = await embedMany(chunks);
+    if (dryRun) {
+      return NextResponse.json({
+        ok: true, ns, slot, url, dryRun: true,
+        pages: pages ?? null,
+        textChunks, textInserted: 0, textUpdated: 0, unchanged: 0, embedWritten: 0,
+        ms: Date.now() - t0,
+      });
+    }
 
-    const records = chunks.map((content, i) => ({
-      kind: kind || "pdf",
+    stage = "db-upsert";
+    const doc: IngestDoc = {
       ns,
       slot,
-      content,
-      embedding: vectors[i],
-      metadata: {
+      source_id: url,              // единая политика: source_id = URL
+      url,
+      title: null,
+      published_at: null,
+      source_type: "pdf",
+      kind,
+      doc_metadata: {
         source_type: "pdf",
         url,
-        page_count: pages,
-        chunk_index: i,
-        chunk_chars: content.length,
+        page_count: pages ?? null,
         chunk: opts,
+        chunk_total: parts.length,
       },
-    }));
+      chunks: parts.map((content, i) => ({
+        content,
+        chunk_no: i,
+        metadata: {
+          source_type: "pdf",
+          url,
+          page_count: pages ?? null,
+          chunk: opts,
+          chunk_chars: content.length,
+        },
+      })),
+    };
+
+    const { inserted, updated, unchanged, targets } = await upsertChunksWithTargets([doc]);
+
+    stage = "embeddings";
+    let embedWritten = 0;
+    if (!skipEmb && targets.length) {
+      const contents = targets.map(t => t.content);
+      const vectors  = await embedMany(contents); // проверяет EMBED_DIMS=1536
+      for (let i = 0; i < targets.length; i++) {
+        const id  = targets[i].id;
+        const lit = toVectorLiteral(vectors[i]);
+        await pool.query(`UPDATE chunks SET embedding = $1::vector, updated_at = NOW() WHERE id = $2`, [lit, id]);
+        embedWritten += 1;
+      }
+    }
 
-    const { written, ids } = await upsertMemoriesBatch(records);
     return NextResponse.json({
-      ok: true,
-      ns,
-      slot,
-      url,
-      pages,
-      chunks: chunks.length,
-      written,
-      ids,
+      ok: true, ns, slot, url, dryRun: false,
+      pages: pages ?? null,
+      textChunks, textInserted: inserted, textUpdated: updated, unchanged, embedWritten,
       ms: Date.now() - t0,
     });
   } catch (e: any) {
     return NextResponse.json(
-      { ok: false, stage: "extract", error: e?.message || String(e) },
-      { status: 500 }
+      { ok: false, stage, error: e?.message || String(e) },
+      { status: e?.message === "unauthorized" ? 401 : 500 }
     );
   }
 }
+
+export function GET() {
+  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+}
diff --git a/apps/web/src/app/api/ingest/seed/route.ts b/apps/web/src/app/api/ingest/seed/route.ts
index 31fa8b9..58af1f2 100644
--- a/apps/web/src/app/api/ingest/seed/route.ts
+++ b/apps/web/src/app/api/ingest/seed/route.ts
@@ -1,77 +1,149 @@
+// apps/web/src/app/api/ingest/seed/route.ts
 import { NextResponse } from "next/server";
-import { embedMany } from "@/lib/embeddings";
-import { upsertMemoriesBatch } from "@/lib/memories";
-import { chunkText, normalizeChunkOpts } from "@/lib/chunking";
+import { upsertChunksWithTargets } from "@/lib/ingest_upsert";
 
-type SeedItem = {
-  title?: string;
+export const runtime = "nodejs";
+export const dynamic = "force-dynamic";
+
+type IngestChunk = {
+  chunk_no: number;
   content: string;
+  metadata?: Record<string, any>;
+};
+
+type IngestItem = {
+  source_id: string | null;
+  url: string | null;
+  title: string | null;
+  published_at?: string | null;
+  source_type?: string | null;
+  kind?: string | null;
+  doc_metadata?: Record<string, any>;
+  chunks: IngestChunk[];
 };
 
 type Body = {
   ns: string;
-  items: SeedItem[];
-  chunk?: { chars?: number; overlap?: number };
-  minChars?: number; // дефолт 64 — сиды бывают короткими
+  slot: "staging" | "prod" | (string & {});
+  items: IngestItem[];
+  minChars?: number;  // дефолт 64
+  dryRun?: boolean;   // совместимо со стилем других роутов
 };
 
 export async function POST(req: Request) {
-  const stage = { value: "init" as "init" | "validate" | "chunking" | "embedding" | "saving" };
+  const stage = { value: "init" as "init" | "validate" | "saving" };
+  const t0 = Date.now();
 
   try {
+    // admin guard — как в остальных инжестах
+    const adminKey = req.headers.get("x-admin-key") ?? "";
+    if (!process.env.X_ADMIN_KEY || adminKey !== process.env.X_ADMIN_KEY) {
+      return NextResponse.json({ ok: false, stage: null, error: "unauthorized" }, { status: 401 });
+    }
+
     const body = (await req.json()) as Body;
     const ns = body?.ns?.trim();
+    const slot = (body?.slot ?? "staging") as Body["slot"];
     const items = Array.isArray(body?.items) ? body.items : [];
+    const minChars = Number.isFinite(body?.minChars) ? Math.max(0, Number(body!.minChars)) : 64;
+    const dryRun = !!body?.dryRun;
 
-    if (!ns || items.length === 0) {
-      return NextResponse.json({ ok: false, error: "ns and items[] are required" }, { status: 400 });
+    if (!ns || !slot || items.length === 0) {
+      return NextResponse.json({ ok: false, stage: "validate", error: "ns, slot, items[] required" }, { status: 400 });
     }
 
     stage.value = "validate";
-    const minChars = Number.isFinite(body?.minChars) ? Math.max(0, Number(body!.minChars)) : 64;
+    // Приводим к формату IngestDoc[] (как у остальных инжестов)
+    const docs: Parameters<typeof upsertChunksWithTargets>[0] = [];
+    let textChunks = 0;
 
-    const texts: { content: string; meta: any }[] = [];
     for (const it of items) {
-      const title = it?.title?.trim();
-      const content = (it?.content ?? "").toString();
-      if (content.length < minChars) {
-        return NextResponse.json(
-          { ok: false, error: "content too short", stage: "validate", debug: { title, len: content.length } },
-          { status: 400 }
-        );
-      }
-      texts.push({ content, meta: { title } });
-    }
+      const source_id = it?.source_id ?? null;
+      const url = it?.url ?? null;
+      const title = it?.title ?? null;
+      const published_at = it?.published_at ?? null;
+      const source_type = it?.source_type ?? null;
+      const kind = it?.kind ?? null;
+      const docMeta = it?.doc_metadata ?? {};
+      const chunks = Array.isArray(it?.chunks) ? it!.chunks : [];
 
-    stage.value = "chunking";
-    const allChunks: { content: string; meta: any }[] = [];
-    for (const t of texts) {
-      const chunks = chunkText(t.content, body?.chunk);
       if (chunks.length === 0) {
         return NextResponse.json(
-          { ok: false, error: "Invalid after chunking", stage: "chunking", debug: t.meta },
+          { ok: false, stage: "validate", error: "item.chunks required", debug: { title, source_id, url } },
           { status: 400 }
         );
       }
-      chunks.forEach((c, idx) => allChunks.push({ content: c, meta: { ...t.meta, part: idx + 1 } }));
+
+      // в одном документе может быть несколько чанков (обычный кейс)
+      const preparedChunks: { chunk_no: number; content: string; metadata?: Record<string, any> }[] = [];
+
+      for (const ch of chunks) {
+        const content = (ch?.content ?? "").toString();
+        if (content.length < minChars) {
+          return NextResponse.json(
+            { ok: false, stage: "validate", error: "content too short", debug: { title, len: content.length } },
+            { status: 400 }
+          );
+        }
+        const chunk_no = Number(ch?.chunk_no);
+        if (!Number.isFinite(chunk_no) || chunk_no < 0) {
+          return NextResponse.json(
+            { ok: false, stage: "validate", error: "invalid chunk_no", debug: { title, chunk_no } },
+            { status: 400 }
+          );
+        }
+        preparedChunks.push({ chunk_no, content, metadata: ch?.metadata ?? {} });
+        textChunks += 1;
+      }
+
+      docs.push({
+        ns,
+        slot,
+        source_id,
+        url,
+        title,
+        published_at,
+        source_type,
+        kind,
+        doc_metadata: docMeta,
+        chunks: preparedChunks,
+      } as any);
     }
 
-    stage.value = "embedding";
-    const embeddings = await embedMany(allChunks.map((c) => c.content));
+    if (dryRun) {
+      return NextResponse.json({
+        ok: true,
+        ns,
+        slot,
+        dryRun: true,
+        textChunks,
+        textInserted: 0,
+        textUpdated: 0,
+        unchanged: 0,
+        ms: Date.now() - t0,
+      });
+    }
 
     stage.value = "saving";
-    const rows = allChunks.map((c, i) => ({
-      ns,
-      kind: "seed" as const,
-      content: c.content,
-      embedding: embeddings[i],
-      metadata: { ...c.meta, chunk: normalizeChunkOpts(body?.chunk) }
-    }));
+    const { inserted, updated, unchanged, targets } = await upsertChunksWithTargets(docs);
 
-    await upsertMemoriesBatch(rows as any);
-
-    return NextResponse.json({ ok: true, inserted: rows.length });
-  } catch (err: any) {
-    return NextResponse.json({ ok: false, error: err?.message || String(err), stage: stage.value }, { status: 500 });
+    const ms = Date.now() - t0;
+    return NextResponse.json({
+      ok: true,
+      ns,
+      slot,
+      dryRun: false,
+      textChunks,
+      textInserted: inserted,
+      textUpdated: updated,
+      unchanged,
+      targetsCount: targets.length, // id+content для эмбеддингов — твой пайп их подберёт
+      ms,
+    });
+  } catch (e: any) {
+    return NextResponse.json(
+      { ok: false, stage: stage.value, error: e?.message || String(e) },
+      { status: 500 }
+    );
   }
 }
diff --git a/apps/web/src/app/api/ingest/url/route.ts b/apps/web/src/app/api/ingest/url/route.ts
index 51d148a..a1be389 100644
--- a/apps/web/src/app/api/ingest/url/route.ts
+++ b/apps/web/src/app/api/ingest/url/route.ts
@@ -1,31 +1,40 @@
 // apps/web/src/app/api/ingest/url/route.ts
 import { NextResponse } from "next/server";
-import { embedMany } from "@/lib/embeddings";
-import { upsertMemoriesBatch } from "@/lib/memories";
 import { chunkText, normalizeChunkOpts } from "@/lib/chunking";
+import { upsertChunksWithTargets, type IngestDoc } from "@/lib/ingest_upsert";
+import { retryFetch } from "@/lib/retryFetch";
+import { assertAdmin } from "@/lib/admin";
+import { embedMany } from "@/lib/embeddings";
+import { pool } from "@/lib/pg";
 
 export const runtime = "nodejs";
 export const dynamic = "force-dynamic";
 
 type Body = {
   ns: string;
-  url: string;
-  slot?: string | null;
+  slot?: "staging" | "prod" | string | null;
   kind?: string | null;
+  urls: string[];
   chunk?: { chars?: number; overlap?: number };
+  dryRun?: boolean;
+  skipEmbeddings?: boolean;
 };
 
-function assertAdmin(req: Request) {
-  const need = (process.env.X_ADMIN_KEY || "").trim();
-  if (!need) return;
-  const got = (req.headers.get("x-admin-key") || "").trim();
-  if (need && got !== need) throw new Error("unauthorized");
-}
-
 const UA =
   "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36";
 
-function stripTags(html: string): string {
+async function fetchTextOrPdf(url: string): Promise<{ type: "text" | "pdf"; text?: string; buf?: Buffer; ctype?: string }> {
+  const r = await retryFetch(url, { redirect: "follow", headers: { "User-Agent": UA, Accept: "*/*" } });
+  if (!r.ok) throw new Error(`GET ${url} -> ${r.status} ${r.statusText}`);
+  const ct = r.headers.get("content-type") || "";
+  if (ct.includes("application/pdf") || url.toLowerCase().endsWith(".pdf")) {
+    const ab = await r.arrayBuffer();
+    return { type: "pdf", buf: Buffer.from(ab), ctype: ct };
+  }
+  return { type: "text", text: await r.text(), ctype: ct };
+}
+
+function htmlToText(html: string): string {
   return html
     .replace(/<script[\s\S]*?<\/script>/gi, " ")
     .replace(/<style[\s\S]*?<\/style>/gi, " ")
@@ -34,63 +43,134 @@ function stripTags(html: string): string {
     .trim();
 }
 
+function toVectorLiteral(vec: number[]): string {
+  return `[${vec.join(",")}]`;
+}
+
 export async function POST(req: Request) {
   const t0 = Date.now();
+  let stage: string | null = null;
   try {
     assertAdmin(req);
-    const { ns, url, slot = "staging", kind = "url", chunk } = (await req.json()) as Body;
-    if (!ns || !url) {
-      return NextResponse.json({ ok: false, error: "ns and url are required" }, { status: 400 });
+
+    stage = "init";
+    const body = (await req.json()) as Body;
+
+    const ns   = (body.ns || "").trim();
+    const slot = ((body.slot || "staging") as "staging" | "prod");
+    const kind = (body.kind || "url");
+    const urls = Array.isArray(body.urls) ? body.urls.filter(Boolean) : [];
+    const opts = normalizeChunkOpts(body.chunk);
+    const dryRun = !!body.dryRun;
+    const skipEmb = !!body.skipEmbeddings;
+
+    if (!ns || !urls.length) {
+      return NextResponse.json({ ok: false, error: "ns and urls are required" }, { status: 400 });
+    }
+    if (!["staging", "prod"].includes(slot)) {
+      return NextResponse.json({ ok: false, error: "slot must be 'staging'|'prod'" }, { status: 400 });
     }
 
-    const res = await fetch(url, {
-      redirect: "follow",
-      headers: {
-        "User-Agent": UA,
-        Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
-        "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
-      },
-    });
-    if (!res.ok) {
-      const body = await res.text().catch(() => "");
-      throw new Error(`fetch failed: ${res.status} ${res.statusText} ${body.slice(0, 200)}`);
+    let textInserted = 0;
+    let textUpdated  = 0;
+    let textChunks   = 0;
+    let embedWritten = 0;
+    let unchanged    = 0;
+
+    const docs: IngestDoc[] = [];
+    const pdfQueue: { url: string }[] = [];
+
+    stage = "fetch";
+    for (const url of urls) {
+      try {
+        const res = await fetchTextOrPdf(url);
+        if (res.type === "pdf") { pdfQueue.push({ url }); continue; }
+        const txt = htmlToText(res.text || ""); if (!txt) continue;
+
+        const parts = chunkText(txt, opts);
+        textChunks += parts.length;
+
+        const doc: IngestDoc = {
+          ns, slot,
+          source_id: url,
+          url, title: null, published_at: null,
+          source_type: "url", kind,
+          doc_metadata: { source_type: "url", url, chunk: opts, chunk_total: parts.length },
+          chunks: parts.map((content, i) => ({
+            content, chunk_no: i,
+            metadata: { source_type: "url", url, chunk: opts, chunk_chars: content.length },
+          })),
+        };
+        docs.push(doc);
+      } catch (e) {
+        console.warn("ingest/url: failed", url, String(e));
+      }
+    }
+
+    if (dryRun) {
+      return NextResponse.json({
+        ok: true, ns, slot, urls, dryRun: true,
+        pdfDelegated: 0, pdfStats: { chunks: 0, written: 0 },
+        textChunks, textInserted: 0, textUpdated: 0, unchanged: 0, embedWritten: 0,
+        ms: Date.now() - t0,
+      });
+    }
+
+    stage = "db-upsert";
+    let targets: Array<{ id: string; content: string }> = [];
+    if (docs.length) {
+      const r = await upsertChunksWithTargets(docs);
+      textInserted += r.inserted;
+      textUpdated  += r.updated;
+      unchanged    += r.unchanged;
+      targets = r.targets;
+    }
+
+    stage = "embeddings";
+    if (!skipEmb && targets.length) {
+      const contents = targets.map(t => t.content);
+      const vectors  = await embedMany(contents); // проверит DIMS=1536
+      for (let i = 0; i < targets.length; i++) {
+        const id = targets[i].id;
+        const lit = toVectorLiteral(vectors[i]);
+        await pool.query(`UPDATE chunks SET embedding = $1::vector, updated_at = NOW() WHERE id = $2`, [lit, id]);
+        embedWritten += 1;
+      }
+    }
+
+    stage = "delegate-pdf";
+    let pdfDelegated = 0;
+    let pdfStats = { chunks: 0, written: 0 };
+    for (const p of pdfQueue) {
+      pdfDelegated++;
+      try {
+        const resp = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || ""}/api/ingest/pdf`, {
+          method: "POST",
+          headers: { "content-type": "application/json", "x-admin-key": req.headers.get("x-admin-key") || "" },
+          body: JSON.stringify({ ns, slot, url: p.url, kind: "pdf", chunk: opts }),
+        });
+        const j = await resp.json().catch(() => ({}));
+        if (j?.chunks) pdfStats.chunks += Number(j.chunks) || 0;
+        if (j?.textInserted) pdfStats.written += Number(j.textInserted) || 0;
+      } catch (e) {
+        console.warn("delegate pdf failed:", p.url, String(e));
+      }
     }
-    const ct = (res.headers.get("content-type") || "").toLowerCase();
-    const raw = await res.text();
-    const text = ct.includes("html") ? stripTags(raw) : raw;
-    if (!text?.trim()) throw new Error("empty text extracted");
-
-    const opts = normalizeChunkOpts(chunk);
-    const chunks = chunkText(text, opts);
-    const vectors = await embedMany(chunks);
-
-    const records = chunks.map((content, i) => ({
-      kind: kind || "url",
-      ns,
-      slot,
-      content,
-      embedding: vectors[i],
-      metadata: {
-        source_type: "url",
-        url,
-        content_type: ct,
-        chunk_index: i,
-        chunk_chars: content.length,
-        chunk: opts,
-      },
-    }));
-    const written: number = await upsertMemoriesBatch(records);
 
     return NextResponse.json({
-      ok: true,
-      ns,
-      slot,
-      url,
-      chunks: chunks.length,
-      written,
-           ms: Date.now() - t0,
+      ok: true, ns, slot, urls, dryRun: false, skipEmbeddings: skipEmb,
+      pdfDelegated, pdfStats,
+      textChunks, textInserted, textUpdated, unchanged, embedWritten,
+      ms: Date.now() - t0,
     });
   } catch (e: any) {
-    return NextResponse.json({ ok: false, error: e?.message || String(e) }, { status: 500 });
+    return NextResponse.json(
+      { ok: false, stage, error: e?.message || String(e) },
+      { status: e?.message === "unauthorized" ? 401 : 500 }
+    );
   }
 }
+
+export function GET() {
+  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+}
diff --git a/apps/web/src/app/api/ingest/youtube/route.ts b/apps/web/src/app/api/ingest/youtube/route.ts
old mode 100644
new mode 100755
index bad5372..46a0558
--- a/apps/web/src/app/api/ingest/youtube/route.ts
+++ b/apps/web/src/app/api/ingest/youtube/route.ts
@@ -1,213 +1,39 @@
 // apps/web/src/app/api/ingest/youtube/route.ts
 import { NextResponse } from "next/server";
-import { embedMany } from "@/lib/embeddings";
-import { upsertMemoriesBatch } from "@/lib/memories";
-import { chunkText, normalizeChunkOpts } from "@/lib/chunking";
+
+/**
+ * ЖЁСТКАЯ ЗАГЛУШКА YouTube-инжеста.
+ * Всегда возвращает 503 и не выполняет никакой логики.
+ * Оставлена переменная флага на будущее (YT_INGEST_DISABLED),
+ * но по факту тут всё равно 503.
+ */
 
 export const runtime = "nodejs";
 export const dynamic = "force-dynamic";
 
-type Body = {
-  ns: string;
-  url?: string | null;
-  videoId?: string | null;
-  preferLangs?: string[] | null; // e.g. ["ru","en"]
-  slot?: string | null;
-  kind?: string | null;
-  chunk?: { chars?: number; overlap?: number };
-};
-
-function assertAdmin(req: Request) {
-  const need = (process.env.X_ADMIN_KEY || "").trim();
-  if (!need) return;
-  const got = (req.headers.get("x-admin-key") || "").trim();
-  if (need && got !== need) throw new Error("unauthorized");
+// Унифицированный ответ
+function disabledResponse() {
+  return NextResponse.json(
+    {
+      ok: false,
+      error: "youtube ingest temporarily disabled",
+      hint:
+        "Фича отключена на время. Используй /api/ingest/seed или скрипты DOC/PDF/OCR.",
+      ts: new Date().toISOString(),
+    },
+    { status: 503 }
+  );
 }
 
-const UA =
-  "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120 Safari/537.36";
-
-function parseVideoId(u?: string | null): string | null {
-  if (!u) return null;
-  try {
-    const m1 = u.match(/[?&]v=([a-zA-Z0-9_-]{11})/);
-    if (m1) return m1[1];
-    const m2 = u.match(/youtu\.be\/([a-zA-Z0-9_-]{11})/);
-    if (m2) return m2[1];
-    const m3 = u.match(/youtube\.com\/shorts\/([a-zA-Z0-9_-]{11})/);
-    if (m3) return m3[1];
-  } catch {}
-  return null;
+// Любой POST → 503
+export async function POST() {
+  return disabledResponse();
 }
 
-function decodeHtmlEntities(s: string): string {
-  return s
-    .replace(/&amp;/g, "&")
-    .replace(/&lt;/g, "<")
-    .replace(/&gt;/g, ">")
-    .replace(/&#39;/g, "'")
-    .replace(/&quot;/g, '"');
+// На случай, если кто-то пингует GET/HEAD — тоже 503
+export async function GET() {
+  return disabledResponse();
 }
-
-async function fetchTimedText(
-  videoId: string,
-  lang: string,
-  asr = false,
-  json3 = true
-): Promise<{ text: string; format: "json3" | "xml"; langTried: string } | null> {
-  const base = `https://www.youtube.com/api/timedtext?v=${videoId}&lang=${encodeURIComponent(
-    lang
-  )}${asr ? "&kind=asr" : ""}`;
-  const url = json3 ? `${base}&fmt=json3` : base;
-  const res = await fetch(url, {
-    redirect: "follow",
-    headers: {
-      "User-Agent": UA,
-      Accept: "*/*",
-      "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
-      Referer: `https://www.youtube.com/watch?v=${videoId}`,
-    },
-  });
-  if (!res.ok) {
-    const body = await res.text().catch(() => "");
-    throw new Error(`yt captions ${res.status} ${res.statusText} ${body.slice(0, 200)}`);
-  }
-  const txt = await res.text();
-  if (!txt || txt.length < 20) return null;
-
-  if (json3) {
-    try {
-      const j = JSON.parse(txt);
-      const events = Array.isArray(j?.events) ? j.events : [];
-      const parts: string[] = [];
-      for (const ev of events) {
-        const segs = Array.isArray(ev?.segs) ? ev.segs : [];
-        for (const s of segs) {
-          if (typeof s?.utf8 === "string") parts.push(s.utf8);
-        }
-      }
-      const out = parts.join("").replace(/\s+/g, " ").trim();
-      if (out) return { text: out, format: "json3", langTried: `${lang}${asr ? ":asr" : ""}` };
-    } catch {
-      // fallthrough: попробуем XML ниже
-    }
-  }
-
-  // XML-ветка
-  {
-    const base2 = `https://www.youtube.com/api/timedtext?v=${videoId}&lang=${encodeURIComponent(
-      lang
-    )}${asr ? "&kind=asr" : ""}`;
-    const res2 = await fetch(base2, {
-      redirect: "follow",
-      headers: {
-        "User-Agent": UA,
-        Accept: "*/*",
-        "Accept-Language": "en-US,en;q=0.9,ru;q=0.8",
-        Referer: `https://www.youtube.com/watch?v=${videoId}`,
-      },
-    });
-    if (!res2.ok) return null;
-    const xml = await res2.text();
-    const matches = Array.from(xml.matchAll(/<text[^>]*>([\s\S]*?)<\/text>/g));
-    const parts = matches.map((m) =>
-      decodeHtmlEntities(m[1].replace(/<[^>]+>/g, " ").replace(/\s+/g, " ").trim())
-    );
-    const out = parts.join(" ").trim();
-    if (out) return { text: out, format: "xml", langTried: `${lang}${asr ? ":asr" : ""}` };
-  }
-
-  return null;
-}
-
-export async function POST(req: Request) {
-  const t0 = Date.now();
-  try {
-    assertAdmin(req);
-    const {
-      ns,
-      url,
-      videoId: vid0,
-      preferLangs = ["ru", "en"],
-      slot = "staging",
-      kind = "youtube",
-      chunk,
-    } = (await req.json()) as Body;
-
-    if (!ns) return NextResponse.json({ ok: false, error: "ns is required" }, { status: 400 });
-    const videoId = vid0 || parseVideoId(url || "");
-    if (!videoId) {
-      return NextResponse.json({ ok: false, error: "videoId or url is required" }, { status: 400 });
-    }
-
-    let best:
-      | {
-          text: string;
-          format: "json3" | "xml";
-          langTried: string;
-        }
-      | null = null;
-
-    const langs = preferLangs && preferLangs.length ? preferLangs : ["en"];
-    for (const l of langs) {
-      try {
-        best =
-          (await fetchTimedText(videoId, l, true, true)) ||
-          (await fetchTimedText(videoId, l, false, true)) ||
-          (await fetchTimedText(videoId, l, true, false)) ||
-          (await fetchTimedText(videoId, l, false, false));
-        if (best) break;
-      } catch (e) {
-        // продолжаем пробовать другие варианты/языки
-        best = null;
-      }
-    }
-
-    if (!best) {
-      return NextResponse.json(
-        {
-          ok: false,
-          error:
-            "no captions available (try another video, or later we can enable Whisper ASR)",
-        },
-        { status: 422 }
-      );
-    }
-
-    const opts = normalizeChunkOpts(chunk);
-    const chunks = chunkText(best.text, opts);
-    const vectors = await embedMany(chunks);
-    const records = chunks.map((content, i) => ({
-      kind: kind || "youtube",
-      ns,
-      slot,
-      content,
-      embedding: vectors[i],
-      metadata: {
-        source_type: "youtube",
-        url,
-        video_id: videoId,
-        caption_format: best.format,
-        lang_tried: best.langTried,
-        chunk: opts,
-        chunk_index: i,
-        chunk_chars: content.length,
-      },
-    }));
-    const written: number = await upsertMemoriesBatch(records);
-
-    return NextResponse.json({
-      ok: true,
-      ns,
-      slot,
-      url,
-      videoId,
-      lang: best.langTried,
-      chunks: chunks.length,
-      written,
-            ms: Date.now() - t0,
-    });
-  } catch (e: any) {
-    return NextResponse.json({ ok: false, error: e?.message || String(e) }, { status: 500 });
-  }
+export async function HEAD() {
+  return disabledResponse();
 }
diff --git a/apps/web/src/app/api/initiatives/recent/route.ts b/apps/web/src/app/api/initiatives/recent/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/logs/list/route.ts b/apps/web/src/app/api/logs/list/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/delete/route.ts b/apps/web/src/app/api/memory/delete/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/ingest/route.ts b/apps/web/src/app/api/memory/ingest/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/list/route.ts b/apps/web/src/app/api/memory/list/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/promote/route.ts b/apps/web/src/app/api/memory/promote/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/route.ts b/apps/web/src/app/api/memory/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/search/route.ts b/apps/web/src/app/api/memory/search/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/suggest-ns/route.ts b/apps/web/src/app/api/memory/suggest-ns/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/memory/upsert/route.ts b/apps/web/src/app/api/memory/upsert/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/ns/route.ts b/apps/web/src/app/api/ns/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/profiles/delete/route.ts b/apps/web/src/app/api/profiles/delete/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/profiles/get/route.ts b/apps/web/src/app/api/profiles/get/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/profiles/save/route.ts b/apps/web/src/app/api/profiles/save/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/answer-guarded/route.ts b/apps/web/src/app/api/rag/answer-guarded/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/answer-logged-guarded/route.ts b/apps/web/src/app/api/rag/answer-logged-guarded/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/answer-logged/route.ts b/apps/web/src/app/api/rag/answer-logged/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/answer/route.ts b/apps/web/src/app/api/rag/answer/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/ask-guarded/route.ts b/apps/web/src/app/api/rag/ask-guarded/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rag/ask/route.ts b/apps/web/src/app/api/rag/ask/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/rebecca/execute/route.ts b/apps/web/src/app/api/rebecca/execute/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/api/retrieve/route.ts b/apps/web/src/app/api/retrieve/route.ts
index e24b558..4a24270 100644
--- a/apps/web/src/app/api/retrieve/route.ts
+++ b/apps/web/src/app/api/retrieve/route.ts
@@ -1,60 +1,66 @@
 // apps/web/src/app/api/retrieve/route.ts
 import { NextResponse } from "next/server";
-import { retrieveV2, type RecencyOptions } from "@/lib/retriever_v2";
+import { retrieveV2 } from "@/lib/retriever_v2";
+import type {
+  RetrieveRequest,
+  RetrieveResponse,
+  NsMode,
+} from "@/lib/retrieval-contract";
 
 export const runtime = "nodejs";
 export const dynamic = "force-dynamic";
 
 type Body = {
+  q: string;
   ns: string;
-  slot?: string | null;
-  query: string;
-
+  slot?: "staging" | "prod" | string | null;
   topK?: number;
   candidateK?: number;
-
-  nsMode?: "strict" | "prefix";
-  includeKinds?: string[] | null;
-  includeSourceTypes?: string[] | null;
-
   minSimilarity?: number;
-
-  recency?: RecencyOptions | null;
+  nsMode?: NsMode;
+  domainFilter?: { allow?: string[]; deny?: string[] } | null;
 };
 
 export async function POST(req: Request) {
-  const t0 = Date.now();
-  let stage = "init";
   try {
-    stage = "parse";
-    const body = (await req.json()) as Body;
+    const b = (await req.json()) as Body;
 
-    if (!body?.ns) {
-      return NextResponse.json({ ok: false, error: "ns required" }, { status: 400 });
-    }
-    if (!body?.query?.trim()) {
-      return NextResponse.json({ ok: false, error: "query required" }, { status: 400 });
+    // обязательные поля
+    if (!b?.q || !b?.ns) {
+      return NextResponse.json(
+        { error: "q and ns are required" },
+        { status: 400 }
+      );
     }
 
-    stage = "retrieve";
-    const result = await retrieveV2({
-      ns: body.ns,
-      slot: body.slot ?? "staging",
-      query: body.query,
-      topK: body.topK ?? 5,
-      candidateK: body.candidateK ?? 200,
-      nsMode: body.nsMode ?? "strict",
-      includeKinds: body.includeKinds ?? null,
-      includeSourceTypes: body.includeSourceTypes ?? null,
-      minSimilarity: typeof body.minSimilarity === "number" ? body.minSimilarity : undefined,
-      recency: body.recency ?? { enabled: true, halfLifeDays: 30, weight: 0.2, usePublishedAt: false },
-    });
-
-    return NextResponse.json({ ok: true, ...result, took_ms_route: Date.now() - t0 });
+    // нормализация
+    const slot = (b.slot === "prod" ? "prod" : "staging") as "staging" | "prod";
+    const topK = Math.max(1, Math.min(Number(b.topK ?? 5), 50));
+    const candidateK = Math.max(topK, Math.min(Number(b.candidateK ?? 200), 1000));
+    const minSimilarity = Math.max(0, Math.min(Number(b.minSimilarity ?? 0), 1));
+    const nsMode: NsMode = b.nsMode === "strict" ? "strict" : "prefix";
+
+    const body: RetrieveRequest = {
+      q: String(b.q),
+      ns: String(b.ns),
+      slot,
+      topK,
+      candidateK,
+      minSimilarity,
+      nsMode,
+      domainFilter: b.domainFilter ?? null,
+    };
+
+    const out: RetrieveResponse = await retrieveV2(body);
+    return NextResponse.json(out, { status: 200 });
   } catch (e: any) {
     return NextResponse.json(
-      { ok: false, stage, error: e?.message || String(e) },
-      { status: 500 },
+      { error: e?.message || String(e) },
+      { status: 500 }
     );
   }
 }
+
+export function GET() {
+  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+}
diff --git a/apps/web/src/app/api/schema/columns/route.ts b/apps/web/src/app/api/schema/columns/route.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/chat/page.tsx b/apps/web/src/app/chat/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/favicon.ico b/apps/web/src/app/favicon.ico
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/globals.css b/apps/web/src/app/globals.css
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/icon.svg b/apps/web/src/app/icon.svg
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/layout.tsx b/apps/web/src/app/layout.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/page.module.css b/apps/web/src/app/page.module.css
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/page.tsx b/apps/web/src/app/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/app/playground/page.tsx b/apps/web/src/app/playground/page.tsx
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/admin-auth.ts b/apps/web/src/lib/admin-auth.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/admin-guard.ts b/apps/web/src/lib/admin-guard.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/admin.ts b/apps/web/src/lib/admin.ts
new file mode 100644
index 0000000..2529735
--- /dev/null
+++ b/apps/web/src/lib/admin.ts
@@ -0,0 +1,21 @@
+// apps/web/src/lib/admin.ts
+import { NextRequest } from "next/server";
+
+/**
+ * Проверяем админ-доступ по заголовку x-admin-key.
+ * Допускаем ИЛИ ADMIN_KEY, ИЛИ X_ADMIN_KEY из окружения (если заданы оба — любой из них).
+ */
+export function assertAdmin(req: NextRequest | Request): void {
+  const wantA = (process.env.ADMIN_KEY || "").trim();
+  const wantB = (process.env.X_ADMIN_KEY || "").trim(); // на проектах уже используется для ingest
+  const got = (req.headers.get("x-admin-key") || "").trim();
+
+  // если оба пустые — считаем, что админ-защита не настроена (не безопасно, но не блокируем локальную разработку)
+  if (!wantA && !wantB) return;
+
+  const ok =
+    (!!wantA && got === wantA) ||
+    (!!wantB && got === wantB);
+
+  if (!ok) throw new Error("unauthorized");
+}
diff --git a/apps/web/src/lib/adminAuth.ts b/apps/web/src/lib/adminAuth.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/auth.ts b/apps/web/src/lib/auth.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/chunk.ts b/apps/web/src/lib/chunk.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/chunking.ts b/apps/web/src/lib/chunking.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/contracts.ts b/apps/web/src/lib/contracts.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/db.ts b/apps/web/src/lib/db.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/domain_filter.ts b/apps/web/src/lib/domain_filter.ts
new file mode 100644
index 0000000..933cd59
--- /dev/null
+++ b/apps/web/src/lib/domain_filter.ts
@@ -0,0 +1,20 @@
+// apps/web/src/lib/domain_filter.ts
+import type { DomainFilter } from "./retrieval-contract";
+
+export function matchesDomain(url: string, f?: DomainFilter): boolean {
+  if (!f) return true;
+  const allow = f.allow ?? [];
+  const deny  = f.deny  ?? [];
+
+  // deny сильнее allow
+  for (const d of deny) {
+    if (!d) continue;
+    if (url.includes(d)) return false;
+  }
+  if (allow.length === 0) return true;
+  for (const a of allow) {
+    if (!a) continue;
+    if (url.includes(a)) return true;
+  }
+  return false;
+}
diff --git a/apps/web/src/lib/embeddings.ts b/apps/web/src/lib/embeddings.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/env.ts b/apps/web/src/lib/env.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/guardrails.ts b/apps/web/src/lib/guardrails.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/hash.ts b/apps/web/src/lib/hash.ts
old mode 100644
new mode 100755
index 75352d4..854484b
--- a/apps/web/src/lib/hash.ts
+++ b/apps/web/src/lib/hash.ts
@@ -5,3 +5,16 @@ import { createHash } from "crypto";
 export function sha256Hex(s: string): string {
   return createHash("sha256").update(s).digest("hex");
 }
+
+/** Хеш идентичности чанка + контента */
+export function contentIdentityHash(input: {
+  ns: string;
+  slot?: string | null;
+  source_id: string | null;
+  chunk_no: number;
+  content: string | null;
+}): string {
+  const payload =
+    `${input.ns}|${input.slot ?? ""}|${input.source_id ?? ""}|${input.chunk_no}|${input.content ?? ""}`;
+  return sha256Hex(payload);
+}
diff --git a/apps/web/src/lib/ingest_upsert.ts b/apps/web/src/lib/ingest_upsert.ts
new file mode 100644
index 0000000..936f4cb
--- /dev/null
+++ b/apps/web/src/lib/ingest_upsert.ts
@@ -0,0 +1,246 @@
+// apps/web/src/lib/ingest_upsert.ts
+import { pool } from "@/lib/pg";
+import { contentIdentityHash } from "@/lib/hash";
+
+/**
+ * Единица контента для вставки.
+ */
+export type IngestChunk = {
+  content: string;
+  chunk_no: number;
+  metadata: Record<string, any>;
+};
+
+/**
+ * Документ-носитель чанков (единица инжеста).
+ */
+export type IngestDoc = {
+  ns: string;
+  slot: "staging" | "prod" | (string & {});
+  source_id: string | null;
+  url: string | null;
+  title: string | null;
+  published_at: string | null;
+  source_type: string | null;
+  kind: string | null;
+  doc_metadata: Record<string, any>;
+  chunks: IngestChunk[];
+};
+
+export type UpsertResult = { inserted: number; updated: number };
+export type UpsertTargetsResult = UpsertResult & {
+  targets: Array<{ id: string; content: string }>;
+  unchanged: number;
+};
+
+/** Короткий сниппет для предпросмотра */
+function makeSnippet(text: string, max = 480): string {
+  const s = String(text ?? "").replace(/\s+/g, " ").trim();
+  return s.length <= max ? s : s.slice(0, max);
+}
+
+/**
+ * Прежний upsert без таргетов — оставляем для совместимости.
+ * Хеш — по идентичности чанка + контенту (sha256(ns|slot|source_id|chunk_no|content)).
+ */
+export async function upsertChunks(docs: IngestDoc[]): Promise<UpsertResult> {
+  if (!Array.isArray(docs) || docs.length === 0) return { inserted: 0, updated: 0 };
+
+  const client = await pool.connect();
+  try {
+    await client.query("BEGIN");
+    let inserted = 0, updated = 0;
+
+    const textInsert = `
+      INSERT INTO chunks (
+        ns, slot, content, url, title, snippet, published_at,
+        source_type, kind, metadata, content_hash, source_id, chunk_no, created_at, updated_at
+      ) VALUES (
+        $1, $2, $3, $4, $5, $6, $7,
+        $8, $9, $10, $11, $12, $13, NOW(), NOW()
+      )
+      ON CONFLICT (ns, slot, source_id, chunk_no) DO UPDATE SET
+        content      = EXCLUDED.content,
+        url          = EXCLUDED.url,
+        title        = EXCLUDED.title,
+        snippet      = EXCLUDED.snippet,
+        published_at = EXCLUDED.published_at,
+        source_type  = EXCLUDED.source_type,
+        kind         = EXCLUDED.kind,
+        metadata     = EXCLUDED.metadata,
+        content_hash = EXCLUDED.content_hash,
+        updated_at   = NOW()
+      RETURNING (xmax = 0) AS inserted
+    `;
+
+    for (const d of docs) {
+      const ns = d.ns;
+      const slot = d.slot;
+      const docMeta = d.doc_metadata ?? {};
+
+      for (const ch of d.chunks) {
+        const content = String(ch.content ?? "");
+        if (!content) continue;
+
+        const rowMeta = { ...(ch.metadata ?? {}), doc: docMeta };
+        const snippet = makeSnippet(content);
+        const hash = contentIdentityHash({
+          ns,
+          slot,
+          source_id: d.source_id ?? null,
+          chunk_no: ch.chunk_no,
+          content,
+        });
+
+        const params = [
+          ns,
+          slot,
+          content,
+          d.url ?? null,
+          d.title ?? null,
+          snippet,
+          d.published_at ?? null,
+          d.source_type ?? null,
+          d.kind ?? null,
+          rowMeta,
+          hash,
+          d.source_id ?? null,
+          ch.chunk_no,
+        ];
+
+        const res = await client.query<{ inserted: boolean }>(textInsert, params);
+        if (res.rows[0]?.inserted) inserted += 1;
+        else updated += 1;
+      }
+    }
+
+    await client.query("COMMIT");
+    return { inserted, updated };
+  } catch (e) {
+    await client.query("ROLLBACK");
+    throw e;
+  } finally {
+    client.release();
+  }
+}
+
+/**
+ * Новый upsert с таргетами и подсчётом unchanged.
+ * Логика:
+ *  • Если запись с ключом (ns,slot,source_id,chunk_no) есть и content_hash совпадает → считаем как unchanged и пропускаем.
+ *  • Иначе INSERT ... ON CONFLICT ... DO UPDATE (только при смене hash) с RETURNING — для целей эмбеддинга.
+ */
+export async function upsertChunksWithTargets(docs: IngestDoc[]): Promise<UpsertTargetsResult> {
+  if (!Array.isArray(docs) || docs.length === 0) {
+    return { inserted: 0, updated: 0, targets: [], unchanged: 0 };
+  }
+
+  const client = await pool.connect();
+  try {
+    await client.query("BEGIN");
+    let inserted = 0, updated = 0, unchanged = 0;
+    const targets: Array<{ id: string; content: string }> = [];
+
+    const textSelectExisting = `
+      SELECT id, content_hash
+      FROM chunks
+      WHERE ns = $1 AND slot = $2 AND source_id IS NOT DISTINCT FROM $3 AND chunk_no = $4
+      LIMIT 1
+    `;
+
+    const textInsertReturn = `
+      WITH up AS (
+        INSERT INTO chunks (
+          ns, slot, content, url, title, snippet, published_at,
+          source_type, kind, metadata, content_hash, source_id, chunk_no, created_at, updated_at
+        ) VALUES (
+          $1, $2, $3, $4, $5, $6, $7,
+          $8, $9, $10, $11, $12, $13, NOW(), NOW()
+        )
+        ON CONFLICT (ns, slot, source_id, chunk_no) DO UPDATE SET
+          content      = EXCLUDED.content,
+          url          = EXCLUDED.url,
+          title        = EXCLUDED.title,
+          snippet      = EXCLUDED.snippet,
+          published_at = EXCLUDED.published_at,
+          source_type  = EXCLUDED.source_type,
+          kind         = EXCLUDED.kind,
+          metadata     = EXCLUDED.metadata,
+          content_hash = EXCLUDED.content_hash,
+          updated_at   = NOW()
+        WHERE chunks.content_hash IS DISTINCT FROM EXCLUDED.content_hash
+        RETURNING id, (xmax = 0) AS inserted, content AS new_content
+      )
+      SELECT id, inserted, new_content FROM up
+    `;
+
+    for (const d of docs) {
+      const ns = d.ns;
+      const slot = d.slot;
+      const docMeta = d.doc_metadata ?? {};
+
+      for (const ch of d.chunks) {
+        const content = String(ch.content ?? "");
+        if (!content) continue;
+
+        const rowMeta = { ...(ch.metadata ?? {}), doc: docMeta };
+        const snippet = makeSnippet(content);
+        const hash = contentIdentityHash({
+          ns,
+          slot,
+          source_id: d.source_id ?? null,
+          chunk_no: ch.chunk_no,
+          content,
+        });
+
+        // 1) Быстрый чек: есть ли запись и совпадает ли hash → unchanged
+        const existing = await client.query<{ id: string; content_hash: string }>(
+          textSelectExisting,
+          [ns, slot, d.source_id ?? null, ch.chunk_no]
+        );
+
+        if (existing.rows.length && existing.rows[0].content_hash === hash) {
+          unchanged += 1;
+          continue; // ничего не делаем
+        }
+
+        // 2) Иначе — вставка/апдейт с возвратом целей (для эмбеддингов)
+        const params = [
+          ns,
+          slot,
+          content,
+          d.url ?? null,
+          d.title ?? null,
+          snippet,
+          d.published_at ?? null,
+          d.source_type ?? null,
+          d.kind ?? null,
+          rowMeta,
+          hash,
+          d.source_id ?? null,
+          ch.chunk_no,
+        ];
+
+        const res = await client.query<{
+          id: string;
+          inserted: boolean;
+          new_content: string;
+        }>(textInsertReturn, params);
+
+        for (const row of res.rows) {
+          if (row.inserted) inserted += 1;
+          else updated += 1;
+          targets.push({ id: row.id, content: row.new_content });
+        }
+      }
+    }
+
+    await client.query("COMMIT");
+    return { inserted, updated, targets, unchanged };
+  } catch (e) {
+    await client.query("ROLLBACK");
+    throw e;
+  } finally {
+    client.release();
+  }
+}
diff --git a/apps/web/src/lib/log.ts b/apps/web/src/lib/log.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/logs.ts b/apps/web/src/lib/logs.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/namespaces.ts b/apps/web/src/lib/namespaces.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/ns.ts b/apps/web/src/lib/ns.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/pg.ts b/apps/web/src/lib/pg.ts
new file mode 100644
index 0000000..1dc9376
--- /dev/null
+++ b/apps/web/src/lib/pg.ts
@@ -0,0 +1,31 @@
+// apps/web/src/lib/pg.ts
+import { Pool } from "pg";
+
+const connStr = process.env.DATABASE_URL;
+if (!connStr) {
+  throw new Error("DATABASE_URL is not set");
+}
+
+export const pool = new Pool({ connectionString: connStr });
+
+/**
+ * Примитивный tagged-template, похожий на postgres.js `sql``:
+ *   const rows = await sql`select * from memories where id = ${id}`;
+ * Он подставит $1,$2,… и вернёт rows.
+ */
+export async function sql(
+  strings: TemplateStringsArray,
+  ...values: any[]
+): Promise<any[]> {
+  // Собираем текст с плейсхолдерами $1..$n
+  let text = "";
+  for (let i = 0; i < strings.length; i++) {
+    text += strings[i];
+    if (i < values.length) text += `$${i + 1}`;
+  }
+  const res = await pool.query(text, values);
+  return res.rows;
+}
+
+// На всякий случай пригодится тип
+export type SQL = typeof sql;
diff --git a/apps/web/src/lib/profile-runtime.ts b/apps/web/src/lib/profile-runtime.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/profiles.ts b/apps/web/src/lib/profiles.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/rag-core.ts b/apps/web/src/lib/rag-core.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/rate_limit.ts b/apps/web/src/lib/rate_limit.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/recency.ts b/apps/web/src/lib/recency.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/redact.ts b/apps/web/src/lib/redact.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/retrieval-contract.ts b/apps/web/src/lib/retrieval-contract.ts
new file mode 100644
index 0000000..efecdce
--- /dev/null
+++ b/apps/web/src/lib/retrieval-contract.ts
@@ -0,0 +1,40 @@
+// apps/web/src/lib/retrieval-contract.ts
+export type Slot = "staging" | "prod";
+
+export type RecencyOptions = {
+  alpha?: number;   // экзп. затухание, 0..1
+  beta?: number;    // бонус свежести, 0..1
+  halfLifeDays?: number; // полураспад
+};
+
+export type DomainFilter = {
+  allow?: string[];  // белый список: подстроки/доменные куски
+  deny?: string[];   // чёрный список
+};
+
+export type RetrieveRequest = {
+  ns: string;
+  slot: Slot;
+  q: string;                // текст запроса
+  topK?: number;
+  candidateK?: number;
+  minSimilarity?: number;
+  nsMode?: "strict" | "prefix";
+  recency?: RecencyOptions;
+  domainFilter?: DomainFilter; // можно опустить
+  debugVersion?: "rc-v1";
+};
+
+export type RetrieveItem = {
+  id: string;
+  url: string | null;
+  title: string | null;
+  content: string | null;
+  score: number;
+};
+
+export type RetrieveResponse = {
+  items: RetrieveItem[];
+  filterInfo: { allowMatched: number; denySkipped: number };
+  debugVersion: "rc-v1";
+};
diff --git a/apps/web/src/lib/retriever.ts b/apps/web/src/lib/retriever.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/retriever_v2.backup.ts b/apps/web/src/lib/retriever_v2.backup.ts
deleted file mode 100644
index 60e3b26..0000000
--- a/apps/web/src/lib/retriever_v2.backup.ts
+++ /dev/null
@@ -1,126 +0,0 @@
-import { q } from "@/lib/db";
-import OpenAI from "openai";
-import { RECENCY, timeDecay } from "@/lib/recency";
-
-const EMBED_MODEL = process.env.EMBED_MODEL || "text-embedding-3-small";
-const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });
-
-export type RetrieveOpts = {
-  ns: string;
-  query: string;
-  fetchK?: number;
-  topK?: number;
-  minScore?: number;
-  slot?: "staging" | "prod";
-  lambda?: number;
-};
-
-export type RetrievedChunk = {
-  id: string;
-  content: string;
-  source: any | null;
-  created_at: string;
-  dense: number;
-  bm25: number;
-  age_days: number;
-  emb: number[];
-  final: number;
-};
-
-function nsRecency(ns: string) {
-  return RECENCY[ns] || { halfLifeDays: 180, ttlDays: 365, alpha: 0.75, beta: 0.15, gamma: 0.10 };
-}
-
-function parsePgVectorText(s: string): number[] {
-  const m = /^\s*\[([^\]]*)\]\s*$/.exec(String(s ?? ""));
-  if (!m) return [];
-  return m[1].split(",").map(x => Number(x.trim())).filter(v => Number.isFinite(v));
-}
-
-async function embedQuery(text: string): Promise<number[]> {
-  const r = await openai.embeddings.create({ model: EMBED_MODEL, input: [text] });
-  return r.data[0].embedding as unknown as number[];
-}
-
-async function dbCandidates(ns: string, query: string, qVec: number[], slot: "staging" | "prod", fetchK: number): Promise<RetrievedChunk[]> {
-  const qvecText = "[" + qVec.map(x => Number(x).toFixed(6)).join(",") + "]";
-const rows = await q<any>(`
-  with base as (
-    select
-      id,
-      content,
-      source,
-      created_at,
-      (1 - (embedding <=> $2::vector)) as dense,
-      ts_rank(to_tsvector('simple', content), plainto_tsquery('simple', $1)) as bm25,
-      extract(epoch from (now() - created_at))/86400.0 as age_days,
-      (embedding::text) as emb_text
-    from chunks
-    where ns = $3 and slot = $4
-  )
-  select * from base
-  order by (dense + bm25) desc
-  limit $5;
-`, [query, qvecText, ns, slot, fetchK]);
-
-
-  return rows.map(r => ({
-    id: r.id,
-    content: r.content,
-    source: r.source || null,
-    created_at: r.created_at,
-    dense: Number(r.dense) || 0,
-    bm25: Math.min(Number(r.bm25) || 0, 1),
-    age_days: Math.max(Number(r.age_days) || 0, 0),
-    emb: parsePgVectorText(r.emb_text),
-    final: 0
-  }));
-}
-
-function cos(a: number[], b: number[]): number {
-  let num = 0, na = 0, nb = 0;
-  for (let i = 0; i < a.length && i < b.length; i++) {
-    const x = a[i], y = b[i];
-    num += x * y; na += x * x; nb += y * y;
-  }
-  const den = Math.sqrt(na) * Math.sqrt(nb) || 1e-8;
-  return num / den;
-}
-
-function mmrSelect(qVec: number[], cand: RetrievedChunk[], topK: number, lambda = 0.7): RetrievedChunk[] {
-  const selected: RetrievedChunk[] = [];
-  const rest = cand.slice();
-  while (selected.length < topK && rest.length > 0) {
-    let bestIdx = 0, bestScore = -Infinity;
-    for (let i = 0; i < rest.length; i++) {
-      const c = rest[i];
-      const rel = cos(qVec, c.emb);
-      let div = 0;
-      for (const s of selected) div = Math.max(div, cos(c.emb, s.emb));
-      const mmr = lambda * rel - (1 - lambda) * div;
-      if (mmr > bestScore) { bestScore = mmr; bestIdx = i; }
-    }
-    selected.push(rest.splice(bestIdx, 1)[0]);
-  }
-  return selected;
-}
-
-export async function retrieveV2(opts: RetrieveOpts): Promise<RetrievedChunk[]> {
-  const { ns, query, fetchK = 24, topK = 8, minScore = 0.52, slot = "staging", lambda = 0.7 } = opts;
-
-  const qVec = await embedQuery(query);
-  const rc = nsRecency(ns);
-  let cand = await dbCandidates(ns, query, qVec, slot, fetchK);
-
-  cand = cand.map(c => {
-    const t = timeDecay(c.age_days, rc.halfLifeDays);
-    const final = rc.alpha * c.dense + rc.gamma * c.bm25 + rc.beta * t;
-    return { ...c, final };
-  });
-
-  cand = cand.filter(c => c.final >= minScore).sort((a,b) => b.final - a.final);
-
-  const picked = mmrSelect(qVec, cand, Math.min(topK, cand.length), lambda);
-  picked.sort((a,b) => b.final - a.final);
-  return picked;
-}
diff --git a/apps/web/src/lib/retriever_v2.ts b/apps/web/src/lib/retriever_v2.ts
index 4c35b29..fe97a98 100644
--- a/apps/web/src/lib/retriever_v2.ts
+++ b/apps/web/src/lib/retriever_v2.ts
@@ -1,190 +1,191 @@
 // apps/web/src/lib/retriever_v2.ts
-import { pool } from "@/lib/db";
-import { embedMany } from "@/lib/embeddings";
-
-/** Безопасный embedQuery: несколько попыток импорта, иначе fallback на embedMany */
-async function embedQuerySafe(q: string): Promise<number[]> {
-  try {
-    const modRel = await import("./embeddings");
-    if (typeof (modRel as any).embedQuery === "function") {
-      return await (modRel as any).embedQuery(q);
-    }
-  } catch {}
-  try {
-    const modAlias = await import("@/lib/embeddings");
-    if (typeof (modAlias as any).embedQuery === "function") {
-      return await (modAlias as any).embedQuery(q);
-    }
-  } catch {}
-  const [v] = await embedMany([q]);
-  return v;
+import { pool } from "@/lib/pg";
+import { embedQuery } from "@/lib/embeddings";
+import {
+  RetrieveRequest,
+  RetrieveResponse,
+  RetrieveItem,
+  // clamp,          // <-- больше НЕ импортируем из контракта
+} from "@/lib/retrieval-contract";
+import { matchesDomain } from "@/lib/domain_filter";
+
+const ALPHA = Number(process.env.RETRIEVE_ALPHA ?? 0.85);
+const BETA = Number(process.env.RETRIEVE_BETA ?? 0.15);
+const HALF_LIFE_DAYS = Number(process.env.RETRIEVE_T_HALF ?? 180);
+
+// Локальная утилита вместо импорта из контракта
+function clamp(x: number, min: number, max: number): number {
+  return Math.max(min, Math.min(max, x));
+}
+// Безопасные числовые дефолты
+function numOr<T extends number>(v: any, d: T): T {
+  const n = Number(v);
+  return Number.isFinite(n) ? (n as T) : d;
 }
 
-export type RecencyOptions = {
-  enabled?: boolean;
-  halfLifeDays?: number;
-  weight?: number;
-  usePublishedAt?: boolean;
-};
-
-export type RetrieveParams = {
-  ns: string;
-  slot?: string | null;
-  query: string;
-  topK?: number;
-  candidateK?: number;
-  nsMode?: "strict" | "prefix";
-  includeKinds?: string[] | null;
-  includeSourceTypes?: string[] | null;
-  minSimilarity?: number;
-  recency?: RecencyOptions;
-};
+function timeDecay(publishedAt: string | null): number {
+  if (!publishedAt) return 0.5;
+  const t = Date.parse(publishedAt);
+  if (!Number.isFinite(t)) return 0.5;
+  const ageDays = (Date.now() - t) / 86400000;
+  const decay = Math.pow(0.5, ageDays / Math.max(1, HALF_LIFE_DAYS));
+  return clamp(decay, 0, 1);
+}
 
-export type RetrievedMatch = {
+type Row = {
   id: string;
-  kind: string | null;
   ns: string;
-  slot: string | null;
-  content: string;
-  metadata: any;
-  created_at: string;
+  slot: string;
+  url: string | null;
+  title: string | null;
+  content: string | null;
+  published_at: string | null;
+  source_type: string | null;
+  kind: string | null;
+  metadata: Record<string, any> | null;
   sim: number;
-  rec: number;
-  score: number;
-  sample: string;
 };
 
-export type RetrieveResult = {
-  ok: true;
-  took_ms: number;
-  params: Omit<RetrieveParams, "query"> & { query: string };
-  recencyEffective: { enabled: boolean; halfLifeDays: number; weight: number; usedPublishedAt: boolean };
-  candidates: number;
-  returned: number;
-  matches: RetrievedMatch[];
-};
+// собираем SQL-предикаты для доменов
+function buildDomainSQL(df: RetrieveRequest["domainFilter"]) {
+  const clauses: string[] = [];
+  const params: string[] = [];
+  const hostExpr = `lower(NULLIF(regexp_replace(url, '^https?://([^/]+).*$', '\\1'), ''))`;
+
+  if (df?.allow && df.allow.length) {
+    const allowOrs: string[] = [];
+    for (const d of df.allow) {
+      const dom = d.toLowerCase().trim();
+      allowOrs.push(`(${hostExpr} = $AL${params.length + 1} OR ${hostExpr} LIKE $AL${params.length + 2})`);
+      params.push(dom, `%.${dom}`);
+    }
+    clauses.push(`url IS NOT NULL AND (${allowOrs.join(" OR ")})`);
+  }
 
-function clamp(n: number, lo: number, hi: number) {
-  return Math.max(lo, Math.min(hi, n));
-}
+  if (df?.deny && df.deny.length) {
+    for (const d of df.deny) {
+      const dom = d.toLowerCase().trim();
+      clauses.push(`NOT ( ${hostExpr} = $DN${params.length + 1} OR ${hostExpr} LIKE $DN${params.length + 2} )`);
+      params.push(dom, `%.${dom}`);
+    }
+  }
 
-function buildFilterSql(nsMode: "strict" | "prefix", hasKinds: boolean, hasSrcTypes: boolean) {
-  const nsClause =
-    nsMode === "prefix"
-      ? "ns LIKE ($2 || '%') AND ($3::text IS NULL OR slot = $3)"
-      : "ns = $2 AND ($3::text IS NULL OR slot = $3)";
-  const parts: string[] = [`(${nsClause})`];
-  if (hasKinds) parts.push("(kind = ANY($5::text[]))");
-  if (hasSrcTypes) parts.push("(metadata->>'source_type' = ANY($6::text[]))");
-  return parts.join(" AND ");
+  return { clause: clauses.length ? clauses.join(" AND ") : "", rawParams: params };
 }
 
-export async function retrieveV2(params: RetrieveParams): Promise<RetrieveResult> {
-  const t0 = Date.now();
-  const {
-    ns, slot = "staging", query,
-    topK = 5, candidateK = 200,
-    nsMode = "strict",
-    includeKinds, includeSourceTypes,
-    minSimilarity,
-    recency,
-  } = params;
-
-  if (!ns) throw new Error("ns is required");
-  if (!query?.trim()) throw new Error("query is empty");
-
-  // 1) эмбеддинг запроса
-  const qvec = await embedQuerySafe(query);
-  // ВАЖНО: pgvector ждёт строковый литерал в формате [a,b,c]
-  const qvecLit = "[" + qvec.join(",") + "]";
-
-  // 2) кандидаты из ANN
-  const K = clamp(topK, 1, 50);
-  const CAND = clamp(candidateK, K, 1000);
-  const hasKinds = Array.isArray(includeKinds) && includeKinds.length > 0;
-  const hasSrcTypes = Array.isArray(includeSourceTypes) && includeSourceTypes.length > 0;
-
-  const where = buildFilterSql(nsMode, hasKinds, hasSrcTypes);
-  const sql = `
-    SELECT id, kind, ns, slot, content, metadata, created_at,
-           (embedding <=> $1::vector) AS dist
-    FROM memories
-    WHERE ${where}
-    ORDER BY embedding <=> $1::vector
-    LIMIT $4
-  `;
-  const args: any[] = [qvecLit, ns, slot, CAND];
-  if (hasKinds) args.push(includeKinds);
-  if (hasSrcTypes) { if (!hasKinds) args.push([]); args.push(includeSourceTypes); }
-
-  const { rows } = await pool.query(sql, args);
-
-  // 3) доранжировка: similarity + recency
-  const alpha = 1 - (recency?.weight ?? 0.2);
-  const beta  = (recency?.weight ?? 0.2);
-  const half  = clamp(Math.floor(recency?.halfLifeDays ?? Number(process.env.RECENCY_HALFLIFE_DAYS || 30)), 1, 3650);
-  const usePub = !!recency?.usePublishedAt;
-  const recOn = recency?.enabled !== false;
-
-  const LN2 = Math.log(2);
-  const now = Date.now();
-
-  function recencyBoost(r: any) {
-    let t = r.created_at ? new Date(r.created_at).getTime() : 0;
-    if (usePub) {
-      const p = r?.metadata?.published_at ?? r?.metadata?.["published_at"];
-      if (typeof p === "string") {
-        const tp = Date.parse(p);
-        if (!Number.isNaN(tp)) t = tp;
+export async function retrieveV2(req: RetrieveRequest): Promise<RetrieveResponse> {
+  // безопасные дефолты
+  const topK = clamp(numOr(req.topK, 5), 1, 50);
+  const candidateK = clamp(numOr(req.candidateK, Math.max(5, topK)), topK, 1000);
+  const minSimilarity = numOr(req.minSimilarity, 0);
+
+  // эмбеддинг запроса
+  const qvec = await embedQuery(req.q);
+
+  // ns-фильтр
+  const nsExact = req.ns;
+  const nsLike = `${req.ns}/%`;
+  const whereNs = req.nsMode === "strict" ? `ns = $2` : `(ns = $2 OR ns LIKE $3)`;
+
+  // доменные предикаты
+  const { clause: domainClauseRaw } = buildDomainSQL(req.domainFilter);
+
+  // Соберём WHERE с нормальной нумерацией плейсхолдеров
+  const whereParts: string[] = [
+    `slot = $1`,
+    whereNs,
+  ];
+  let next = req.nsMode === "strict" ? 3 : 4;
+
+  if (domainClauseRaw) {
+    // Пересобираем allow/deny с обычной нумерацией
+    const hostExpr = `lower(NULLIF(regexp_replace(url, '^https?://([^/]+).*$', '\\1'), ''))`;
+    const allow = req.domainFilter?.allow ?? [];
+    const deny = req.domainFilter?.deny ?? [];
+    const parts: string[] = [];
+
+    if (allow.length) {
+      const ors: string[] = [];
+      for (let i = 0; i < allow.length; i++) {
+        const a1 = `$${next++}`;
+        const a2 = `$${next++}`;
+        ors.push(`(${hostExpr} = ${a1} OR ${hostExpr} LIKE ${a2})`);
+      }
+      parts.push(`url IS NOT NULL AND (${ors.join(" OR ")})`);
+    }
+
+    if (deny.length) {
+      for (let i = 0; i < deny.length; i++) {
+        const d1 = `$${next++}`;
+        const d2 = `$${next++}`;
+        parts.push(`NOT ( ${hostExpr} = ${d1} OR ${hostExpr} LIKE ${d2} )`);
       }
     }
-    if (!t) return 0;
-    const ageDays = (now - t) / (1000 * 60 * 60 * 24);
-    return Math.exp(-LN2 * (ageDays / half));
+
+    if (parts.length) whereParts.push(parts.join(" AND "));
   }
 
-  const rescored = rows
-    .map((r) => {
-      const sim = 1 - Number(r.dist);
-      const rec = recOn ? recencyBoost(r) : 0;
-      const score = alpha * sim + beta * rec;
-      return { ...r, sim, rec, score };
-    })
-    .filter((r) => (typeof minSimilarity === "number" ? r.sim >= minSimilarity : true))
-    .sort((a, b) => b.score - a.score)
-    .slice(0, K);
-
-  const matches: RetrievedMatch[] = rescored.map((r) => ({
-    id: r.id,
-    kind: r.kind ?? null,
-    ns: r.ns,
-    slot: r.slot ?? null,
-    content: r.content,
-    metadata: r.metadata,
-    created_at: r.created_at,
-    sim: Number((r as any).sim.toFixed(4)),
-    rec: Number((r as any).rec.toFixed(4)),
-    score: Number((r as any).score.toFixed(4)),
-    sample: (r.content as string)?.slice(0, 240) || "",
-  }));
-
-  return {
-    ok: true,
-    took_ms: Date.now() - t0,
-    params: {
-      ns, slot, query,
-      topK: K, candidateK: CAND,
-      nsMode,
-      includeKinds: includeKinds ?? null,
-      includeSourceTypes: includeSourceTypes ?? null,
-      minSimilarity: typeof minSimilarity === "number" ? minSimilarity : undefined,
-      recency,
-    },
-    recencyEffective: {
-      enabled: recOn, halfLifeDays: half, weight: beta, usedPublishedAt: usePub,
-    },
-    candidates: rows.length,
-    returned: matches.length,
-    matches,
+  const finalSQL = `
+    SELECT
+      id, ns, slot, url, title, content,
+      COALESCE(to_char(published_at, 'YYYY-MM-DD"T"HH24:MI:SS.MS"Z"'), NULL) AS published_at,
+      source_type, kind, metadata,
+      (1 - (embedding <=> $${next}::vector)) AS sim
+    FROM chunks
+    WHERE ${whereParts.join(" AND ")}
+    ORDER BY embedding <=> $${next}::vector ASC
+    LIMIT $${next + 1}
+  `;
+
+  // Параметры в правильном порядке:
+  const finalParams: any[] = [];
+  finalParams.push(req.slot, nsExact);
+  if (req.nsMode !== "strict") finalParams.push(nsLike);
+
+  if (req.domainFilter?.allow?.length) {
+    for (const d of req.domainFilter.allow) {
+      const dom = d.toLowerCase().trim();
+      finalParams.push(dom, `%.${dom}`);
+    }
+  }
+  if (req.domainFilter?.deny?.length) {
+    for (const d of req.domainFilter.deny) {
+      const dom = d.toLowerCase().trim();
+      finalParams.push(dom, `%.${dom}`);
+    }
+  }
+
+  finalParams.push(`[${qvec.join(",")}]`);
+  finalParams.push(candidateK);
+
+  const res = await pool.query<Row>(finalSQL, finalParams);
+  const rows: Row[] = res.rows;
+
+  // пост-фильтр по схожести + домены
+  const afterSim: Row[] = rows.filter((r: Row) => r.sim >= minSimilarity);
+  const afterDomain: Row[] = afterSim.filter((r: Row) => matchesDomain(r.url, req.domainFilter));
+
+  // скоринг + topK
+  const mapped: RetrieveItem[] = afterDomain.map((r: Row): RetrieveItem => {
+    const score = ALPHA * r.sim + BETA * timeDecay(r.published_at);
+    return {
+      id: r.id,
+      url: r.url,
+      title: r.title,
+      content: r.content,
+      score,
+    };
+  });
+
+  const items: RetrieveItem[] = mapped
+    .sort((a, b) => (b.score ?? 0) - (a.score ?? 0))
+    .slice(0, topK);
+
+  const filterInfo = {
+    allowMatched: afterDomain.length,
+    denySkipped: rows.length - afterDomain.length,
   };
+
+  // Контракт текущей версии: без поля ok
+  return { items, filterInfo, debugVersion: "rc-v1" };
 }
diff --git a/apps/web/src/lib/retryFetch.ts b/apps/web/src/lib/retryFetch.ts
new file mode 100644
index 0000000..87177c4
--- /dev/null
+++ b/apps/web/src/lib/retryFetch.ts
@@ -0,0 +1,32 @@
+import { sleep } from "./sleep";
+
+const DEFAULT_RETRIES = 3;
+const DEFAULT_BACKOFF_FACTOR = 2;
+
+export async function retryFetch(url: string, options?: RequestInit, retries = DEFAULT_RETRIES, backoffFactor = DEFAULT_BACKOFF_FACTOR): Promise<Response> {
+  let lastError: any = null;
+  for (let i = 0; i < retries; i++) {
+    try {
+      const response = await fetch(url, options);
+      if (response.ok) {
+        return response;
+      } else if (response.status === 429) { // Too Many Requests
+        const retryAfter = response.headers.get('Retry-After');
+        const delay = retryAfter ? parseInt(retryAfter) * 1000 : Math.pow(backoffFactor, i) * 1000;
+        console.warn(`Rate limited. Retrying after ${delay / 1000} seconds...`);
+        await sleep(delay);
+      } else {
+        // For other non-OK responses, throw an error to retry (or fail if no retries left)
+        throw new Error(`HTTP error! status: ${response.status} ${response.statusText}`);
+      }
+    } catch (error) {
+      lastError = error;
+      const delay = Math.pow(backoffFactor, i) * 1000;
+      console.warn(`Fetch failed (${error}). Retrying after ${delay / 1000} seconds...`);
+      await sleep(delay);
+    }
+  }
+  throw lastError; // Re-throw the last error if all retries fail
+}
+
+
diff --git a/apps/web/src/lib/schemas/agent.ts b/apps/web/src/lib/schemas/agent.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/similarity.ts b/apps/web/src/lib/similarity.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/lib/sleep.ts b/apps/web/src/lib/sleep.ts
new file mode 100644
index 0000000..abad2c6
--- /dev/null
+++ b/apps/web/src/lib/sleep.ts
@@ -0,0 +1,5 @@
+export async function sleep(ms: number): Promise<void> {
+  return new Promise(resolve => setTimeout(resolve, ms));
+}
+
+
diff --git a/apps/web/src/lib/suggestNs.ts b/apps/web/src/lib/suggestNs.ts
old mode 100644
new mode 100755
diff --git a/apps/web/src/types/ambient.d.ts b/apps/web/src/types/ambient.d.ts
new file mode 100644
index 0000000..fe2933f
--- /dev/null
+++ b/apps/web/src/types/ambient.d.ts
@@ -0,0 +1,12 @@
+// apps/web/src/types/ambient.d.ts
+declare module "pdf-parse";
+declare module "pdf-parse/lib/pdf-parse.js";
+
+// Если по-прежнему не хочешь тянуть @types/pg, можно оставить и это:
+declare module "pg" {
+  export class Pool {
+    constructor(config?: any);
+    query: (text: string, params?: any[]) => Promise<any>;
+    end: () => Promise<void>;
+  }
+}
diff --git a/apps/web/tests/Smoke-Evals.ps1 b/apps/web/tests/Smoke-Evals.ps1
old mode 100644
new mode 100755
diff --git a/apps/web/tests/golden.json b/apps/web/tests/golden.json
old mode 100644
new mode 100755
diff --git a/apps/web/traces.csv b/apps/web/traces.csv
old mode 100644
new mode 100755
diff --git a/apps/web/tsconfig.backup.json b/apps/web/tsconfig.backup.json
old mode 100644
new mode 100755
diff --git a/apps/web/tsconfig.json b/apps/web/tsconfig.json
old mode 100644
new mode 100755
index 7ea1639..7169dd6
--- a/apps/web/tsconfig.json
+++ b/apps/web/tsconfig.json
@@ -1,41 +1,37 @@
 {
   "compilerOptions": {
-    "target": "ES2017",
-    "lib": [
-      "dom",
-      "dom.iterable",
-      "esnext"
-    ],
-    "allowJs": true,
-    "skipLibCheck": true,
+    "target": "ES2022",
+    "lib": ["dom", "dom.iterable", "esnext"],
+    "module": "ESNext",
+    "moduleResolution": "bundler",
     "strict": true,
     "noEmit": true,
+    "allowJs": true,
+    "skipLibCheck": true,
     "esModuleInterop": true,
-    "module": "esnext",
-    "moduleResolution": "bundler",
     "resolveJsonModule": true,
     "isolatedModules": true,
     "jsx": "preserve",
     "incremental": true,
-    "plugins": [
-      {
-        "name": "next"
-      }
-    ],
     "baseUrl": ".",
     "paths": {
-      "@/*": [
-        "src/*"
-      ]
-    }
+      "@/*": ["./src/*"],
+      "@lib/*": ["./src/lib/*"]
+    },
+    "plugins": [{ "name": "next" }]
   },
   "include": [
     "next-env.d.ts",
-    "**/*.ts",
-    "**/*.tsx",
+    "src/**/*.ts",
+    "src/**/*.tsx",
     ".next/types/**/*.ts"
   ],
   "exclude": [
-    "node_modules"
+    "node_modules",
+    "scripts",                         // apps/web/scripts/** (не нужно tsc)
+    "src/app/api/_archive/**",         // исторические ручки
+    "src/app/api/rag/**",              // старые RAG ручки
+    "src/app/api/memory/**",           // старые memories ручки
+    "src/lib/rag-core.ts"              // старое ядро RAG (не используется)
   ]
 }
diff --git a/apps/web/urls.txt b/apps/web/urls.txt
new file mode 100644
index 0000000..2095d08
--- /dev/null
+++ b/apps/web/urls.txt
@@ -0,0 +1,3 @@
+https://www.rfc-editor.org/rfc/rfc7231
+https://www.rfc-editor.org/rfc/rfc9110
+# комментарии и пустые строки игнорируются
diff --git a/audit-foundation.txt b/audit-foundation.txt
new file mode 100644
index 0000000..a5d7d97
--- /dev/null
+++ b/audit-foundation.txt
@@ -0,0 +1,518 @@
+== GIT =================================================================
+ M apps/web/scripts/ingest_github_paged.sh
+ M apps/web/src/app/api/admin/sql/route.ts
+ M apps/web/src/app/api/ingest/github/route.ts
+ M apps/web/src/app/api/ingest/url/route.ts
+ M apps/web/src/app/api/ingest/youtube/route.ts
+ D scripts/ingest_github_paged.sh
+?? apps/web/scripts/ci_smoke.sh
+?? apps/web/scripts/ingest_many.sh
+?? apps/web/scripts/ingest_youtube.sh
+?? apps/web/scripts/run_admin_sql.sh
+?? apps/web/src/app/api/admin/embed-backfill/
+?? apps/web/urls.txt
+?? audit-foundation.txt
+?? logs/
+?? scripts/audit_foundation.sh
+?? scripts/bootstrap_roadmap.sh
+?? tree.txt
+
+feat/github-ingest
+
+7ac47ad ingest: add PDF+URL flow w/ unchanged detection & backfill; GitHub ingest w/ pagination, includeExt/path filters, dryRun/skipEmbeddings; helper scripts
+ae21254 fix(retrieve): drop contract import of clamp; add local clamp + safe defaults for topK/candidateK/minSimilarity
+b9b57b0 feat: Implement /api/retrieve endpoint compliance and robustness features
+cda5b43 docs(manus): vision, API contract, full manus pack; docker-compose + env example
+e058bfb wip: snapshot before stabilization
+f0c74ba chore(perms): normalize non-executable file modes
+6796af8 chore(restore): restore CI, scripts, docs; mark scripts executable
+b84f6dd Merge remote-tracking branch 'origin/feat/retrieve-v2-domain-filter' into chore/repo-clean
+
+== TREE (apps/web) =====================================================
+apps/web
+├── .editorconfig
+├── .env.example
+├── .env.local
+├── .env.local.example
+├── .eslintrc.json
+├── .gitignore
+├── .ingest_checkpoints
+├── .next
+│   ├── app-build-manifest.json
+│   ├── build-manifest.json
+│   ├── cache
+│   │   └── .rscinfo
+│   ├── fallback-build-manifest.json
+│   ├── package.json
+│   ├── prerender-manifest.json
+│   ├── routes-manifest.json
+│   ├── server
+│   │   ├── app
+│   │   │   └── api
+│   │   ├── app-paths-manifest.json
+│   │   ├── chunks
+│   │   │   ├── [externals]_node:fs_promises_d067aafe._.js
+│   │   │   ├── [externals]_node:fs_promises_d067aafe._.js.map
+│   │   │   ├── [root-of-the-server]__03645013._.js
+│   │   │   ├── [root-of-the-server]__03645013._.js.map
+│   │   │   ├── [root-of-the-server]__06295c4d._.js
+│   │   │   ├── [root-of-the-server]__06295c4d._.js.map
+│   │   │   ├── [root-of-the-server]__14afe40c._.js
+│   │   │   ├── [root-of-the-server]__14afe40c._.js.map
+│   │   │   ├── [root-of-the-server]__355a7e5b._.js
+│   │   │   ├── [root-of-the-server]__355a7e5b._.js.map
+│   │   │   ├── [root-of-the-server]__3dc6cf31._.js
+│   │   │   ├── [root-of-the-server]__3dc6cf31._.js.map
+│   │   │   ├── [root-of-the-server]__44ed951f._.js
+│   │   │   ├── [root-of-the-server]__44ed951f._.js.map
+│   │   │   ├── [root-of-the-server]__4d153cfd._.js
+│   │   │   ├── [root-of-the-server]__4d153cfd._.js.map
+│   │   │   ├── [root-of-the-server]__4ef8ceb6._.js
+│   │   │   ├── [root-of-the-server]__4ef8ceb6._.js.map
+│   │   │   ├── [root-of-the-server]__516719e3._.js
+│   │   │   ├── [root-of-the-server]__516719e3._.js.map
+│   │   │   ├── [root-of-the-server]__5d714310._.js
+│   │   │   ├── [root-of-the-server]__5d714310._.js.map
+│   │   │   ├── [root-of-the-server]__5fef9a5f._.js
+│   │   │   ├── [root-of-the-server]__5fef9a5f._.js.map
+│   │   │   ├── [root-of-the-server]__6fdd5c48._.js
+│   │   │   ├── [root-of-the-server]__6fdd5c48._.js.map
+│   │   │   ├── [root-of-the-server]__818bd5b5._.js
+│   │   │   ├── [root-of-the-server]__818bd5b5._.js.map
+│   │   │   ├── [root-of-the-server]__9a5b6797._.js
+│   │   │   ├── [root-of-the-server]__9a5b6797._.js.map
+│   │   │   ├── [root-of-the-server]__9b7aa630._.js
+│   │   │   ├── [root-of-the-server]__9b7aa630._.js.map
+│   │   │   ├── [root-of-the-server]__9cf23eb4._.js
+│   │   │   ├── [root-of-the-server]__9cf23eb4._.js.map
+│   │   │   ├── [root-of-the-server]__a3ec2704._.js
+│   │   │   ├── [root-of-the-server]__a3ec2704._.js.map
+│   │   │   ├── [root-of-the-server]__b155e635._.js
+│   │   │   ├── [root-of-the-server]__b155e635._.js.map
+│   │   │   ├── [root-of-the-server]__b765c511._.js
+│   │   │   ├── [root-of-the-server]__b765c511._.js.map
+│   │   │   ├── [root-of-the-server]__c1477988._.js
+│   │   │   ├── [root-of-the-server]__c1477988._.js.map
+│   │   │   ├── [root-of-the-server]__cd70de9d._.js
+│   │   │   ├── [root-of-the-server]__cd70de9d._.js.map
+│   │   │   ├── [root-of-the-server]__d2540469._.js
+│   │   │   ├── [root-of-the-server]__d2540469._.js.map
+│   │   │   ├── [root-of-the-server]__d255b2d6._.js
+│   │   │   ├── [root-of-the-server]__d255b2d6._.js.map
+│   │   │   ├── [root-of-the-server]__dc3ae816._.js
+│   │   │   ├── [root-of-the-server]__dc3ae816._.js.map
+│   │   │   ├── [root-of-the-server]__f286527a._.js
+│   │   │   ├── [root-of-the-server]__f286527a._.js.map
+│   │   │   ├── [root-of-the-server]__f5454392._.js
+│   │   │   ├── [root-of-the-server]__f5454392._.js.map
+│   │   │   ├── [root-of-the-server]__ff15cc62._.js
+│   │   │   ├── [root-of-the-server]__ff15cc62._.js.map
+│   │   │   ├── [turbopack]_runtime.js
+│   │   │   ├── [turbopack]_runtime.js.map
+│   │   │   ├── _f94b714c._.js
+│   │   │   ├── _f94b714c._.js.map
+│   │   │   ├── apps_web_src_lib_pg_ts_88ff3eaa._.js
+│   │   │   ├── apps_web_src_lib_pg_ts_88ff3eaa._.js.map
+│   │   │   ├── node_modules_38ad2be6._.js
+│   │   │   ├── node_modules_38ad2be6._.js.map
+│   │   │   ├── node_modules_58897eb9._.js
+│   │   │   ├── node_modules_58897eb9._.js.map
+│   │   │   ├── node_modules_7ae9ad0c._.js
+│   │   │   ├── node_modules_7ae9ad0c._.js.map
+│   │   │   ├── node_modules_ba12b73b._.js
+│   │   │   ├── node_modules_ba12b73b._.js.map
+│   │   │   ├── node_modules_bf024e13._.js
+│   │   │   ├── node_modules_bf024e13._.js.map
+│   │   │   ├── node_modules_d8128759._.js
+│   │   │   ├── node_modules_d8128759._.js.map
+│   │   │   ├── node_modules_next_2512c0a6._.js
+│   │   │   ├── node_modules_next_2512c0a6._.js.map
+│   │   │   ├── node_modules_next_6f5b7eea._.js
+│   │   │   ├── node_modules_next_6f5b7eea._.js.map
+│   │   │   ├── node_modules_next_800aeb7e._.js
+│   │   │   ├── node_modules_next_800aeb7e._.js.map
+│   │   │   ├── node_modules_next_f5ce9021._.js
+│   │   │   ├── node_modules_next_f5ce9021._.js.map
+│   │   │   ├── node_modules_next_fa777b4c._.js
+│   │   │   ├── node_modules_next_fa777b4c._.js.map
+│   │   │   ├── node_modules_node-ensure_index_7f950531.js
+│   │   │   ├── node_modules_node-ensure_index_7f950531.js.map
+│   │   │   ├── node_modules_pdf-parse_index_f716ad8d.js
+│   │   │   ├── node_modules_pdf-parse_index_f716ad8d.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf-parse_30edfd6e.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf-parse_30edfd6e.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_100_build_pdf_71c3c8b3.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_100_build_pdf_71c3c8b3.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_100_build_pdf_worker_52c9fc57.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_100_build_pdf_worker_52c9fc57.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_88_build_pdf_36252b84.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_88_build_pdf_36252b84.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_88_build_pdf_worker_ea871991.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_10_88_build_pdf_worker_ea871991.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_9_426_build_pdf_fe79cad9.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_9_426_build_pdf_fe79cad9.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_9_426_build_pdf_worker_c153a02e.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v1_9_426_build_pdf_worker_c153a02e.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v2_0_550_build_pdf_8d84ce2e.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v2_0_550_build_pdf_8d84ce2e.js.map
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v2_0_550_build_pdf_worker_4a586fdb.js
+│   │   │   ├── node_modules_pdf-parse_lib_pdf_js_v2_0_550_build_pdf_worker_4a586fdb.js.map
+│   │   │   ├── node_modules_youtube-transcript_dist_youtube-transcript_esm_b1a50c57.js
+│   │   │   ├── node_modules_youtube-transcript_dist_youtube-transcript_esm_b1a50c57.js.map
+│   │   │   └── ssr
+│   │   ├── edge
+│   │   │   └── chunks
+│   │   ├── interception-route-rewrite-manifest.js
+│   │   ├── middleware
+│   │   │   └── middleware-manifest.json
+│   │   ├── middleware-build-manifest.js
+│   │   ├── middleware-manifest.json
+│   │   ├── next-font-manifest.js
+│   │   ├── next-font-manifest.json
+│   │   ├── pages
+│   │   │   ├── _app
+│   │   │   ├── _app.js
+│   │   │   ├── _app.js.map
+│   │   │   ├── _document
+│   │   │   ├── _document.js
+│   │   │   ├── _document.js.map
+│   │   │   ├── _error
+│   │   │   ├── _error.js
+│   │   │   └── _error.js.map
+│   │   ├── pages-manifest.json
+│   │   ├── server-reference-manifest.js
+│   │   └── server-reference-manifest.json
+│   ├── static
+│   │   ├── chunks
+│   │   │   ├── [next]_entry_page-loader_ts_8ccf5f86._.js
+│   │   │   ├── [next]_entry_page-loader_ts_8ccf5f86._.js.map
+│   │   │   ├── [next]_entry_page-loader_ts_f9f6e84e._.js
+│   │   │   ├── [next]_entry_page-loader_ts_f9f6e84e._.js.map
+│   │   │   ├── [root-of-the-server]__48b62173._.js
+│   │   │   ├── [root-of-the-server]__48b62173._.js.map
+│   │   │   ├── [root-of-the-server]__f19be104._.js
+│   │   │   ├── [root-of-the-server]__f19be104._.js.map
+│   │   │   ├── [turbopack]_browser_dev_hmr-client_hmr-client_ts_5af4a3bc._.js
+│   │   │   ├── [turbopack]_browser_dev_hmr-client_hmr-client_ts_61dcf9ba._.js
+│   │   │   ├── [turbopack]_browser_dev_hmr-client_hmr-client_ts_61dcf9ba._.js.map
+│   │   │   ├── [turbopack]_browser_dev_hmr-client_hmr-client_ts_6aaa83c7._.js
+│   │   │   ├── [turbopack]_browser_dev_hmr-client_hmr-client_ts_6aaa83c7._.js.map
+│   │   │   ├── apps_web_01f48b92._.js
+│   │   │   ├── apps_web_01f48b92._.js.map
+│   │   │   ├── apps_web_e69f0d32._.js
+│   │   │   ├── apps_web_pages__app_1d999299._.js
+│   │   │   ├── apps_web_pages__app_1d999299._.js.map
+│   │   │   ├── apps_web_pages__app_5771e187._.js
+│   │   │   ├── apps_web_pages__error_5771e187._.js
+│   │   │   ├── apps_web_pages__error_74226f38._.js
+│   │   │   ├── apps_web_pages__error_74226f38._.js.map
+│   │   │   ├── node_modules_@swc_helpers_cjs_8e433861._.js
+│   │   │   ├── node_modules_@swc_helpers_cjs_8e433861._.js.map
+│   │   │   ├── node_modules_f2979c3a._.js
+│   │   │   ├── node_modules_f2979c3a._.js.map
+│   │   │   ├── node_modules_next_app_95ea274f.js
+│   │   │   ├── node_modules_next_app_95ea274f.js.map
+│   │   │   ├── node_modules_next_dist_445d8acf._.js
+│   │   │   ├── node_modules_next_dist_445d8acf._.js.map
+│   │   │   ├── node_modules_next_dist_7c4b9b2a._.js
+│   │   │   ├── node_modules_next_dist_7c4b9b2a._.js.map
+│   │   │   ├── node_modules_next_dist_ad6392d3._.js
+│   │   │   ├── node_modules_next_dist_ad6392d3._.js.map
+│   │   │   ├── node_modules_next_dist_build_polyfills_polyfill-nomodule.js
+│   │   │   ├── node_modules_next_dist_client_20b209c9._.js
+│   │   │   ├── node_modules_next_dist_client_20b209c9._.js.map
+│   │   │   ├── node_modules_next_dist_client_becf32a6._.js
+│   │   │   ├── node_modules_next_dist_client_becf32a6._.js.map
+│   │   │   ├── node_modules_next_dist_compiled_0f1b9fd4._.js
+│   │   │   ├── node_modules_next_dist_compiled_0f1b9fd4._.js.map
+│   │   │   ├── node_modules_next_dist_compiled_ca41998d._.js
+│   │   │   ├── node_modules_next_dist_compiled_ca41998d._.js.map
+│   │   │   ├── node_modules_next_dist_compiled_next-devtools_index_82a36480.js
+│   │   │   ├── node_modules_next_dist_compiled_next-devtools_index_82a36480.js.map
+│   │   │   ├── node_modules_next_dist_compiled_next-devtools_index_d575f738.js
+│   │   │   ├── node_modules_next_dist_compiled_next-devtools_index_d575f738.js.map
+│   │   │   ├── node_modules_next_dist_compiled_react-dom_1f56dc06._.js
+│   │   │   ├── node_modules_next_dist_compiled_react-dom_1f56dc06._.js.map
+│   │   │   ├── node_modules_next_dist_shared_lib_3cbd5cc2._.js
+│   │   │   ├── node_modules_next_dist_shared_lib_3cbd5cc2._.js.map
+│   │   │   ├── node_modules_next_dist_shared_lib_492fcef6._.js
+│   │   │   ├── node_modules_next_dist_shared_lib_492fcef6._.js.map
+│   │   │   ├── node_modules_next_error_8c8bf619.js
+│   │   │   ├── node_modules_next_error_8c8bf619.js.map
+│   │   │   ├── node_modules_react-dom_82bb97c6._.js
+│   │   │   ├── node_modules_react-dom_82bb97c6._.js.map
+│   │   │   └── pages
+│   │   └── development
+│   │       ├── _buildManifest.js
+│   │       ├── _clientMiddlewareManifest.json
+│   │       └── _ssgManifest.js
+│   ├── trace
+│   └── types
+├── .vscode
+│   ├── extensions.json
+│   └── settings.json
+├── Dockerfile
+├── Ping-4O.ps1
+├── README.md
+├── Run-Rag.backup.ps1
+├── Run-Rag.ps1
+├── Sync-Memory.ps1
+├── _sanity_bundle
+│   └── .env.redacted
+├── agents.prod.json
+├── answer.json
+├── ask.json
+├── docs
+│   ├── CHANGELOG.md
+│   ├── evals
+│   │   └── latest.md
+│   └── retrieve-api.md
+├── eslint.config.mjs
+├── freya-rebecca-v0.4.0.bundle
+├── logs
+├── middleware.ts
+├── migrations
+│   └── 2025-08-27_rag_logs.sql
+├── next-env.d.ts
+├── next.config.mjs
+├── package.json
+├── patches
+│   └── 0001-release-main-29.08.2025.patch
+├── public
+│   ├── file.svg
+│   ├── globe.svg
+│   ├── next.svg
+│   ├── vercel.svg
+│   └── window.svg
+├── resp-gpt5.json
+├── retrieve_grep_output.txt
+├── scripts
+│   ├── audit-state.mjs
+│   ├── ci_smoke.sh
+│   ├── contract
+│   │   └── test_retrieve.sh
+│   ├── db
+│   │   ├── maintenance.sh
+│   │   └── maintenance.sql
+│   ├── diag
+│   │   ├── count_chunks.sql
+│   │   ├── count_chunks_ns.ts
+│   │   ├── count_memories.sql
+│   │   ├── count_memories_ns.ts
+│   │   ├── count_ns.sql
+│   │   ├── count_ns.ts
+│   │   ├── list_columns.sh
+│   │   ├── list_columns.sql
+│   │   ├── list_columns.ts
+│   │   ├── list_tables.sh
+│   │   ├── list_tables.sql
+│   │   ├── slots_by_ns.ts
+│   │   └── top_ns.ts
+│   ├── e2e
+│   │   └── bootstrap_demo.sh
+│   ├── embed_backfill.sh
+│   ├── evals
+│   │   ├── golden
+│   │   │   └── rebecca_army_refs.jsonl
+│   │   ├── logs
+│   │   │   └── manual_2025-09-22_18-24.log
+│   │   ├── run_eval.mjs
+│   │   ├── run_eval.ts
+│   │   └── sample_cases.jsonl
+│   ├── ingest_github.sh
+│   ├── ingest_github_paged.sh
+│   ├── ingest_many.sh
+│   ├── ingest_pdf.sh
+│   ├── ingest_pdf_file.sh
+│   ├── ingest_readme_pdfs.sh
+│   ├── ingest_url.sh
+│   ├── ingest_youtube.sh
+│   ├── migrate-g0.js
+│   ├── migrate.sh
+│   ├── migrations
+│   │   ├── G0_init.sql
+│   │   ├── G5_indexes_upserts.sql
+│   │   ├── G6_make_embedding_nullable.sql
+│   │   └── g5_backfill_chunks_from_memories.sql
+│   ├── retrieve.sh
+│   ├── run_admin_sql.sh
+│   └── smoke_pdf.sh
+├── seed.json
+├── seeds
+│   ├── agents
+│   │   └── rebecca.core.v1.json
+│   ├── army
+│   │   └── seed.json
+│   ├── profiles
+│   │   ├── __backup_20250828_194815
+│   │   ├── analyst.json
+│   │   ├── docs.json
+│   │   ├── qa.json
+│   │   ├── rag.json
+│   │   ├── rebecca.profiles.v1.json
+│   │   ├── security.json
+│   │   └── toolsmith.json
+│   ├── rebecca
+│   │   ├── 01-architecture.md
+│   │   ├── 02-rag-pipeline.md
+│   │   ├── 03-prompts-style.md
+│   │   └── 04-kb-curation.md
+│   └── refs
+│       ├── agents
+│       │   ├── autogen.md
+│       │   ├── crewai.md
+│       │   ├── guardrails.md
+│       │   ├── langgraph.md
+│       │   ├── llamaindex.md
+│       │   └── openai-agents.md
+│       └── seed.json
+├── src
+│   ├── app
+│   │   ├── admin
+│   │   │   ├── ingest
+│   │   │   ├── logs
+│   │   │   ├── memory
+│   │   │   ├── playground
+│   │   │   ├── profiles
+│   │   │   └── traces
+│   │   ├── api
+│   │   │   ├── _archive
+│   │   │   ├── admin
+│   │   │   ├── agents
+│   │   │   ├── db-ping
+│   │   │   ├── debug
+│   │   │   ├── dev
+│   │   │   ├── diag
+│   │   │   ├── evals
+│   │   │   ├── freya
+│   │   │   ├── health
+│   │   │   ├── ingest
+│   │   │   ├── initiatives
+│   │   │   ├── logs
+│   │   │   ├── maint
+│   │   │   ├── memory
+│   │   │   ├── ns
+│   │   │   ├── profiles
+│   │   │   ├── rag
+│   │   │   ├── rebecca
+│   │   │   ├── retrieve
+│   │   │   └── schema
+│   │   ├── chat
+│   │   │   └── page.tsx
+│   │   ├── favicon.ico
+│   │   ├── globals.css
+│   │   ├── icon.svg
+│   │   ├── layout.tsx
+│   │   ├── page.module.css
+│   │   ├── page.tsx
+│   │   └── playground
+│   │       └── page.tsx
+│   ├── lib
+│   │   ├── admin-auth.ts
+│   │   ├── admin-guard.ts
+│   │   ├── admin.ts
+│   │   ├── adminAuth.ts
+│   │   ├── auth.ts
+│   │   ├── chunk.ts
+│   │   ├── chunking.ts
+│   │   ├── contracts.ts
+│   │   ├── db.ts
+│   │   ├── domain_filter.ts
+│   │   ├── embeddings.ts
+│   │   ├── env.ts
+│   │   ├── guardrails.ts
+│   │   ├── hash.ts
+│   │   ├── ingest_upsert.ts
+│   │   ├── log.ts
+│   │   ├── logs.ts
+│   │   ├── memories.ts
+│   │   ├── namespaces.ts
+│   │   ├── ns.ts
+│   │   ├── pg.ts
+│   │   ├── profile-runtime.ts
+│   │   ├── profiles.ts
+│   │   ├── rag-core.ts
+│   │   ├── rate_limit.ts
+│   │   ├── recency.ts
+│   │   ├── redact.ts
+│   │   ├── retrieval-contract.ts
+│   │   ├── retriever.ts
+│   │   ├── retriever_v2.ts
+│   │   ├── retryFetch.ts
+│   │   ├── schemas
+│   │   │   └── agent.ts
+│   │   ├── similarity.ts
+│   │   ├── sleep.ts
+│   │   └── suggestNs.ts
+│   └── types
+│       └── ambient.d.ts
+├── tests
+│   ├── Smoke-Evals.ps1
+│   └── golden.json
+├── traces.csv
+├── tsconfig.backup.json
+├── tsconfig.json
+├── tsconfig.tsbuildinfo
+└── urls.txt
+
+83 directories, 342 files
+
+== GREP: ключевые файлы RC-v1 ==========================================
+apps/web/src/app/api/ingest/github/route.ts:2:import { NextResponse } from "next/server";
+apps/web/src/app/api/ingest/github/route.ts:9:export const runtime = "nodejs";
+apps/web/src/app/api/ingest/github/route.ts:10:export const dynamic = "force-dynamic";
+apps/web/src/app/api/ingest/github/route.ts:169:      return NextResponse.json({ ok: false, stage, error: "ns, owner, repo required" }, { status: 400 });
+apps/web/src/app/api/ingest/github/route.ts:210:      return NextResponse.json({
+apps/web/src/app/api/ingest/github/route.ts:224:      return NextResponse.json({
+apps/web/src/app/api/ingest/github/route.ts:451:    return NextResponse.json({
+apps/web/src/app/api/ingest/github/route.ts:467:    return NextResponse.json({ ok: false, stage, error: e?.message || String(e) }, { status: 500 });
+apps/web/src/app/api/ingest/pdf/route.ts:2:import { NextResponse } from "next/server";
+apps/web/src/app/api/ingest/pdf/route.ts:10:export const runtime = "nodejs";
+apps/web/src/app/api/ingest/pdf/route.ts:11:export const dynamic = "force-dynamic";
+apps/web/src/app/api/ingest/pdf/route.ts:88:      return NextResponse.json({ ok: false, stage, error: "ns and url are required" }, { status: 400 });
+apps/web/src/app/api/ingest/pdf/route.ts:91:      return NextResponse.json({ ok: false, stage, error: "slot must be 'staging'|'prod'" }, { status: 400 });
+apps/web/src/app/api/ingest/pdf/route.ts:111:      return NextResponse.json({
+apps/web/src/app/api/ingest/pdf/route.ts:124:      return NextResponse.json({
+apps/web/src/app/api/ingest/pdf/route.ts:177:    return NextResponse.json({
+apps/web/src/app/api/ingest/pdf/route.ts:184:    return NextResponse.json(
+apps/web/src/app/api/ingest/pdf/route.ts:192:  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+apps/web/src/app/api/ingest/seed/route.ts:1:import { NextResponse } from "next/server";
+apps/web/src/app/api/ingest/seed/route.ts:27:      return NextResponse.json({ ok: false, error: "ns and items[] are required" }, { status: 400 });
+apps/web/src/app/api/ingest/seed/route.ts:38:        return NextResponse.json(
+apps/web/src/app/api/ingest/seed/route.ts:51:        return NextResponse.json(
+apps/web/src/app/api/ingest/seed/route.ts:73:    return NextResponse.json({ ok: true, inserted: rows.length });
+apps/web/src/app/api/ingest/seed/route.ts:75:    return NextResponse.json({ ok: false, error: err?.message || String(err), stage: stage.value }, { status: 500 });
+apps/web/src/app/api/ingest/url/route.ts:2:import { NextResponse } from "next/server";
+apps/web/src/app/api/ingest/url/route.ts:10:export const runtime = "nodejs";
+apps/web/src/app/api/ingest/url/route.ts:11:export const dynamic = "force-dynamic";
+apps/web/src/app/api/ingest/url/route.ts:68:      return NextResponse.json({ ok: false, error: "ns and urls are required" }, { status: 400 });
+apps/web/src/app/api/ingest/url/route.ts:71:      return NextResponse.json({ ok: false, error: "slot must be 'staging'|'prod'" }, { status: 400 });
+apps/web/src/app/api/ingest/url/route.ts:111:      return NextResponse.json({
+apps/web/src/app/api/ingest/url/route.ts:160:    return NextResponse.json({
+apps/web/src/app/api/ingest/url/route.ts:167:    return NextResponse.json(
+apps/web/src/app/api/ingest/url/route.ts:175:  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+apps/web/src/app/api/ingest/youtube/route.ts:2:import { NextResponse } from "next/server";
+apps/web/src/app/api/ingest/youtube/route.ts:9:export const runtime = "nodejs";
+apps/web/src/app/api/ingest/youtube/route.ts:10:export const dynamic = "force-dynamic";
+apps/web/src/app/api/ingest/youtube/route.ts:239:      return NextResponse.json({ ok: false, stage, error: "ns required" }, { status: 400 });
+apps/web/src/app/api/ingest/youtube/route.ts:243:      return NextResponse.json({ ok: false, stage, error: "video url or id required" }, { status: 400 });
+apps/web/src/app/api/ingest/youtube/route.ts:254:      return NextResponse.json({
+apps/web/src/app/api/ingest/youtube/route.ts:272:      return NextResponse.json({ ok: false, stage, error: "no transcript available" }, { status: 404 });
+apps/web/src/app/api/ingest/youtube/route.ts:285:      return NextResponse.json({
+apps/web/src/app/api/ingest/youtube/route.ts:382:    return NextResponse.json({
+apps/web/src/app/api/ingest/youtube/route.ts:396:    return NextResponse.json({ ok: false, stage, error: e?.message || String(e) }, { status: 500 });
+apps/web/src/app/api/retrieve/route.ts:2:import { NextResponse } from "next/server";
+apps/web/src/app/api/retrieve/route.ts:10:export const runtime = "nodejs";
+apps/web/src/app/api/retrieve/route.ts:11:export const dynamic = "force-dynamic";
+apps/web/src/app/api/retrieve/route.ts:30:      return NextResponse.json(
+apps/web/src/app/api/retrieve/route.ts:55:    return NextResponse.json(out, { status: 200 });
+apps/web/src/app/api/retrieve/route.ts:57:    return NextResponse.json(
+apps/web/src/app/api/retrieve/route.ts:65:  return NextResponse.json({ error: "Method Not Allowed" }, { status: 405 });
+
+
+
+== ENV (apps/web/.env.local: только ключевые) ==========================
+DATABASE_URL=postgres://rebecca:rebecca@localhost:5432/rebecca?sslmode=disable
+X_ADMIN_KEY=rebecca_4b736b115c6c48ce9b93a4d709fdb7f1d894ef4ffb264da0a4e47f76acaa32ff
+
+== DB: схемы и индексы (через docker) ==================================
diff --git a/docker-compose.yml b/docker-compose.yml
new file mode 100644
index 0000000..6e21550
--- /dev/null
+++ b/docker-compose.yml
@@ -0,0 +1,42 @@
+version: "3.9"
+services:
+  db:
+    image: pgvector/pgvector:pg16
+    container_name: freya-db
+    environment:
+      POSTGRES_DB: freya
+      POSTGRES_USER: freya
+      POSTGRES_PASSWORD: freya
+    ports:
+      - "5432:5432"
+    volumes:
+      - freya_db:/var/lib/postgresql/data
+    healthcheck:
+      test: ["CMD-SHELL", "pg_isready -U freya -d freya"]
+      interval: 5s
+      timeout: 3s
+      retries: 20
+
+  web:
+    build:
+      context: .
+      dockerfile: ./apps/web/Dockerfile
+    container_name: freya-web
+    env_file:
+      - ./apps/web/.env.local
+    environment:
+      PGHOST: db
+      PGPORT: 5432
+      PGDATABASE: freya
+      PGUSER: freya
+      PGPASSWORD: freya
+      PORT: 3000
+    depends_on:
+      db:
+        condition: service_healthy
+    ports:
+      - "3000:3000"
+    command: sh -c "npm i && npm run dev --prefix apps/web"
+
+volumes:
+  freya_db:
diff --git a/docs/CHANGELOG.md b/docs/CHANGELOG.md
old mode 100644
new mode 100755
diff --git a/docs/manus/API_CONTRACT.md b/docs/manus/API_CONTRACT.md
new file mode 100644
index 0000000..a2e75fd
--- /dev/null
+++ b/docs/manus/API_CONTRACT.md
@@ -0,0 +1,33 @@
+# API Contract RC-v1 (кратко)
+
+## POST /api/retrieve
+Request:
+{
+  "q": "string",
+  "ns": "string",
+  "slot": "staging|prod",
+  "nsMode": "prefix|exact",
+  "topK": number,
+  "candidateK": number,
+  "minSimilarity": number,
+  "domainFilter": { "allow"?: string[], "deny"?: string[] }
+}
+
+Response:
+{
+  "items": [{
+    "url": "string", "title": "string|null", "content": "string",
+    "score": number, "ns": "string", "slot": "staging|prod"
+  }],
+  "debugVersion": "rc-v1",
+  "filterInfo"?: any
+}
+
+## POST /api/ingest/url
+{ "ns":"...", "slot":"staging|prod", "urls":["https://..."], "chunk":{"chars":1200,"overlap":150} }
+
+## POST /api/ingest/pdf
+{ "ns":"...", "slot":"staging|prod", "url":"https://...|file://..." }
+
+## POST /api/ingest/github
+{ "ns":"...", "slot":"staging|prod", "owner":"...", "repo":"...", "ref":"main", "includeExt":[".md"], "limit":10 }
diff --git a/docs/manus/VISION.md b/docs/manus/VISION.md
new file mode 100644
index 0000000..afe5c7b
--- /dev/null
+++ b/docs/manus/VISION.md
@@ -0,0 +1,8 @@
+# Vision: Фрея (Генерал ИИ) и Ребекка (Архитектор ИИ-агентов)
+
+Цель: построить управляемую систему ИИ-агентов, где **Фрея** принимает команды пользователя и делегирует их **Ребекке**, которая:
+- агрегирует и запоминает передовые практики по созданию ИИ-агентов (архитектура, код, пайплайны),
+- предлагает архитектуру/структуру нового агента,
+- после согласования собирает его и коммитит в GitHub (через инструменты/интеграции).
+
+ИКР (идеальная конечная реализация): RC-v1 retrieval + ingest; память источников; автогенерация агента из подтверждённого плана; CI/CD на GitHub.
diff --git a/env-check.ps1 b/env-check.ps1
old mode 100644
new mode 100755
diff --git a/logs/db_ping.json b/logs/db_ping.json
new file mode 100644
index 0000000..c1e4f70
--- /dev/null
+++ b/logs/db_ping.json
@@ -0,0 +1,4 @@
+{
+  "ok": true,
+  "now": "2025-09-25T11:37:21.543Z"
+}
diff --git a/logs/git_diff_stat.txt b/logs/git_diff_stat.txt
new file mode 100644
index 0000000..472d56e
--- /dev/null
+++ b/logs/git_diff_stat.txt
@@ -0,0 +1,12 @@
+ apps/web/Dockerfile                                |  9 ++++
+ apps/web/retrieve_grep_output.txt                  |  9 ++++
+ .../migrations/G6_make_embedding_nullable.sql      |  2 +
+ apps/web/src/app/api/ingest/github/route.ts        |  3 +-
+ apps/web/src/app/api/ingest/pdf/route.ts           |  5 +-
+ apps/web/src/app/api/ingest/url/route.ts           |  5 +-
+ apps/web/src/lib/ingest_upsert.ts                  | 62 ++++++++++------------
+ apps/web/src/lib/retrieval-contract.ts             |  9 ++--
+ apps/web/src/lib/retriever_v2.ts                   | 23 +++-----
+ apps/web/src/lib/retryFetch.ts                     | 32 +++++++++++
+ apps/web/src/lib/sleep.ts                          |  5 ++
+ 11 files changed, 101 insertions(+), 63 deletions(-)
diff --git a/logs/git_log.txt b/logs/git_log.txt
new file mode 100644
index 0000000..d900ff7
--- /dev/null
+++ b/logs/git_log.txt
@@ -0,0 +1 @@
+b9b57b0 feat: Implement /api/retrieve endpoint compliance and robustness features
diff --git a/logs/ingest_github.json b/logs/ingest_github.json
new file mode 100644
index 0000000..080a0b7
--- /dev/null
+++ b/logs/ingest_github.json
@@ -0,0 +1,16 @@
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "owner": "openai",
+  "repo": "openai-cookbook",
+  "ref": "main",
+  "totalFiles": 57,
+  "windowStart": 0,
+  "windowEnd": 9,
+  "pageFiles": 10,
+  "chunks": 45,
+  "written": [],
+  "nextCursor": 10,
+  "ms": 11031
+}
diff --git a/logs/ingest_pdf.json b/logs/ingest_pdf.json
new file mode 100644
index 0000000..50732fb
--- /dev/null
+++ b/logs/ingest_pdf.json
@@ -0,0 +1,9 @@
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "url": "https://arxiv.org/pdf/2402.19472.pdf",
+  "pages": null,
+  "chunks": 104,
+  "ms": 14401
+}
diff --git a/logs/ingest_url.json b/logs/ingest_url.json
new file mode 100644
index 0000000..e47c340
--- /dev/null
+++ b/logs/ingest_url.json
@@ -0,0 +1,19 @@
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "urls": [
+    "https://www.rfc-editor.org/rfc/rfc9110",
+    "https://httpbin.org/html"
+  ],
+  "pdfDelegated": 0,
+  "pdfStats": {
+    "chunks": 0,
+    "written": 0
+  },
+  "textChunks": 447,
+  "textInserted": 0,
+  "textUpdated": 0,
+  "failures": [],
+  "ms": 29697
+}
diff --git a/logs/pr_body.md b/logs/pr_body.md
new file mode 100644
index 0000000..c0d87ab
--- /dev/null
+++ b/logs/pr_body.md
@@ -0,0 +1,181 @@
+## Summary
+- G6 migration: `chunks.embedding` set to **NULLABLE**.
+- Robust fetch with retries/UA in `/api/ingest/url` and `/api/ingest/github`.
+- `/api/retrieve` aligned to **RC-v1**: `items[]` (url,title,content,score) + `filterInfo` + `debugVersion`.
+- Added `apps/web/Dockerfile`, minor infra tweaks.
+
+## Evidence
+
+**db-ping**
+```json
+{
+  "ok": true,
+  "now": "2025-09-25T11:37:21.543Z"
+}
+```
+
+**ingest/url**
+```json
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "urls": [
+    "https://www.rfc-editor.org/rfc/rfc9110",
+    "https://httpbin.org/html"
+  ],
+  "pdfDelegated": 0,
+  "pdfStats": {
+    "chunks": 0,
+    "written": 0
+  },
+  "textChunks": 447,
+  "textInserted": 0,
+  "textUpdated": 0,
+  "failures": [],
+  "ms": 29697
+}
+```
+
+**ingest/pdf**
+```json
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "url": "https://arxiv.org/pdf/2402.19472.pdf",
+  "pages": null,
+  "chunks": 104,
+  "ms": 14401
+}
+```
+
+**ingest/github**
+```json
+{
+  "ok": true,
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "owner": "openai",
+  "repo": "openai-cookbook",
+  "ref": "main",
+  "totalFiles": 57,
+  "windowStart": 0,
+  "windowEnd": 9,
+  "pageFiles": 10,
+  "chunks": 45,
+  "written": [],
+  "nextCursor": 10,
+  "ms": 11031
+}
+```
+
+**retrieve (full)**
+```json
+{
+  "items": [
+    {
+      "id": "3f6d1628-86cf-4ab2-9e41-6856f427f93f",
+      "url": "https://www.rfc-editor.org/rfc/rfc9110",
+      "title": null,
+      "content": "= month SP ( 2DIGIT / ( SP DIGIT ) ) day = 2DIGIT day-name = %x4D.6F.6E ; Mon / %x54.75.65 ; Tue / %x57.65.64 ; Wed / %x54.68.75 ; Thu / %x46.72.69 ; Fri / %x53.61.74 ; Sat / %x53.75.6E ; Sun day-name-l = %x4D.6F.6E.64.61.79 ; Monday / %x54.75.65.73.64.61.79 ; Tuesday / %x57.65.64.6E.65.73.64.61.79 ; Wednesday / %x54.68.75.72.73.64.61.79 ; Thursday / %x46.72.69.64.61.79 ; Friday / %x53.61.74.75.72.64.61.79 ; Saturday / %x53.75.6E.64.61.79 ; Sunday delay-seconds = 1*DIGIT entity-tag = [ weak ] opaque-tag etagc = \"!\" / %x23-7E ; '#'-'~' / obs-text expectation = token [ \"=\" ( token / quoted-string ) parameters ] field-content = field-vchar [ 1*( SP / HTAB / field-vchar ) field-vchar ] field-name = token field-value = *field-content field-vchar = VCHAR / obs-text first-pos = 1*DIGIT hour = 2DIGIT http-URI = \"http://\" authority path-abempty [ \"?\" query ] https-URI = \"https://\" authority path-abempty [ \"?\" query ] incl-range = first-pos \"-\" last-pos int-range = first-pos \"-\" [ last-pos ] language-range = &lt;language-range, see [RFC4647], Section 2.1&gt; language-tag = &lt;Language-Tag, see [RFC5646], Section 2.1&gt; last-pos = 1*DIGIT mailbox = &lt;mailbox, see [RFC5322], Section 3.4&g",
+      "score": 0.2869053699785045
+    },
+    {
+      "id": "dad7e002-eb21-4640-8941-1d6b22b4fdfb",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "sert M ( 2 ) within our framework. We comprehensively draw connections across different research directions in Appendix G and briefly present the most similar works here. Model Spider [ 105 ] efficiently ranks models from a pre-trained model zoo. LOVM [ 110 ], Flash-Eval [ 106 ] and Flash-HELM [ 67 ] similarly rank foundation models efficiently on unseen datasets. However, these approaches predict dataset-level metrics rather than instance-level metrics, and thereby cannot be used in our setup to grow the prediction cache efficiently (see Section 2.1). Concurrent to our work, Anchor Point Sampling [ 91 ] and IRT-Clustering [ 69 ] both propose efficient instance-level evaluations by creating smaller core-sets from test data. They introduce clustering-based approaches and item response theory [ 4] to obtain sample-wise accuracy predictions. However, their methods require memory and time complexity quadratic in the number of data samples, i.e., O(|D| 2) requiring well over 10TB of RAM for benchmarks having a million samples. The comparisons are infeasible to scale on datasets bigger than a few thousand samples. In contrast, our novel Sort & Search approach, requires memory and time co",
+      "score": 0.27465805938993865
+    },
+    {
+      "id": "68af4905-d567-422d-8f0b-0b48cf1a3bab",
+      "url": "https://www.rfc-editor.org/rfc/rfc9110",
+      "title": null,
+      "content": "uest separately, retain a revision control history, or implement other non-idempotent side effects for each idempotent request. ¶ Idempotent methods are distinguished because the request can be repeated automatically if a communication failure occurs before the client is able to read the server's response. For example, if a client sends a PUT request and the underlying connection is closed before any response is received, then the client can establish a new connection and retry the idempotent request. It knows that repeating the request will have the same intended effect, even if the original request succeeded, though the response might differ. ¶ A client SHOULD NOT automatically retry a request with a non-idempotent method unless it has some means to know that the request semantics are actually idempotent, regardless of the method, or some means to detect that the original request was never applied. ¶ For example, a user agent can repeat a POST request automatically if it knows (through design or configuration) that the request is safe for that resource. Likewise, a user agent designed specifically to operate on a version control repository might be able to recover from partial fa",
+      "score": 0.2718477804246224
+    },
+    {
+      "id": "547efea3-6532-4a7a-a4b4-9c6b47e2be97",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "ndom sampling approach in Section 4. \n\nSubtask 2: Optimizing ym+1 . Given the n′ observations a′ \n\n> m+1\n\n∈ { 0, 1}1×n′\n\n, how to generate the prediction vector ym+1 ∈ { 0, 1}1×n? We use the threshold given by DP-Search (Listing 1) and obtain the threshold, given in terms of fraction of samples in |a′\n\n> m+1\n\n|. We extrapolate this threshold from \n\nn′ to n points, to obtain the threshold for the prediction vector ym+1 . ym+1 is simply [1⊤ \n\n> k\n\n, 0⊤\n\n> n−k\n\n]\n\nwhere 1k is a vector of all ones of size k and 0n−k is a zero vector of size n − k.So far, we have only discussed evaluation of ∆m new models ( 2 insert M). How can we also efficiently extend the benchmark i.e. efficiently adding ∆n new samples ( 1 insert D )? \n\n3.3 Efficient Insertion of New Samples ( insert D )\n\nTo add new samples into our lifelong benchmark efficiently, we have to estimate their difficulty with respect to the other samples in the cache A. To efficiently determine difficulty by only evaluating \n\nm′ ≪ m models, a ranking over models is required to enable optimally sub-sampling a subset of m′\n\nmodels. This problem is quite similar in structure to the previously discussed addition of new models, where we had",
+      "score": 0.26408371990420404
+    },
+    {
+      "id": "c8566fc8-0849-4218-bf2e-2a51fd530b02",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "we note an MAE degradation when using the continual relaxation of the accuracy prediction values as confidence values, signifying no benefits. However, using the multi-step recursive correction of rankings ( 3 ) provides significant boosts (0.5% boost in MAE at all n′>1, 024 ) due to its ability to locally correct ranking errors that the global sum method ( 1 ) is unable to account for. \n\nDifferent Sampling Methods. In Fig. 4(d), we compare methods used for sub-selecting the data-samples to evaluate—we compare uniform vs. random sampling. Both methods converge very quickly and at similar budgets to their optimal values and start plateauing. However, uniform sampling provides large boosts over random sampling when the sampling budget is small (5% lower MAE at n′=8 )—this can be attributed to its “diversity-seeking” behaviour which helps cover samples from all difficulty ranges, better representing the entire benchmark evaluation samples rather than an unrepresentative random set sampled via random sampling. \n\n> 5\n\nRecursive sum ( 3 ) is not applicable here as all sum values are unique, see Section 3.3. \n\n910 1 10 2 10 3     \n\n> Sampling Budget m'\n> 0.150\n> 0.175\n> 0.200\n> 0.225\n> 0",
+      "score": 0.25675109097348686
+    }
+  ],
+  "filterInfo": {
+    "allowMatched": 200,
+    "denySkipped": 0
+  },
+  "debugVersion": "rc-v1"
+}
+```
+
+**retrieve (compact)**
+```json
+{
+  "items": [
+    {
+      "score": 0.2869053699785045,
+      "title": null,
+      "url": "https://www.rfc-editor.org/rfc/rfc9110"
+    },
+    {
+      "score": 0.27465805938993865,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    },
+    {
+      "score": 0.2718477804246224,
+      "title": null,
+      "url": "https://www.rfc-editor.org/rfc/rfc9110"
+    },
+    {
+      "score": 0.26408371990420404,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    },
+    {
+      "score": 0.25675109097348686,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    }
+  ],
+  "filterInfo": {
+    "allowMatched": 200,
+    "denySkipped": 0
+  },
+  "debugVersion": "rc-v1"
+}
+```
+
+## Diff summary
+```
+b9b57b0 feat: Implement /api/retrieve endpoint compliance and robustness features
+```
+
+```
+ apps/web/Dockerfile                                |  9 ++++
+ apps/web/retrieve_grep_output.txt                  |  9 ++++
+ .../migrations/G6_make_embedding_nullable.sql      |  2 +
+ apps/web/src/app/api/ingest/github/route.ts        |  3 +-
+ apps/web/src/app/api/ingest/pdf/route.ts           |  5 +-
+ apps/web/src/app/api/ingest/url/route.ts           |  5 +-
+ apps/web/src/lib/ingest_upsert.ts                  | 62 ++++++++++------------
+ apps/web/src/lib/retrieval-contract.ts             |  9 ++--
+ apps/web/src/lib/retriever_v2.ts                   | 23 +++-----
+ apps/web/src/lib/retryFetch.ts                     | 32 +++++++++++
+ apps/web/src/lib/sleep.ts                          |  5 ++
+ 11 files changed, 101 insertions(+), 63 deletions(-)
+```
+
+## Notes
+- Keep `snapshot-20250924-2302` as an archived branch.
+- Stage B next: background embeddings, ranking improvements, SQL upsert, CI (tsc + fresh DB migrations + smoke e2e).
diff --git a/logs/retrieve_compact.json b/logs/retrieve_compact.json
new file mode 100644
index 0000000..73fe41f
--- /dev/null
+++ b/logs/retrieve_compact.json
@@ -0,0 +1,34 @@
+{
+  "items": [
+    {
+      "score": 0.2869053699785045,
+      "title": null,
+      "url": "https://www.rfc-editor.org/rfc/rfc9110"
+    },
+    {
+      "score": 0.27465805938993865,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    },
+    {
+      "score": 0.2718477804246224,
+      "title": null,
+      "url": "https://www.rfc-editor.org/rfc/rfc9110"
+    },
+    {
+      "score": 0.26408371990420404,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    },
+    {
+      "score": 0.25675109097348686,
+      "title": null,
+      "url": "https://arxiv.org/pdf/2402.19472.pdf"
+    }
+  ],
+  "filterInfo": {
+    "allowMatched": 200,
+    "denySkipped": 0
+  },
+  "debugVersion": "rc-v1"
+}
diff --git a/logs/retrieve_full.json b/logs/retrieve_full.json
new file mode 100644
index 0000000..760acdc
--- /dev/null
+++ b/logs/retrieve_full.json
@@ -0,0 +1,44 @@
+{
+  "items": [
+    {
+      "id": "3f6d1628-86cf-4ab2-9e41-6856f427f93f",
+      "url": "https://www.rfc-editor.org/rfc/rfc9110",
+      "title": null,
+      "content": "= month SP ( 2DIGIT / ( SP DIGIT ) ) day = 2DIGIT day-name = %x4D.6F.6E ; Mon / %x54.75.65 ; Tue / %x57.65.64 ; Wed / %x54.68.75 ; Thu / %x46.72.69 ; Fri / %x53.61.74 ; Sat / %x53.75.6E ; Sun day-name-l = %x4D.6F.6E.64.61.79 ; Monday / %x54.75.65.73.64.61.79 ; Tuesday / %x57.65.64.6E.65.73.64.61.79 ; Wednesday / %x54.68.75.72.73.64.61.79 ; Thursday / %x46.72.69.64.61.79 ; Friday / %x53.61.74.75.72.64.61.79 ; Saturday / %x53.75.6E.64.61.79 ; Sunday delay-seconds = 1*DIGIT entity-tag = [ weak ] opaque-tag etagc = \"!\" / %x23-7E ; '#'-'~' / obs-text expectation = token [ \"=\" ( token / quoted-string ) parameters ] field-content = field-vchar [ 1*( SP / HTAB / field-vchar ) field-vchar ] field-name = token field-value = *field-content field-vchar = VCHAR / obs-text first-pos = 1*DIGIT hour = 2DIGIT http-URI = \"http://\" authority path-abempty [ \"?\" query ] https-URI = \"https://\" authority path-abempty [ \"?\" query ] incl-range = first-pos \"-\" last-pos int-range = first-pos \"-\" [ last-pos ] language-range = &lt;language-range, see [RFC4647], Section 2.1&gt; language-tag = &lt;Language-Tag, see [RFC5646], Section 2.1&gt; last-pos = 1*DIGIT mailbox = &lt;mailbox, see [RFC5322], Section 3.4&g",
+      "score": 0.2869053699785045
+    },
+    {
+      "id": "dad7e002-eb21-4640-8941-1d6b22b4fdfb",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "sert M ( 2 ) within our framework. We comprehensively draw connections across different research directions in Appendix G and briefly present the most similar works here. Model Spider [ 105 ] efficiently ranks models from a pre-trained model zoo. LOVM [ 110 ], Flash-Eval [ 106 ] and Flash-HELM [ 67 ] similarly rank foundation models efficiently on unseen datasets. However, these approaches predict dataset-level metrics rather than instance-level metrics, and thereby cannot be used in our setup to grow the prediction cache efficiently (see Section 2.1). Concurrent to our work, Anchor Point Sampling [ 91 ] and IRT-Clustering [ 69 ] both propose efficient instance-level evaluations by creating smaller core-sets from test data. They introduce clustering-based approaches and item response theory [ 4] to obtain sample-wise accuracy predictions. However, their methods require memory and time complexity quadratic in the number of data samples, i.e., O(|D| 2) requiring well over 10TB of RAM for benchmarks having a million samples. The comparisons are infeasible to scale on datasets bigger than a few thousand samples. In contrast, our novel Sort & Search approach, requires memory and time co",
+      "score": 0.27465805938993865
+    },
+    {
+      "id": "68af4905-d567-422d-8f0b-0b48cf1a3bab",
+      "url": "https://www.rfc-editor.org/rfc/rfc9110",
+      "title": null,
+      "content": "uest separately, retain a revision control history, or implement other non-idempotent side effects for each idempotent request. ¶ Idempotent methods are distinguished because the request can be repeated automatically if a communication failure occurs before the client is able to read the server's response. For example, if a client sends a PUT request and the underlying connection is closed before any response is received, then the client can establish a new connection and retry the idempotent request. It knows that repeating the request will have the same intended effect, even if the original request succeeded, though the response might differ. ¶ A client SHOULD NOT automatically retry a request with a non-idempotent method unless it has some means to know that the request semantics are actually idempotent, regardless of the method, or some means to detect that the original request was never applied. ¶ For example, a user agent can repeat a POST request automatically if it knows (through design or configuration) that the request is safe for that resource. Likewise, a user agent designed specifically to operate on a version control repository might be able to recover from partial fa",
+      "score": 0.2718477804246224
+    },
+    {
+      "id": "547efea3-6532-4a7a-a4b4-9c6b47e2be97",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "ndom sampling approach in Section 4. \n\nSubtask 2: Optimizing ym+1 . Given the n′ observations a′ \n\n> m+1\n\n∈ { 0, 1}1×n′\n\n, how to generate the prediction vector ym+1 ∈ { 0, 1}1×n? We use the threshold given by DP-Search (Listing 1) and obtain the threshold, given in terms of fraction of samples in |a′\n\n> m+1\n\n|. We extrapolate this threshold from \n\nn′ to n points, to obtain the threshold for the prediction vector ym+1 . ym+1 is simply [1⊤ \n\n> k\n\n, 0⊤\n\n> n−k\n\n]\n\nwhere 1k is a vector of all ones of size k and 0n−k is a zero vector of size n − k.So far, we have only discussed evaluation of ∆m new models ( 2 insert M). How can we also efficiently extend the benchmark i.e. efficiently adding ∆n new samples ( 1 insert D )? \n\n3.3 Efficient Insertion of New Samples ( insert D )\n\nTo add new samples into our lifelong benchmark efficiently, we have to estimate their difficulty with respect to the other samples in the cache A. To efficiently determine difficulty by only evaluating \n\nm′ ≪ m models, a ranking over models is required to enable optimally sub-sampling a subset of m′\n\nmodels. This problem is quite similar in structure to the previously discussed addition of new models, where we had",
+      "score": 0.26408371990420404
+    },
+    {
+      "id": "c8566fc8-0849-4218-bf2e-2a51fd530b02",
+      "url": "https://arxiv.org/pdf/2402.19472.pdf",
+      "title": null,
+      "content": "we note an MAE degradation when using the continual relaxation of the accuracy prediction values as confidence values, signifying no benefits. However, using the multi-step recursive correction of rankings ( 3 ) provides significant boosts (0.5% boost in MAE at all n′>1, 024 ) due to its ability to locally correct ranking errors that the global sum method ( 1 ) is unable to account for. \n\nDifferent Sampling Methods. In Fig. 4(d), we compare methods used for sub-selecting the data-samples to evaluate—we compare uniform vs. random sampling. Both methods converge very quickly and at similar budgets to their optimal values and start plateauing. However, uniform sampling provides large boosts over random sampling when the sampling budget is small (5% lower MAE at n′=8 )—this can be attributed to its “diversity-seeking” behaviour which helps cover samples from all difficulty ranges, better representing the entire benchmark evaluation samples rather than an unrepresentative random set sampled via random sampling. \n\n> 5\n\nRecursive sum ( 3 ) is not applicable here as all sum values are unique, see Section 3.3. \n\n910 1 10 2 10 3     \n\n> Sampling Budget m'\n> 0.150\n> 0.175\n> 0.200\n> 0.225\n> 0",
+      "score": 0.25675109097348686
+    }
+  ],
+  "filterInfo": {
+    "allowMatched": 200,
+    "denySkipped": 0
+  },
+  "debugVersion": "rc-v1"
+}
diff --git a/package-lock.json b/package-lock.json
index 803dece..b009170 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -16,19 +16,24 @@
         "@mozilla/readability": "^0.6.0",
         "cheerio": "^1.1.2",
         "dotenv": "^17.2.1",
+        "ffmpeg-static": "^5.2.0",
+        "fluent-ffmpeg": "^2.1.3",
         "gray-matter": "^4.0.3",
         "jsdom": "^26.1.0",
         "next": "15.4.6",
-        "openai": "^5.13.1",
+        "openai": "^5.23.1",
+        "pdf-parse": "^1.1.1",
         "pg": "^8.16.3",
         "react": "19.1.0",
         "react-dom": "19.1.0",
         "youtube-transcript": "^1.2.1",
+        "ytdl-core": "^4.11.5",
         "zod": "^3.25.76"
       },
       "devDependencies": {
         "@eslint/eslintrc": "^3",
         "@types/node": "^20",
+        "@types/pg": "^8.15.5",
         "@types/react": "^19",
         "@types/react-dom": "^19",
         "eslint": "^9",
@@ -159,6 +164,21 @@
         "node": ">=18"
       }
     },
+    "node_modules/@derhuerst/http-basic": {
+      "version": "8.2.4",
+      "resolved": "https://registry.npmjs.org/@derhuerst/http-basic/-/http-basic-8.2.4.tgz",
+      "integrity": "sha512-F9rL9k9Xjf5blCz8HsJRO4diy111cayL2vkY2XE4r4t3n0yPXVYy3KD3nJ1qbrSn9743UWSXH4IwuCa/HWlGFw==",
+      "license": "MIT",
+      "dependencies": {
+        "caseless": "^0.12.0",
+        "concat-stream": "^2.0.0",
+        "http-response-object": "^3.0.1",
+        "parse-cache-control": "^1.0.1"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
     "node_modules/@emnapi/core": {
       "version": "1.4.5",
       "resolved": "https://registry.npmjs.org/@emnapi/core/-/core-1.4.5.tgz",
@@ -1096,6 +1116,18 @@
         "undici-types": "~6.21.0"
       }
     },
+    "node_modules/@types/pg": {
+      "version": "8.15.5",
+      "resolved": "https://registry.npmjs.org/@types/pg/-/pg-8.15.5.tgz",
+      "integrity": "sha512-LF7lF6zWEKxuT3/OR8wAZGzkg4ENGXFNyiV/JeOt9z5B+0ZVwbql9McqX5c/WStFq1GaGso7H1AzP/qSzmlCKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/node": "*",
+        "pg-protocol": "*",
+        "pg-types": "^2.2.0"
+      }
+    },
     "node_modules/@types/react": {
       "version": "19.1.10",
       "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.10.tgz",
@@ -1922,6 +1954,11 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/async": {
+      "version": "0.2.10",
+      "resolved": "https://registry.npmjs.org/async/-/async-0.2.10.tgz",
+      "integrity": "sha512-eAkdoKxU6/LkKDBzLpT+t6Ff5EtfSF4wx1WfJiPEEV7WNLnDaRXk0oVysiEPm262roaachGexwUv94WhSgN5TQ=="
+    },
     "node_modules/async-function": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/async-function/-/async-function-1.0.0.tgz",
@@ -2005,6 +2042,12 @@
         "node": ">=8"
       }
     },
+    "node_modules/buffer-from": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
+      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
+      "license": "MIT"
+    },
     "node_modules/call-bind": {
       "version": "1.0.8",
       "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz",
@@ -2085,6 +2128,12 @@
       ],
       "license": "CC-BY-4.0"
     },
+    "node_modules/caseless": {
+      "version": "0.12.0",
+      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
+      "integrity": "sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==",
+      "license": "Apache-2.0"
+    },
     "node_modules/chalk": {
       "version": "4.1.2",
       "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
@@ -2202,6 +2251,21 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/concat-stream": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-2.0.0.tgz",
+      "integrity": "sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==",
+      "engines": [
+        "node >= 6.0"
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "buffer-from": "^1.0.0",
+        "inherits": "^2.0.3",
+        "readable-stream": "^3.0.2",
+        "typedarray": "^0.0.6"
+      }
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
@@ -2542,6 +2606,15 @@
         "url": "https://github.com/fb55/entities?sponsor=1"
       }
     },
+    "node_modules/env-paths": {
+      "version": "2.2.1",
+      "resolved": "https://registry.npmjs.org/env-paths/-/env-paths-2.2.1.tgz",
+      "integrity": "sha512-+h1lkLKhZMTYjog1VEpJNG7NZJWcuc2DDk/qsqSTRRCOXiLjeQ1d1/udrUGhqMxUgAlwKNZ0cf2uqan5GLuS2A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/es-abstract": {
       "version": "1.24.0",
       "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.24.0.tgz",
@@ -3244,6 +3317,47 @@
         "reusify": "^1.0.4"
       }
     },
+    "node_modules/ffmpeg-static": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/ffmpeg-static/-/ffmpeg-static-5.2.0.tgz",
+      "integrity": "sha512-WrM7kLW+do9HLr+H6tk7LzQ7kPqbAgLjdzNE32+u3Ff11gXt9Kkkd2nusGFrlWMIe+XaA97t+I8JS7sZIrvRgA==",
+      "hasInstallScript": true,
+      "license": "GPL-3.0-or-later",
+      "dependencies": {
+        "@derhuerst/http-basic": "^8.2.0",
+        "env-paths": "^2.2.0",
+        "https-proxy-agent": "^5.0.0",
+        "progress": "^2.0.3"
+      },
+      "engines": {
+        "node": ">=16"
+      }
+    },
+    "node_modules/ffmpeg-static/node_modules/agent-base": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
+      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
+      "license": "MIT",
+      "dependencies": {
+        "debug": "4"
+      },
+      "engines": {
+        "node": ">= 6.0.0"
+      }
+    },
+    "node_modules/ffmpeg-static/node_modules/https-proxy-agent": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
+      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
+      "license": "MIT",
+      "dependencies": {
+        "agent-base": "6",
+        "debug": "4"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/file-entry-cache": {
       "version": "8.0.0",
       "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-8.0.0.tgz",
@@ -3308,6 +3422,32 @@
       "dev": true,
       "license": "ISC"
     },
+    "node_modules/fluent-ffmpeg": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/fluent-ffmpeg/-/fluent-ffmpeg-2.1.3.tgz",
+      "integrity": "sha512-Be3narBNt2s6bsaqP6Jzq91heDgOEaDCJAXcE3qcma/EJBSy5FB4cvO31XBInuAuKBx8Kptf8dkhjK0IOru39Q==",
+      "deprecated": "Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.",
+      "license": "MIT",
+      "dependencies": {
+        "async": "^0.2.9",
+        "which": "^1.1.1"
+      },
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/fluent-ffmpeg/node_modules/which": {
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",
+      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "which": "bin/which"
+      }
+    },
     "node_modules/for-each": {
       "version": "0.3.5",
       "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz",
@@ -3685,6 +3825,21 @@
         "node": ">= 14"
       }
     },
+    "node_modules/http-response-object": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/http-response-object/-/http-response-object-3.0.2.tgz",
+      "integrity": "sha512-bqX0XTF6fnXSQcEJ2Iuyr75yVakyjIDCqroJQ/aHfSdlM743Cwqoi2nDYMzLGWUcuTWGWy8AAvOKXTfiv6q9RA==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/node": "^10.0.3"
+      }
+    },
+    "node_modules/http-response-object/node_modules/@types/node": {
+      "version": "10.17.60",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.60.tgz",
+      "integrity": "sha512-F0KIgDJfy2nA3zMLmWGKxcH2ZVEtCZXHHdOQs2gSaQ27+lNeEfGxzkIw90aXswATX7AZ33tahPbzy6KAfUreVw==",
+      "license": "MIT"
+    },
     "node_modules/https-proxy-agent": {
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-7.0.6.tgz",
@@ -3747,6 +3902,12 @@
         "node": ">=0.8.19"
       }
     },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "license": "ISC"
+    },
     "node_modules/internal-slot": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz",
@@ -4196,7 +4357,6 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/iterator.prototype": {
@@ -4421,6 +4581,19 @@
       "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
       "license": "ISC"
     },
+    "node_modules/m3u8stream": {
+      "version": "0.8.6",
+      "resolved": "https://registry.npmjs.org/m3u8stream/-/m3u8stream-0.8.6.tgz",
+      "integrity": "sha512-LZj8kIVf9KCphiHmH7sbFQTVe4tOemb202fWwvJwR9W5ENW/1hxJN6ksAWGhQgSBSa3jyWhnjKU1Fw1GaOdbyA==",
+      "license": "MIT",
+      "dependencies": {
+        "miniget": "^4.2.2",
+        "sax": "^1.2.4"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/math-intrinsics": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
@@ -4455,6 +4628,15 @@
         "node": ">=8.6"
       }
     },
+    "node_modules/miniget": {
+      "version": "4.2.3",
+      "resolved": "https://registry.npmjs.org/miniget/-/miniget-4.2.3.tgz",
+      "integrity": "sha512-SjbDPDICJ1zT+ZvQwK0hUcRY4wxlhhNpHL9nJOB2MEAXRGagTljsO8MEDzQMTFf0Q8g4QNi8P9lEm/g7e+qgzA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/minimatch": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
@@ -4577,6 +4759,12 @@
         }
       }
     },
+    "node_modules/node-ensure": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/node-ensure/-/node-ensure-0.0.0.tgz",
+      "integrity": "sha512-DRI60hzo2oKN1ma0ckc6nQWlHU69RH6xN0sjQTjMpChPfTYvKZdcQFfdYK2RWbJcKyUizSIy/l8OTGxMAM1QDw==",
+      "license": "MIT"
+    },
     "node_modules/nth-check": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-2.1.1.tgz",
@@ -4719,9 +4907,9 @@
       }
     },
     "node_modules/openai": {
-      "version": "5.13.1",
-      "resolved": "https://registry.npmjs.org/openai/-/openai-5.13.1.tgz",
-      "integrity": "sha512-Jty97Apw40znKSlXZL2YDap1U2eN9NfXbqm/Rj1rExeOLEnhwezpKQ+v43kIqojavUgm30SR3iuvGlNEBR+AFg==",
+      "version": "5.23.1",
+      "resolved": "https://registry.npmjs.org/openai/-/openai-5.23.1.tgz",
+      "integrity": "sha512-APxMtm5mln4jhKhAr0d5zP9lNsClx4QwJtg8RUvYSSyxYCTHLNJnLEcSHbJ6t0ori8Pbr9HZGfcPJ7LEy73rvQ==",
       "license": "Apache-2.0",
       "bin": {
         "openai": "bin/cli"
@@ -4820,6 +5008,11 @@
         "node": ">=6"
       }
     },
+    "node_modules/parse-cache-control": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parse-cache-control/-/parse-cache-control-1.0.1.tgz",
+      "integrity": "sha512-60zvsJReQPX5/QP0Kzfd/VrpjScIQ7SHBW6bFCYfEP+fp0Eppr1SHhIO5nd1PjZtvclzSzES9D/p5nFJurwfWg=="
+    },
     "node_modules/parse5": {
       "version": "7.3.0",
       "resolved": "https://registry.npmjs.org/parse5/-/parse5-7.3.0.tgz",
@@ -4896,6 +5089,28 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/pdf-parse": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/pdf-parse/-/pdf-parse-1.1.1.tgz",
+      "integrity": "sha512-v6ZJ/efsBpGrGGknjtq9J/oC8tZWq0KWL5vQrk2GlzLEQPUDB1ex+13Rmidl1neNN358Jn9EHZw5y07FFtaC7A==",
+      "license": "MIT",
+      "dependencies": {
+        "debug": "^3.1.0",
+        "node-ensure": "^0.0.0"
+      },
+      "engines": {
+        "node": ">=6.8.1"
+      }
+    },
+    "node_modules/pdf-parse/node_modules/debug": {
+      "version": "3.2.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.7.tgz",
+      "integrity": "sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==",
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.1"
+      }
+    },
     "node_modules/pg": {
       "version": "8.16.3",
       "resolved": "https://registry.npmjs.org/pg/-/pg-8.16.3.tgz",
@@ -5091,6 +5306,15 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/progress": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
+      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
     "node_modules/prop-types": {
       "version": "15.8.1",
       "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
@@ -5161,6 +5385,20 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/readable-stream": {
+      "version": "3.6.2",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
+      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
+      "license": "MIT",
+      "dependencies": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/reflect.getprototypeof": {
       "version": "1.0.10",
       "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.10.tgz",
@@ -5307,6 +5545,26 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/safe-buffer": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
+      "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
     "node_modules/safe-push-apply": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/safe-push-apply/-/safe-push-apply-1.0.0.tgz",
@@ -5348,6 +5606,12 @@
       "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
       "license": "MIT"
     },
+    "node_modules/sax": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/sax/-/sax-1.4.1.tgz",
+      "integrity": "sha512-+aWOz7yVScEGoKNd4PA10LZ8sk0A/z5+nXQG5giUO5rprX9jgYsTdov9qCchZiPIZezbZH+jRut8nPodFAX4Jg==",
+      "license": "ISC"
+    },
     "node_modules/saxes": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/saxes/-/saxes-6.0.0.tgz",
@@ -5638,6 +5902,15 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/string_decoder": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.3.0.tgz",
+      "integrity": "sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==",
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "~5.2.0"
+      }
+    },
     "node_modules/string.prototype.includes": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/string.prototype.includes/-/string.prototype.includes-2.0.1.tgz",
@@ -6064,6 +6337,12 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/typedarray": {
+      "version": "0.0.6",
+      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
+      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
+      "license": "MIT"
+    },
     "node_modules/typescript": {
       "version": "5.9.2",
       "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.9.2.tgz",
@@ -6158,6 +6437,12 @@
         "punycode": "^2.1.0"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "license": "MIT"
+    },
     "node_modules/w3c-xmlserializer": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-5.0.0.tgz",
@@ -6399,6 +6684,20 @@
         "node": ">=18.0.0"
       }
     },
+    "node_modules/ytdl-core": {
+      "version": "4.11.5",
+      "resolved": "https://registry.npmjs.org/ytdl-core/-/ytdl-core-4.11.5.tgz",
+      "integrity": "sha512-27LwsW4n4nyNviRCO1hmr8Wr5J1wLLMawHCQvH8Fk0hiRqrxuIu028WzbJetiYH28K8XDbeinYW4/wcHQD1EXA==",
+      "license": "MIT",
+      "dependencies": {
+        "m3u8stream": "^0.8.6",
+        "miniget": "^4.2.2",
+        "sax": "^1.1.3"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/zod": {
       "version": "3.25.76",
       "resolved": "https://registry.npmjs.org/zod/-/zod-3.25.76.tgz",
diff --git a/scripts/audit_foundation.sh b/scripts/audit_foundation.sh
new file mode 100755
index 0000000..03136fd
--- /dev/null
+++ b/scripts/audit_foundation.sh
@@ -0,0 +1,73 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
+cd "$ROOT"
+
+echo "== GIT ================================================================="
+git status --porcelain=v1
+echo
+git branch --show-current
+echo
+git log --oneline -n 8
+echo
+
+echo "== TREE (apps/web) ====================================================="
+if command -v tree >/dev/null 2>&1; then
+  tree -a -L 4 apps/web | sed 's/\r//g'
+else
+  find apps/web -maxdepth 4 -print | sed 's/^\.\///'
+fi
+echo
+
+echo "== GREP: ключевые файлы RC-v1 =========================================="
+# Роуты инжеста/ретрива
+grep -nH --color=never -E "export const runtime|export const dynamic|NextResponse" \
+  apps/web/src/app/api/ingest/**/*.* \
+  apps/web/src/app/api/retrieve/route.ts 2>/dev/null || true
+echo
+
+# Апсерт и хеш
+grep -nH --color=never -E "upsertChunks|content_hash|digest|sha256" \
+  apps/web/src/lib/**/*.* 2>/dev/null || true
+echo
+
+# Ретривер и контракт
+grep -nH --color=never -E "retrieve|retriever|Retrieval|RC-?v1|domainFilter|recency" \
+  apps/web/src/lib/**/*.* 2>/dev/null || true
+echo
+
+echo "== ENV (apps/web/.env.local: только ключевые) =========================="
+grep -E '^(BASE|DATABASE_URL|X_ADMIN_KEY)=' apps/web/.env.local || true
+echo
+
+echo "== DB: схемы и индексы (через docker) =================================="
+# Поменяй при необходимости имена контейнера/пользователя/БД
+DB_CONT="${DB_CONT:-pgvector}"
+DB_USER="${DB_USER:-rebecca}"
+DB_NAME="${DB_NAME:-rebecca}"
+
+docker exec -i "$DB_CONT" psql -U "$DB_USER" -d "$DB_NAME" -c "\dt"
+echo
+docker exec -i "$DB_CONT" psql -U "$DB_USER" -d "$DB_NAME" -c "\d+ chunks"
+echo
+docker exec -i "$DB_CONT" psql -U "$DB_USER" -d "$DB_NAME" -c "\di+ chunks_*"
+echo
+docker exec -i "$DB_CONT" psql -U "$DB_USER" -d "$DB_NAME" -c \
+"SELECT count(*) AS chunks_total,
+        sum((content_hash IS NOT NULL)::int) AS with_hash
+ FROM chunks;"
+echo
+
+echo "== SAMPLE ROWS =========================================================="
+docker exec -i "$DB_CONT" psql -U "$DB_USER" -d "$DB_NAME" -c \
+"SELECT ns, slot, left(source_id,60) AS source, chunk_no,
+        left(content_hash,12) AS hash12,
+        to_char(created_at,'YYYY-MM-DD HH24:MI') AS created_at,
+        to_char(updated_at,'YYYY-MM-DD HH24:MI') AS updated_at
+ FROM chunks
+ ORDER BY updated_at DESC NULLS LAST
+ LIMIT 10;"
+echo
+
+echo "== DONE ================================================================"
diff --git a/scripts/bootstrap_roadmap.sh b/scripts/bootstrap_roadmap.sh
new file mode 100755
index 0000000..1d673df
--- /dev/null
+++ b/scripts/bootstrap_roadmap.sh
@@ -0,0 +1,225 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# Требования:
+#  - GitHub CLI: gh auth login
+#  - Находиться в корне нужного репозитория (или указать REPO_NWO)
+
+REPO_NWO="${REPO_NWO:-$(gh repo view --json nameWithOwner -q .nameWithOwner 2>/dev/null || true)}"
+if [[ -z "$REPO_NWO" ]]; then
+  echo "❌ Не удалось определить репозиторий. Либо запусти в git-репозитории с gh, либо экспортируй REPO_NWO=owner/repo"
+  exit 1
+fi
+echo "📦 Репозиторий: $REPO_NWO"
+
+# ---------- 1) ЛЕЙБЛЫ ----------
+# name|color (hex без '#')|description
+LABELS=(
+  "db|0e8a16|Database & indexing"
+  "architecture|5319e7|Architecture & design"
+  "docs|0052CC|Documentation"
+  "ingest|d73a4a|Ingest pipelines"
+  "ci|fbca04|CI & testing"
+  "quality|c2e0c6|Eval & quality"
+  "rag|1d76db|RAG pipelines"
+  "llm|c5def5|LLM provider layer"
+  "mcp|006b75|MCP adapters"
+  "frontend|d4c5f9|Freya Console UI"
+  "a2a|b60205|Agent-to-Agent readiness"
+  "ops|bfd4f2|Operations & security"
+)
+
+echo "🏷  Создаю/синхронизирую лейблы…"
+for spec in "${LABELS[@]}"; do
+  IFS='|' read -r name color desc <<<"$spec"
+  # Проверка существования
+  if gh api "repos/${REPO_NWO}/labels/${name}" >/dev/null 2>&1; then
+    # Обновим цвет/описание на всякий случай
+    gh api -X PATCH "repos/${REPO_NWO}/labels/${name}" \
+      -f new_name="$name" -f color="$color" -f description="$desc" >/dev/null
+  else
+    gh api -X POST "repos/${REPO_NWO}/labels" \
+      -f name="$name" -f color="$color" -f description="$desc" >/dev/null
+  fi
+done
+echo "✅ Лейблы готовы."
+
+# ---------- 2) МАЙЛСТОУНЫ ----------
+# title|description
+MILES=(
+  "A. Data Foundation|Хэши/UNIQUE, политика Hot/Warm/Cold, дедуп, Sizing & Tuning"
+  "B. Ingest Front|YouTube Whisper fallback, /api/ingest/text, CI+smoke, eval+metrics"
+  "C. Unfreeze RAG|/api/answer,/api/ask,/memory, hybrid+rerank, citations, guardrails"
+  "D. MCP Layer|MCP-адаптеры для ingest/retrieve, авторизация, README"
+  "E. Freya Console UI|Загрузка, Поиск, Чат, Админ-панель"
+  "F. A2A Readiness|Роли, outbox/queue, capability cards"
+  "G. Scale & Prod|Партиции, индексы, backfill/reindex, бэкапы, мониторинг, безопасность"
+)
+
+declare -A MNUM  # title -> number
+echo "🎯 Создаю/синхронизирую майлстоуны…"
+for m in "${MILES[@]}"; do
+  title="${m%%|*}"
+  desc="${m#*|}"
+  # Попробуем найти существующий
+  existing="$(gh api "repos/${REPO_NWO}/milestones?state=all&per_page=100" | jq -r --arg t "$title" '.[] | select(.title==$t) | @base64' || true)"
+  if [[ -n "$existing" ]]; then
+    obj="$(echo "$existing" | head -n1 | base64 -d)"
+    num="$(echo "$obj" | jq -r '.number')"
+    # Обновим описание и откроем (на случай, если закрыт)
+    gh api -X PATCH "repos/${REPO_NWO}/milestones/${num}" \
+      -f title="$title" -f description="$desc" -f state="open" >/dev/null
+    MNUM["$title"]="$num"
+  else
+    # Создаём
+    created="$(gh api -X POST "repos/${REPO_NWO}/milestones" -f title="$title" -f state="open" -f description="$desc")"
+    num="$(echo "$created" | jq -r '.number')"
+    MNUM["$title"]="$num"
+  fi
+done
+echo "✅ Майлстоуны готовы."
+
+# ---------- 3) УТИЛИТА СОЗДАНИЯ ISSUE ----------
+create_issue () {
+  local title="$1"
+  local body="$2"
+  local milestone_title="$3"
+  local labels_csv="$4"
+
+  local milestone_num="${MNUM[$milestone_title]:-}"
+  if [[ -z "$milestone_num" ]]; then
+    echo "⚠️  Не найден номер майлстоуна '$milestone_title' — пропущено: $title"
+    return 0
+  fi
+
+  gh issue create \
+    --title "$title" \
+    --body "$body" \
+    --milestone "$milestone_title" \
+    --label "$labels_csv" >/dev/null
+
+  echo "  • Issue: $title  [${milestone_title}]  {$labels_csv}"
+}
+
+echo "📝 Создаю задачи…"
+
+# A
+create_issue "UNIQUE(ns,slot,source_id,chunk_no) + content_hash" \
+"- [ ] Добавить content_hash с нормализацией текста
+- [ ] UNIQUE(ns,slot,source_id,chunk_no) + индекс по hash
+- [ ] Идемпотентный upsert в upsertChunksWithTargets" \
+"A. Data Foundation" "db"
+
+create_issue "Политика Hot/Warm/Cold + партиционирование (ns/slot × time)" \
+"- [ ] Документ policy (месяц/квартал)
+- [ ] План партиционирования (doc-first)
+- [ ] Критерии миграции в warm/cold" \
+"A. Data Foundation" "architecture"
+
+create_issue "Sizing & Tuning guide" \
+"- [ ] Формулы объёмов (вектор/индекс)
+- [ ] Рекомендации HNSW/IVFFLAT
+- [ ] VACUUM/REINDEX расписания" \
+"A. Data Foundation" "docs"
+
+# B
+create_issue "YouTube: Whisper fallback" \
+"- [ ] /api/ingest/youtube — если нет сабов, транскрибируем
+- [ ] Параметры lang/timestamps; chunking как у PDF
+- [ ] Лимиты и прогресс-лог" \
+"B. Ingest Front" "ingest"
+
+create_issue "Универсальный текстовый ingest /api/ingest/text" \
+"- [ ] POST raw text + meta (ns/slot/kind/url)
+- [ ] chunkText + upsert + embeddings
+- [ ] CLI scripts/ingest_text.sh" \
+"B. Ingest Front" "ingest"
+
+create_issue "CI + smoke-тесты ingest→retrieve" \
+"- [ ] tsc, линтер, e2e ingest маленького текста
+- [ ] Проверка retrieve по ключевым словам" \
+"B. Ingest Front" "ci"
+
+create_issue "Metrics & Evals (baseline)" \
+"- [ ] 5–10 golden-вопросов
+- [ ] nightly eval; алерты на регресс" \
+"B. Ingest Front" "quality"
+
+# C
+create_issue "/api/answer: RAG с цитатами" \
+"- [ ] Вектор+BM25 ретрив, top-50 → rerank
+- [ ] Обязательные ссылки на источники (URL/файл/репо)
+- [ ] Guardrails (timeouts, retries, no-citation=no-answer)" \
+"C. Unfreeze RAG" "rag"
+
+create_issue "/api/ask: multi-turn + память" \
+"- [ ] Thread storage (short/long)
+- [ ] Inline цитаты + кнопки «показать источники»" \
+"C. Unfreeze RAG" "rag"
+
+create_issue "LLM provider layer (Option C) — интеграция в RAG" \
+"- [ ] Подключить lib/llm/* в /api/answer,/api/ask
+- [ ] Переключение через .env (openai/openrouter)" \
+"C. Unfreeze RAG" "llm"
+
+# D
+create_issue "MCP адаптеры: ingest tools (GitHub/URL/PDF/YouTube/Text)" \
+"- [ ] MCP endpoints для наших роутов
+- [ ] Авторизация и квоты
+- [ ] README с примерами вызова" \
+"D. MCP Layer" "mcp"
+
+create_issue "MCP: retrieve/search capability" \
+"- [ ] Поиск с фильтрами (ns/slot/date)
+- [ ] Унифицированный формат результатов" \
+"D. MCP Layer" "mcp"
+
+# E
+create_issue "UI: Загрузка (URL/PDF/GitHub/YouTube/Text)" \
+"- [ ] Формы, опции chunk/dryRun/skipEmb
+- [ ] Прогресс/лог последней операции" \
+"E. Freya Console UI" "frontend"
+
+create_issue "UI: Поиск" \
+"- [ ] Query + фильтры (ns/slot/domain/date)
+- [ ] Список чанков с переходом к источнику" \
+"E. Freya Console UI" "frontend"
+
+create_issue "UI: Чат (RAG)" \
+"- [ ] Multi-turn; выбор модели (если openrouter)
+- [ ] Цитаты и кнопка «источники»" \
+"E. Freya Console UI" "frontend"
+
+create_issue "UI: Admin" \
+"- [ ] Диагностика (db-ping, gh-rate)
+- [ ] Размеры таблиц/индексов; NULL-эмбеддинги; backfill/reindex" \
+"E. Freya Console UI" "frontend"
+
+# F
+create_issue "A2A: роли и capability-карты" \
+"- [ ] Planner/Retriever/Coder/Runner
+- [ ] IO-границы, capability cards" \
+"F. A2A Readiness" "a2a"
+
+create_issue "A2A: outbox/queue для делегирования" \
+"- [ ] Схема очереди (outbox)
+- [ ] Трейсинг задач" \
+"F. A2A Readiness" "a2a"
+
+# G
+create_issue "Партиционирование и индексы (HNSW/IVFFLAT)" \
+"- [ ] Включение партиций по порогу объёма
+- [ ] Стратегия hot/warm/cold" \
+"G. Scale & Prod" "db"
+
+create_issue "Backfill/Reindex schedule + Backups/Restore" \
+"- [ ] Ночные джобы
+- [ ] Бэкапы и проверка восстановления" \
+"G. Scale & Prod" "ops"
+
+create_issue "Мониторинг и безопасность" \
+"- [ ] Метрики latency/size/cache
+- [ ] Rate-limits, audit, rotate ключей" \
+"G. Scale & Prod" "ops"
+
+echo "✅ Roadmap bootstrap complete."
diff --git a/scripts/ingest_from_desktop.sh b/scripts/ingest_from_desktop.sh
new file mode 100644
index 0000000..692e7f6
--- /dev/null
+++ b/scripts/ingest_from_desktop.sh
@@ -0,0 +1,108 @@
+#!/usr/bin/env bash
+set -euo pipefail
+
+# ==== ENV ====
+: "${BASE:=http://localhost:3000}"
+: "${X_ADMIN_KEY:?need X_ADMIN_KEY}"
+: "${NS:?need NS}"
+: "${SLOT:=staging}"
+export ADMIN_KEY="${ADMIN_KEY:-$X_ADMIN_KEY}"
+
+# ==== Windows Desktop in/out ====
+WIN_DESKTOP=$(wslpath "$(powershell.exe -NoProfile -Command "[Environment]::GetFolderPath('Desktop')" | tr -d '\r')")
+IN_DIR="${WIN_DESKTOP}/Rebecca_Ingest/in"
+OUT_DIR="${WIN_DESKTOP}/Rebecca_Ingest/out"
+mkdir -p "$IN_DIR" "$OUT_DIR"
+
+# ==== deps check ====
+need() { command -v "$1" >/dev/null 2>&1 || { echo "need $1"; exit 1; }; }
+need pandoc; need catdoc; need jq; need python3; need curl; need pdftotext; need ocrmypdf; need tesseract
+
+# ==== tmp ====
+TMP_DIR=/tmp/rebecca_ingest
+TXT_DIR="$TMP_DIR/txt"
+PDF_TMP="$TMP_DIR/pdf"
+rm -rf "$TMP_DIR"; mkdir -p "$TXT_DIR" "$PDF_TMP"
+
+# ==== convert .docx/.doc/.pdf -> .txt ====
+find "$IN_DIR" -maxdepth 1 -type f \( -iname '*.docx' -o -iname '*.doc' -o -iname '*.pdf' \) | while read -r f; do
+  bn="$(basename "$f")"; base="${bn%.*}"
+  if echo "$bn" | grep -qi '\.docx$'; then
+    pandoc -f docx -t plain "$f" -o "$TXT_DIR/$base.txt"
+  elif echo "$bn" | grep -qi '\.doc$'; then
+    catdoc "$f" > "$TXT_DIR/$base.txt" || true
+  else
+    # PDF → text (try native)
+    pdftotext -layout "$f" "$TXT_DIR/$base.txt" || true
+    # If empty (likely a scan) → OCR → txt
+    if [ ! -s "$TXT_DIR/$base.txt" ]; then
+      ocrmypdf -l rus+eng --force-ocr --deskew --rotate-pages --output-type pdf "$f" "$PDF_TMP/$base.ocr.pdf" || true
+      pdftotext -layout "$PDF_TMP/$base.ocr.pdf" "$TXT_DIR/$base.txt" || true
+      # если и после OCR пусто — удаляем, чтобы не тащить мусор
+      [ -s "$TXT_DIR/$base.txt" ] || rm -f "$TXT_DIR/$base.txt"
+    fi
+  fi
+done
+
+# ==== build items (chunk ~1200, overlap 120, stable source_id by abs path) ====
+export TXT_DIR
+python3 - <<'PY' > /tmp/items.json
+import os, json, hashlib
+TXT_DIR=os.environ.get("TXT_DIR")
+CHARS=1200; OVER=120
+def chunks_for_text(s, ch=CHARS, ov=OVER):
+    out=[]; i=0; n=len(s); k=0
+    while i<n:
+        part=s[i:i+ch].strip()
+        if part: out.append({"chunk_no":k,"content":part})
+        if i+ch>=n: break
+        i+=ch-ov; k+=1
+    return out
+items=[]
+for fn in sorted(os.listdir(TXT_DIR)):
+    if not fn.lower().endswith(".txt"): continue
+    p=os.path.join(TXT_DIR,fn)
+    with open(p,'r',encoding='utf-8',errors='ignore') as f:
+        txt=f.read().replace('\r',' ').strip()
+    if not txt: continue
+    title=os.path.splitext(fn)[0]
+    abs_linux_path=os.path.abspath(p)
+    sid="text:"+hashlib.sha1(abs_linux_path.encode("utf-8")).hexdigest()[:16]
+    items.append({
+        "source_id": sid,
+        "url": None,
+        "title": title,
+        "source_type": "text",
+        "kind": "text",
+        "doc_metadata": {
+            "ingest":"seed","file":fn,
+            "chunk_chars":CHARS,"overlap":OVER,
+            "path_linux":abs_linux_path,
+            "content_sha1": hashlib.sha1(txt.encode("utf-8")).hexdigest()
+        },
+        "chunks": chunks_for_text(txt)
+    })
+print(json.dumps(items, ensure_ascii=False))
+PY
+
+# ---- auth self-check (dryRun) ----
+echo "[auth-check] Using X_ADMIN_KEY (len=${#X_ADMIN_KEY})"
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: ${X_ADMIN_KEY}" \
+  --data-binary '{"ns":"'"$NS"'","slot":"'"$SLOT"'","items":[{"source_id":"text:auth-selfcheck","url":null,"title":"Auth self-check","source_type":"text","kind":"text","doc_metadata":{},"chunks":[{"chunk_no":0,"content":"auth check chunk > 32 chars"}]}],"minChars":32,"dryRun":true}' \
+| jq '{ok,dryRun,error}'
+
+# ==== payload -> seed ====
+jq -n --arg ns "$NS" --arg slot "$SLOT" --slurpfile items /tmp/items.json \
+'{ ns:$ns, slot:$slot, items:$items[0], minChars:32, dryRun:false }' > /tmp/seed_batch.json
+
+curl -sS -X POST "$BASE/api/ingest/seed" \
+  -H "content-type: application/json" \
+  -H "x-admin-key: ${X_ADMIN_KEY}" \
+  --data-binary @/tmp/seed_batch.json \
+| tee "$OUT_DIR/seed_result.json" \
+| jq '{ok,textChunks,textInserted,textUpdated,unchanged,targetsCount,ms,error}'
+
+# ==== embeddings backfill ====
+bash ./scripts/embed_backfill.sh "$NS" "$SLOT" | tee "$OUT_DIR/embed_backfill.log"
diff --git a/scripts/ingest_github_paged.sh b/scripts/ingest_github_paged.sh
deleted file mode 100644
index bc860b4..0000000
--- a/scripts/ingest_github_paged.sh
+++ /dev/null
@@ -1,76 +0,0 @@
-#!/usr/bin/env bash
-set -euo pipefail
-
-# Usage:
-#   scripts/ingest_github_paged.sh OWNER REPO NS SLOT [REF] [LIMIT] [INCLUDE_EXT_JSON]
-# Example:
-#   scripts/ingest_github_paged.sh NirDiamant agents-towards-production rebecca/army/refs staging main 250 '[".md",".mdx",".py",".ipynb",".txt",".ts",".tsx"]'
-
-OWNER="${1:-openai}"
-REPO="${2:-openai-cookbook}"
-NS="${3:-rebecca/army/refs}"
-SLOT="${4:-staging}"
-REF="${5:-main}"
-LIMIT="${6:-250}"
-INCLUDE_EXT_JSON="${7:-[".md",".mdx",".py",".ipynb",".txt"]}"
-
-APP=~/projects/freya-rebecca/apps/web
-BASE=http://localhost:3000
-ADM="x-admin-key: $(grep -E '^X_ADMIN_KEY=' "$APP/.env.local" | cut -d= -f2-)"
-
-# checkpoint для продолжения с места остановки
-CKPT_DIR="$APP/.ingest_checkpoints"
-mkdir -p "$CKPT_DIR"
-CKPT="$CKPT_DIR/${OWNER}_${REPO}_${REF}.cursor"
-
-if [[ -f "$CKPT" ]]; then
-  CURSOR=$(cat "$CKPT")
-else
-  CURSOR=0
-fi
-
-echo ">>> Ingest $OWNER/$REPO@$REF into ns=$NS slot=$SLOT (limit=$LIMIT) from cursor=$CURSOR"
-TOTAL=""
-PAGE=0
-
-while true; do
-  REQ=$(jq -n \
-    --arg ns "$NS" --arg slot "$SLOT" \
-    --arg owner "$OWNER" --arg repo "$REPO" --arg ref "$REF" \
-    --argjson cursor $CURSOR --argjson limit $LIMIT \
-    --argjson includeExt "$INCLUDE_EXT_JSON" \
-    '{ns:$ns,slot:$slot,owner:$owner,repo:$repo,ref:$ref,includeExt:$includeExt,cursor:$cursor,limit:$limit}')
-
-  RESP=$(curl -sS -X POST "$BASE/api/ingest/github" \
-    -H 'Content-Type: application/json' -H "$ADM" \
-    --data-binary "$REQ")
-
-  OK=$(echo "$RESP" | jq -r '.ok')
-  if [[ "$OK" != "true" ]]; then
-    echo "$RESP" | jq .
-    echo "!!! error, stopping"
-    exit 1
-  fi
-
-  TOTAL=$(echo "$RESP" | jq -r '.totalFiles')
-  WINDOW_START=$(echo "$RESP" | jq -r '.windowStart')
-  WINDOW_END=$(echo "$RESP" | jq -r '.windowEnd')
-  PAGE_FILES=$(echo "$RESP" | jq -r '.pageFiles')
-  CHUNKS=$(echo "$RESP" | jq -r '.chunks')
-  WRITTEN=$(echo "$RESP" | jq -r '.written')
-  MS=$(echo "$RESP" | jq -r '.ms')
-  NEXT=$(echo "$RESP" | jq -r '.nextCursor')
-
-  PAGE=$((PAGE+1))
-  echo "page #$PAGE files [$WINDOW_START..$WINDOW_END] pageFiles=$PAGE_FILES chunks=$CHUNKS written=$WRITTEN time=${MS}ms"
-
-  if [[ "$NEXT" != "null" && -n "$NEXT" ]]; then
-    echo -n "$NEXT" > "$CKPT"
-    CURSOR="$NEXT"
-    sleep 1
-  else
-    rm -f "$CKPT"
-    echo ">>> Done. totalFiles=$TOTAL"
-    break
-  fi
-done
diff --git a/scripts/repair_published_at.sh b/scripts/repair_published_at.sh
old mode 100644
new mode 100755
diff --git a/seed1.json b/seed1.json
new file mode 100644
index 0000000..18e6ac0
--- /dev/null
+++ b/seed1.json
@@ -0,0 +1,19 @@
+{
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "items": [
+    {
+      "source_id": "test://seed/minimal",
+      "url": "test://seed/minimal",
+      "title": "Minimal Seed Doc",
+      "published_at": null,
+      "source_type": "seed",
+      "kind": "doc",
+      "doc_metadata": { "note": "minimal-e2e" },
+      "chunks": [
+        { "chunk_no": 0, "content": "Hello RC-v1. This is chunk #0.", "metadata": { "p": 1 } },
+        { "chunk_no": 1, "content": "Hello RC-v1. This is chunk #1.", "metadata": { "p": 2 } }
+      ]
+    }
+  ]
+}
diff --git a/seed_chunks.json b/seed_chunks.json
new file mode 100644
index 0000000..c108215
--- /dev/null
+++ b/seed_chunks.json
@@ -0,0 +1,33 @@
+{
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "items": [
+    {
+      "source_id": "test://seed/minimal",
+      "url": "test://seed/minimal",
+      "title": "Seed Minimal Doc",
+      "source_type": "seed",
+      "kind": "doc",
+      "doc_metadata": {
+        "note": "seed-e2e"
+      },
+      "chunks": [
+        {
+          "chunk_no": 0,
+          "content": "Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. Seed chunks #0. ",
+          "metadata": {
+            "p": 1
+          }
+        },
+        {
+          "chunk_no": 1,
+          "content": "Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. Seed chunks #1. ",
+          "metadata": {
+            "p": 2
+          }
+        }
+      ]
+    }
+  ],
+  "minChars": 32
+}
diff --git a/seed_long.json b/seed_long.json
new file mode 100644
index 0000000..e0c1079
--- /dev/null
+++ b/seed_long.json
@@ -0,0 +1,34 @@
+{
+  "ns": "rebecca/army/refs",
+  "slot": "staging",
+  "items": [
+    {
+      "source_id": "test://seed/minimal",
+      "url": "test://seed/minimal",
+      "title": "Minimal Seed Doc",
+      "published_at": null,
+      "source_type": "seed",
+      "kind": "doc",
+      "text": "Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. \n\nHello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. ",
+      "doc_metadata": {
+        "note": "minimal-e2e"
+      },
+      "chunks": [
+        {
+          "chunk_no": 0,
+          "content": "Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. Hello RC-v1. This is chunk #0. ",
+          "metadata": {
+            "p": 1
+          }
+        },
+        {
+          "chunk_no": 1,
+          "content": "Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. Hello RC-v1. This is chunk #1. ",
+          "metadata": {
+            "p": 2
+          }
+        }
+      ]
+    }
+  ]
+}
diff --git a/tree.txt b/tree.txt
new file mode 100644
index 0000000..cbd7645
--- /dev/null
+++ b/tree.txt
@@ -0,0 +1,9852 @@
+.
+├── .git
+│   ├── COMMIT_EDITMSG
+│   ├── EDIT_DESCRIPTION
+│   ├── FETCH_HEAD
+│   ├── HEAD
+│   ├── ORIG_HEAD
+│   ├── config
+│   ├── description
+│   ├── hooks
+│   │   ├── applypatch-msg.sample
+│   │   ├── commit-msg.sample
+│   │   ├── fsmonitor-watchman.sample
+│   │   ├── post-update.sample
+│   │   ├── pre-applypatch.sample
+│   │   ├── pre-commit.sample
+│   │   ├── pre-merge-commit.sample
+│   │   ├── pre-push.sample
+│   │   ├── pre-rebase.sample
+│   │   ├── pre-receive.sample
+│   │   ├── prepare-commit-msg.sample
+│   │   ├── push-to-checkout.sample
+│   │   ├── sendemail-validate.sample
+│   │   └── update.sample
+│   ├── index
+│   ├── info
+│   │   └── exclude
+│   ├── logs
+│   │   ├── HEAD
+│   │   └── refs
+│   │       ├── heads
+│   │       └── remotes
+│   ├── lost-found
+│   │   └── other
+│   │       └── 953a8ce61ceb37073825e0cf4a061e7c961d4d31
+│   ├── objects
+│   │   ├── 00
+│   │   │   ├── 4145cddf3f9db91b57b9cb596683c8eb420862
+│   │   │   └── 574483cccf9cc80262ce8775455b1c8d1d59ea
+│   │   ├── 01
+│   │   │   ├── 22686432e64e653b8f83072baa5b2edeb30e03
+│   │   │   ├── 3a93acabd5efc1183870c41a676ba6937382ce
+│   │   │   ├── 49cd7cffc2b0658ce6608a2d1f12d94e6ce409
+│   │   │   └── fcd7455b495b6f3d9e6f999b647f7b3cd53b60
+│   │   ├── 02
+│   │   │   ├── 88277227081f0e7e5848df16210be1adf6894f
+│   │   │   ├── 8d25476726688184b17eec621a96ad59ea7c50
+│   │   │   ├── 94d5eac1545b3160453d1f88b1ea823fd4fa98
+│   │   │   ├── a2f8599d7216dc9af59951887e8203c359a7e9
+│   │   │   └── d3e8fd01a1c591c22b7e2681741298feefabc0
+│   │   ├── 03
+│   │   │   ├── 26aceba9a5230be306205ad69fc78eb88d3979
+│   │   │   └── 4eab4e1290c7bd68f187095e17ae8be1702174
+│   │   ├── 04
+│   │   │   ├── 2f76b946ee78ce5427ee9cb28a8c336b74ebd3
+│   │   │   ├── 6455e6eb9264fb6d9be358a86abc64290e54ae
+│   │   │   ├── 66ce10643a5ef35709803cf84f9481580c5543
+│   │   │   ├── 70db05de14f99a6c06e68b22e5d6d7767c409a
+│   │   │   ├── 9b667097204bc7c111bfae15e4733f3b904faf
+│   │   │   └── e4a1dfe20193939083323345e8f00b4fdad1fc
+│   │   ├── 05
+│   │   │   ├── 07b36e6d0e7f95c6719eaa0138c220678f71f9
+│   │   │   ├── 0f9f07050ce2256707fbe5bfe7e3b4979aaec6
+│   │   │   ├── 2f9348b4f595ef79b75bd9682e70f3ccbad010
+│   │   │   ├── 632cc9470dc4d0d96947763a0eda388b6189dd
+│   │   │   ├── 974dee358743fb4a79617e1c9b3f5f06751e10
+│   │   │   └── a28987a89efec35fcd63f47558c863735ea9fe
+│   │   ├── 06
+│   │   │   ├── 717ff3fb9a89e5751f7f15706da93096781e7f
+│   │   │   ├── af4711a7de3d2258488d4d333111082f09e113
+│   │   │   ├── c6d87d153ceac29abd616d87ac9aac096ecfc1
+│   │   │   ├── d27ae3f786d432126c7b84636c508aef0fcaa9
+│   │   │   └── df0cfe0fbcf53c3497a8f90f8004be5b519f19
+│   │   ├── 07
+│   │   │   └── 295af4599fea84515b30c2a03c69a30deaba00
+│   │   ├── 08
+│   │   │   └── 28c544e47c5c12d2f610977922d7c189ddfc04
+│   │   ├── 09
+│   │   │   ├── 3a4462018a1e65f1ec5bfd8543b12143f91435
+│   │   │   ├── 506e53486115560c419e95542c2c739c584975
+│   │   │   ├── 6788061b2118793b3835cd0ca88cda9e69e762
+│   │   │   ├── 8747f5d5369d3aa37f4b6c1765af84120e9edf
+│   │   │   ├── 9e0c624b73704332fd3a9bec82112ce1dc22ce
+│   │   │   ├── bf125b2e074c897fc003cbab632109ed6211f0
+│   │   │   └── c2944e46dfbdea44797eacc966f39a3578f310
+│   │   ├── 0a
+│   │   │   ├── 07b0c30bc851e13a6cbbbabdd0ea031a37c824
+│   │   │   ├── 2d02fd54f7a77b00a042aa8bd0bf89a4155116
+│   │   │   ├── 4a92d4424e3fe8f84700ef27b732e884591bfd
+│   │   │   ├── 4ee0ce82298c79f89ec8f45de3b8380288a4a2
+│   │   │   ├── 63cd0de5277c98d2cc3017bef21e49e040a9c4
+│   │   │   ├── 85ae6b94ae51e6414a028a015343c8a4499561
+│   │   │   ├── 94c6087e177a782216bbbd5df416f8640f57d3
+│   │   │   ├── 9811c61b52faf10c357ad6ff26b13d584ce1f1
+│   │   │   ├── bd69c82d21865848094512809eb4949e0be894
+│   │   │   ├── fd9a661862fd9ff7057381c7b509ffa1658556
+│   │   │   └── ff90b22b31d934a9eafdbae624b5434ac2fc85
+│   │   ├── 0b
+│   │   │   ├── b1b94bc7587fa11991e3636879a3149ed6a237
+│   │   │   └── e92534f221b35df19387906201167921c451f2
+│   │   ├── 0c
+│   │   │   └── 4b0d6e1fd4217fb8c5587c2439c69b5c972960
+│   │   ├── 0d
+│   │   │   ├── 0dd631390efd5448343f266f550e087b0eef8c
+│   │   │   ├── 12d70446d36b612e16b71673d3315bdd090730
+│   │   │   ├── 3f325c2dbe1936f2a0f5ae55ef9327de052bbc
+│   │   │   ├── 4de29f8b02ea97f9a3855c10f4c8d8886278fd
+│   │   │   ├── 5fe7592272cb8e77899e5d41fa3c8895f9d446
+│   │   │   ├── da80e20f3e8641a0fb47b096db0433f25c6d6e
+│   │   │   └── f218c4c863a78897367d45ac159ca8489d134e
+│   │   ├── 0e
+│   │   │   ├── 000222b18a50f5da837cd7189bd3d0ae118abc
+│   │   │   ├── 8e8c384a45a7dbd2f99894eec146d720d3fbcc
+│   │   │   └── cdcb03975f654d2a8299561fbae48675d62137
+│   │   ├── 0f
+│   │   │   ├── 2e66ac95086deda047ef0c2cf180c4d6b8f3b4
+│   │   │   ├── 3c0ecbea249a4e55c2c2ad96ee70dd60f0d325
+│   │   │   ├── 496185eabfcac58b5c5dd0d22933a07dc6b95b
+│   │   │   ├── 67060b148d4c39ebc1540a05ccaa5cfbf39433
+│   │   │   ├── 71531772a98fa69a9d7c5a649ef0db365eef00
+│   │   │   ├── a3cb99d47ded0d83ccd60083598e3b04be99b7
+│   │   │   ├── b17286c11b8637452d5ecd6c5721149e3e586c
+│   │   │   ├── e2aa74533993a09b62e4d01063b6e36a83be00
+│   │   │   └── f0699c48cfc6902a8d3c86493bdacf800e6c35
+│   │   ├── 10
+│   │   │   ├── 0ac244c85449681334c86adea58b7c6fa292a1
+│   │   │   ├── 0b244d5b845c33f5d97c5d44f730ebc5523e80
+│   │   │   ├── 2693d160fb269e41c8a450c5a64ee8d349be33
+│   │   │   ├── 997550b77ff4b769bc115cb4e63570b334e541
+│   │   │   └── e6b2e09870bf4f1f704f777b6f9f2464718dea
+│   │   ├── 11
+│   │   │   ├── 036a8d89c6b32c0ac7051fdcab6d71dbe5ee09
+│   │   │   ├── 0d6b4a436d12f7c85eae7f3617958302a4bb71
+│   │   │   ├── 2e06084a7f2d4ac4be01bbf4675579be29c300
+│   │   │   ├── 55b67477b974e9046801124919027c53fc89da
+│   │   │   ├── 858cf74f4bf6a32d0ab26bc30585b804497f6a
+│   │   │   ├── b3072dc19a71f9c9ae9fd4fe7e54664ef68c33
+│   │   │   ├── b9826de9f12636025713009c7a4539b601608a
+│   │   │   └── f47881e514cefaaec2a342fcd3a0b54ac7bb8c
+│   │   ├── 12
+│   │   │   ├── 0b128f5d3614c647baf7d8a978e75221b59ffd
+│   │   │   ├── 3b1d0f54261eb0f1843cd61ebc52493b5e1c64
+│   │   │   ├── b95912fb402d950882cff0313002f923844527
+│   │   │   └── bc4aff30f372fd578b72d7642e272b46209595
+│   │   ├── 13
+│   │   │   ├── 0bc6a1a1c207bac5aafeecb350fddb64cf4205
+│   │   │   ├── 148681925ad1b73166411d372069679e319fa2
+│   │   │   ├── 296272a190da007d9dec97405377af89e65ac7
+│   │   │   └── 9a2d0def837976b919653c1a4079a29abf9cd2
+│   │   ├── 14
+│   │   │   ├── 522707cc6cfeb489d7cf493801542f563292a6
+│   │   │   ├── 598ef154939a6ab96ba64304e43703f1fd7725
+│   │   │   ├── 69ebf8aeaaf1471bb46e3b2bd11b0c7608fdf3
+│   │   │   ├── 964ab6e0412f281d7fc80086dca8e82c82f47f
+│   │   │   ├── d04266db07f1f41e8efff5eb67d82f350075c4
+│   │   │   └── e999df5f028ef98e0cc950b34b84c31a58a1d1
+│   │   ├── 15
+│   │   │   ├── 43732e033af61a2d886f45d8745b9cdeb680ed
+│   │   │   ├── 49af60171bf90b168b168f2cfb3b6e8fe74eb4
+│   │   │   ├── 84f288494d55487074ffbec2aad99aebf7f9c7
+│   │   │   ├── 99490700dcc7df69f384fc575ab4f7379e77b1
+│   │   │   ├── b4975d4a54e09ba725906553164a1fa048e7b0
+│   │   │   ├── b54371dd6188d0978ac80b174461ab5b245053
+│   │   │   └── d954c79a070f72dba8ca5bfe0fa856b6545a2b
+│   │   ├── 16
+│   │   │   ├── 2bbd75403fba74f79925e69bdf20fdfadda989
+│   │   │   ├── 738e00ea6205a2fefb59aea1b11b8311ef2d4a
+│   │   │   └── 760d3fac91561bbd46353d9cea22ca2b1300fb
+│   │   ├── 17
+│   │   │   ├── 8c543ce363c8e298f09e5c936910ea78c90b0c
+│   │   │   ├── add286379faf2b265dbce67e295559cf2f7568
+│   │   │   └── cb71626bc94f93eb206ec9ee308567e40f9f90
+│   │   ├── 18
+│   │   │   └── 1e81ea097eb58348e7c19ea2809e2a4f1e138e
+│   │   ├── 19
+│   │   │   ├── 765bd501b636fce433540d9e6735f51d66151d
+│   │   │   └── e18e3caee15d86cfafdda2f01d8af865e46955
+│   │   ├── 1a
+│   │   │   ├── 3d3881a8d3ef717092ad525041c8edebd16de6
+│   │   │   ├── e0e381eb88098d288f36922d553ef73f91de98
+│   │   │   └── e36cc0de50a41606f529fa2f64557272fe8a97
+│   │   ├── 1b
+│   │   │   ├── 58ab2951a7925d562c51322a76289adad4c76b
+│   │   │   ├── 69ca7f4df55db924091a1ab937b31384862a9a
+│   │   │   ├── 6dfe5b09f612c2369088fa955f2329f5f3dde5
+│   │   │   ├── 7486a16d03f417b5f710ec0cabf134774a6fa6
+│   │   │   ├── 85b25f573f5bce61e5c10fbcbe5b8ee8c0a84f
+│   │   │   └── efd1b09a02f46df9c335f2115159c9ad5db49e
+│   │   ├── 1c
+│   │   │   ├── c5e1a78b8a85c777abd5849924cc55a7f1f1b7
+│   │   │   └── f27870ce7ed2db6de6fa92d8fdfc5e4447187a
+│   │   ├── 1d
+│   │   │   ├── 25238753c7a3a9039fe2d7a1c4359691265f84
+│   │   │   └── c93761ace1faf218e64280ff346f13fb512f61
+│   │   ├── 1e
+│   │   │   ├── 1e0a04ea13127f5c4d29b525e9d086ecb2de84
+│   │   │   ├── 3ae2c9e9ec2af8cc9cadd455ba9b009a61a5b1
+│   │   │   ├── 6778281353476326615c343ccfc735fd46c056
+│   │   │   ├── 8eccece20d236258da2c29044be47e75d02f53
+│   │   │   ├── b90349af3d39fd29a1bdd7392919eb81260c26
+│   │   │   └── e3f403752afb7f1a21382ae1f4959149e699b4
+│   │   ├── 1f
+│   │   │   ├── 4f5a5b37fd809c407a780700910be15d00e353
+│   │   │   ├── 55656e36744c02ee9b3e6e4e2b4eb85224e1a6
+│   │   │   ├── 6afb2654c1a708fd8a7dc20a7262bde2baaf5d
+│   │   │   ├── e63457363a4a9a936c4446575450d2fa16227c
+│   │   │   └── f0963e4e2ca80170c94a1334172aebb103ac65
+│   │   ├── 20
+│   │   │   ├── 716ddb806d924eca8603170845b73c1bd7ee1d
+│   │   │   ├── 793b4c3eb1e3cd96d8ab08e2bce52c3ca0363a
+│   │   │   └── 866be754b62cd0b2100281f56dad326d5fb3aa
+│   │   ├── 21
+│   │   │   ├── 11e7fbce68aff305249f615a76d0346a5db23b
+│   │   │   └── 1f7242a881e5fb1190fb5aa05817141f92b65e
+│   │   ├── 22
+│   │   │   ├── 5e9f935da80b71d962ab19121c6fea3d8a6926
+│   │   │   └── f575ab8a94af95ecd7847d6949d2b532bbf60c
+│   │   ├── 23
+│   │   │   ├── 4755b0edd5e97e9717afca9758fd52dacb2809
+│   │   │   ├── 61931fc0289cfff3dbd92fab675527c180931a
+│   │   │   ├── 681e77083ab440ae3051393a301a2708f2011f
+│   │   │   ├── 96ef8ef1f336cc627e74b1e2844e7233ffeec3
+│   │   │   ├── bc7d1a4e3080af9f166993f8f4b02b252d6e0d
+│   │   │   ├── d4481a3c2c2d5854f43e8c9be46bb269f088ef
+│   │   │   └── f19500fe9b49123c62a95a00077e94721c9ad4
+│   │   ├── 24
+│   │   │   ├── 039adc4d7f37f90d34b14a14bd4ed1bdbad54f
+│   │   │   ├── 10ea42ebc63c0c1ea17a1bdbdb8c798f8b31c5
+│   │   │   ├── 3179c10b26ab2e15afa9187023cf501589018e
+│   │   │   ├── 364707177d557ecc2e6b56f03b1cca7302dd79
+│   │   │   ├── 6a12133d25f79db9f4922bfe1d701630bcef54
+│   │   │   ├── 700ad6c0b6cb6a0af9890e45c449d8e6787017
+│   │   │   ├── 773a08eb38a54b2fe5c74907324c373ced98f6
+│   │   │   ├── 881f8cfd5d639576cadd292cf33d0651bb986c
+│   │   │   ├── 9920c797eeed22479ec1e93b842b95ae09277b
+│   │   │   ├── aee6a332ff6388912563e5a8a11877f495bf1f
+│   │   │   └── c1fdd2d39990145d117f0dec23378869225ac1
+│   │   ├── 25
+│   │   │   ├── 2973583c64ba2899c19825972cb674dc561766
+│   │   │   ├── 5b7ba67c43806fd6c7fa514de1a241dbb7ec5a
+│   │   │   ├── 8f038fa3551e2eed8f9d0a9b2c0372f1046037
+│   │   │   ├── c89b4fd1b45f821061592ca24d87188eb3e637
+│   │   │   ├── d436a8962d6fb29ab35b1ae5dac6c11ba33804
+│   │   │   └── e9f014788af32f9266598c3f95a872fcbf7ec7
+│   │   ├── 27
+│   │   │   ├── 021c49dc29cdb49d737c79332b252084d5c63a
+│   │   │   ├── 7d0126c3529fa0728da743bebdaa4ece3907f8
+│   │   │   ├── 95c4daa013084fdf88db010a2f9526f3bed0a7
+│   │   │   ├── 961a9b250343a25abed289fa882b1ab49d9db5
+│   │   │   ├── cc2bbc1d5abbf57a8c5fe01ab002acc92d05bb
+│   │   │   ├── cee42f16d9ac2736d2d4c979e58da606f135a4
+│   │   │   └── ff53445dc01b0ab8202a89833f7056f56c92fb
+│   │   ├── 28
+│   │   │   ├── 4e212e7f7fb83e89b73174ed1c41da857b48ba
+│   │   │   ├── 8e9591a4eee5fac84e7ce3a3923d185f2877fb
+│   │   │   ├── b4754f7e5ac4c43e9c5edce0f53474e7f87217
+│   │   │   ├── ce239c19ecb31d112b3f8d1532c99afbaaf2f3
+│   │   │   └── dd233af9d4f7bc6e9166563e36143c3df074ac
+│   │   ├── 29
+│   │   │   ├── 2237e22e22e89c5c923b9365ec24755393c8f1
+│   │   │   ├── 3ac8a0639f454913034f011a865fae1f1fab4b
+│   │   │   └── f5dae061d11cfd5d3489af30f8a1b085372e85
+│   │   ├── 2a
+│   │   │   ├── d842be3cdc27b549ce5977e189b764e3cbe50f
+│   │   │   ├── db7329b861057e19c60d25cc37c99cb4e19899
+│   │   │   └── e42cc2014b8b07088d50f1be041c27729bddf2
+│   │   ├── 2b
+│   │   │   ├── 05d55ac7036f0e9f4499e2ab68c9ce28f9794d
+│   │   │   ├── 329a5b821e5d6d5f147df70e0db548e0f3bcff
+│   │   │   ├── 4ac5df86a7e0c400c69c7e7c908a3fd253bb2d
+│   │   │   ├── 834916a6f19fb335a93cbb115860254a3f6589
+│   │   │   └── 8a560d8fa478a6ba1c45adf5a33a22c3313ae3
+│   │   ├── 2c
+│   │   │   ├── 30356c79bdc8bca398a7362f9f53541b2cc90d
+│   │   │   ├── 6723d7bd1191fdde6acf3b9a01577853f5659f
+│   │   │   ├── 9f37b33af2fdb1a64dcf1e1819cba09e141b03
+│   │   │   └── a254c301bdf86e60ef38854cca4bdf8eb2ec84
+│   │   ├── 2d
+│   │   │   ├── 17b11e5f4c9dce9566bc492db6f2d5f12029c0
+│   │   │   ├── 2e09ca2fc467684d435b2bdd75b163fe737cc7
+│   │   │   └── 7a06bf59358678b5edc681885b0d9c2acb591f
+│   │   ├── 2e
+│   │   │   ├── 0d4ff59a5c2767f9421479b0f0f8032f4cf7a6
+│   │   │   ├── a0682865da0e7a8ea15b4a13babdc2fc89ff8a
+│   │   │   ├── b6b9300a985988ac8d9d2dc75be4ec8f1e360b
+│   │   │   ├── bcc85cf750679b6923725a7984f7d64a64dcd5
+│   │   │   └── c85d5a6856f93fe12ec8716dc6fc0597c7bbd5
+│   │   ├── 2f
+│   │   │   ├── 281a7845b0fff089f68042bd895594b666b1b8
+│   │   │   ├── 9c4059c79c524e0b01256cbe0e5cd6a78c697f
+│   │   │   ├── d9d327daccff4453ac5f6db0f645964f4e0d8b
+│   │   │   └── e613c3e01251b451bb0f31f005d2616fff258a
+│   │   ├── 30
+│   │   │   ├── 22f213de63027e35d319cbfbf221c46b949230
+│   │   │   └── 35fd8e6b7841dd5deb58e18ba978ad61e1a613
+│   │   ├── 31
+│   │   │   ├── 8af3399048c22b9ca449977e95152bd479d76b
+│   │   │   └── fa8b95197dab5de0caf90bd9ac016fdd2d8ef1
+│   │   ├── 32
+│   │   │   ├── 31cba8db0736c947ad8728e7af5d33107bd901
+│   │   │   ├── 61ba2d5d759d331b3bfc7134312e89b256d96a
+│   │   │   ├── 90ab57e0dd7d0042108b23c3702d799b418ad8
+│   │   │   └── e34b83b4e2b1439e3c37823dab701ce4697e9e
+│   │   ├── 33
+│   │   │   ├── 01eb64a775f5b025ed79d9a15ba89a302dacf4
+│   │   │   ├── 7bf03d3769a470c99e41c39bce769f2e1519f4
+│   │   │   ├── 86b1515603b678ae47469969ef5fb86face766
+│   │   │   └── cf0fb57fc4ee4a7436e7c738c3efed8d12f9bf
+│   │   ├── 34
+│   │   │   ├── 54cf3d7571d5a4b0420bb60b3faa8e817f8bc6
+│   │   │   └── 92639f40434d60af0cc60fcf059c1297dbbf81
+│   │   ├── 35
+│   │   │   └── cabe790e93a58779179726f7065cd013ff93da
+│   │   ├── 36
+│   │   │   ├── 1a14434e112ad77f7b2dc86a9277bb8639027b
+│   │   │   ├── 5a7bd11c7a1cd74f7d484afcb106b76e5b48a8
+│   │   │   ├── 5e14096c92b975c89eb7ee685664a102b5f4a5
+│   │   │   ├── 986d09228efbc03c006c57e853a16e446e5ab5
+│   │   │   ├── c4ae5a84285668d05ea28e233373a4624e6018
+│   │   │   └── cc7934e677b887244f2f7a8021f0b0cd251809
+│   │   ├── 37
+│   │   │   ├── 02d67dc38f22546d4c1318ae00541f7598f1c6
+│   │   │   ├── 13b4f84c021f96fef80b7c3c70bc6f02022d70
+│   │   │   ├── 2863ae455cedaea2f0829e4521b29d68681f4a
+│   │   │   ├── 373113305c8566801a3c2bfa16d53853f6a5ac
+│   │   │   ├── 3cefe44e83586803786205a90c400a3f1faf80
+│   │   │   ├── 646c0a6af375b3fbc392a377849d9c83867f1d
+│   │   │   ├── a38d74407e5424e34a4f3955057c14cd937971
+│   │   │   ├── a3a10cc99ba2644267e363c71a6ecbcb52b466
+│   │   │   ├── c5407b1dc17319bef0143c01baf2d454492323
+│   │   │   ├── cd57748f2452af2db87ea47ab3a80beaf5fe79
+│   │   │   └── f2477bfb4e9029804fe1f3571c20e4dad1a7eb
+│   │   ├── 38
+│   │   │   └── a85cae00d4e85ec06082a56e674dee98d38567
+│   │   ├── 39
+│   │   │   ├── 0ed07ce7fd6e758621bf2a4b4183c2a12a9cd1
+│   │   │   ├── 1e558ff938a74e388278d04670aef7351fe7f9
+│   │   │   ├── 5e6c4f5dd95e6278dbeb04487a40831284db53
+│   │   │   └── 6735f3fae9a211f00be0c720e1dced3082dace
+│   │   ├── 3a
+│   │   │   ├── 3ed154ff93fcd3064906f45f6f39bd1959b79d
+│   │   │   └── a96ce1f3415f678cae591613ac39dac4366a1d
+│   │   ├── 3b
+│   │   │   ├── 1d05d9484b0df2820bf7e5270e828ce1354b5d
+│   │   │   ├── 2407a7f5ea6107d251ff837ec5a1e58fff4dda
+│   │   │   ├── 62e22ba4fde315cb54e50decb2a4088d72ac13
+│   │   │   ├── 6afd2f113095b49c09e67174a36dd2e906b2e0
+│   │   │   ├── d96b62b017e75a7f63aecac29f9b9500fdf970
+│   │   │   ├── e2a2d97e00e4954bac687c7e757805f5b1f8d4
+│   │   │   ├── ed3bddb1b35a816c80eee38c52c47d828c7f9b
+│   │   │   └── f6b8e5940f2b2f9a959d57a4b98063aff38a53
+│   │   ├── 3c
+│   │   │   ├── 73a3a1b0139a8a59b8f2af188d0fbcf43aeb71
+│   │   │   ├── d468c79224351085ebcc17d4d46220228d6c8e
+│   │   │   └── eb6960d9e738ed7093f28888d45180fefdce6e
+│   │   ├── 3d
+│   │   │   ├── 1fda124fdbc17783459e071b8a874ada837cd4
+│   │   │   └── 28e6bb70de95a9a1753fb9f1be6c15bdf33691
+│   │   ├── 3e
+│   │   │   ├── 0324d0899f078fe26ec2ab2956ce119ca95dd5
+│   │   │   ├── 96f447c28d762e4d3b1db263926bcb168796cd
+│   │   │   ├── c08a5d8b5b4311e11581c3d51510b0d6d613ef
+│   │   │   └── c39db2f0a70ecbd94c2f5c2b75789a12230364
+│   │   ├── 3f
+│   │   │   ├── 6b4cc8d67c9d0729a548dcd9c55ab9fea7d5d8
+│   │   │   ├── a65cadc1a896a1191ce315ad5f702265df1352
+│   │   │   ├── c31b6545c765f64f36e45039838135c41b40d6
+│   │   │   └── e8b2c6f04813cd1de3bd7d480e693da060faee
+│   │   ├── 40
+│   │   │   ├── a34bd330b2019b6271fe53080dbf84a6198a69
+│   │   │   ├── af406b7b8a2cd5906d63ad188dac1751dad7af
+│   │   │   ├── e8fc273bd7cf462e30acb03d18e13f8520bc9c
+│   │   │   └── f38812140c779f4468438f72ed233a1a9b65a9
+│   │   ├── 41
+│   │   │   ├── 3d6e8f159f9f1d4ee239e15fb48b6d0f278950
+│   │   │   ├── 8284c246d92fe3455c374b599c4c4eeb72f01d
+│   │   │   ├── b9c8beed512756306f86e1877c6dd255420899
+│   │   │   ├── be7b7d76522592fc9534f2a048c7d5baf8c6e1
+│   │   │   └── c8113f11e5baeb1d47956fa0b09f41657d3454
+│   │   ├── 42
+│   │   │   ├── 4f535f30cd0454418e9efe054dad7da074232f
+│   │   │   ├── afc9bc779ac3d98838680ea172586a665bbd67
+│   │   │   ├── cd690e0e2623f9f5a8ac870cb66a52fae1477a
+│   │   │   ├── ce0f8cc90041ad3c56b5f9a548493eb30a1ac1
+│   │   │   ├── f9dfc1a36923641c44fc1511f96437ef88a70a
+│   │   │   └── fc323e4b835cde834aba978ce44ce65bf8fb71
+│   │   ├── 43
+│   │   │   ├── 5ea1c35ef9ecd662b8b518470f4efb41c91002
+│   │   │   ├── 90577ea9f6b355cb43555b99d5a6ec7faf3722
+│   │   │   └── c5e735a1b5f2fb65123a3a0f9c82b008a25035
+│   │   ├── 44
+│   │   │   └── 2b94c625767b6fddac337eb99117a444d92150
+│   │   ├── 45
+│   │   │   ├── 072bfd0ebe985204cbd4c73dd0857587709dc1
+│   │   │   ├── 2685888746d0fca522c3c87d1b2ab871b78ee5
+│   │   │   ├── 519709f78296f94a389b4e9b427f148dad03c0
+│   │   │   ├── 689f78b607aff3b00c54d4baba5ec11223ea1e
+│   │   │   └── c1562860a6df83039fc6e9c1a9825e083d6a6e
+│   │   ├── 46
+│   │   │   ├── 4a3db538ee43d79af01ef6c452a4e85e3bd0bb
+│   │   │   └── ecf3ef1b42c8dc8fa4db307fb1894a06fce7fe
+│   │   ├── 47
+│   │   │   ├── 0b23390f353bd8e091572ba1d444db7a4e1ef6
+│   │   │   ├── 3e7e1dcda59c8fd2827102f0dfed92d4e678e6
+│   │   │   ├── 423220dd5adec155d63c0beba1323db0a5c600
+│   │   │   ├── 764da5d63d7c9b5a000e9769141f5fd8c228b8
+│   │   │   ├── a616c50f3c0592bc44af4189fb8d94a0f08626
+│   │   │   └── bbe34aec6f4368e291031606365faa0c9fc1a4
+│   │   ├── 48
+│   │   │   ├── 053c3ab666a4587a472d1e8f07c2300d872b1f
+│   │   │   ├── 098966b63719f52a7fb2204edb42409d9a6af2
+│   │   │   ├── 720e6c85fc24f8e9b68fb8f4335582df850d12
+│   │   │   ├── 86e66c28a1ade036efeb68a843d114d432b129
+│   │   │   └── a96c8acdbad23b6ec5b541f8bc6cb950609dba
+│   │   ├── 49
+│   │   │   ├── 7db07f7e1ccd5a4a5389747e1a4fb33adfeb3f
+│   │   │   └── d4dd66109170de43a9e295b04db2de23db8762
+│   │   ├── 4a
+│   │   │   ├── 064ede453a122d51cf780ca0139115e14e703a
+│   │   │   ├── 1633d6af8ab5a2d97c80349c3c5cbfebc6cc29
+│   │   │   ├── 242709d79bcebaa65d7f2ff0986259ddf43ed8
+│   │   │   ├── 2dd9ed2f7f3f902fb761f126d14b51f195b9ff
+│   │   │   ├── 5c33dbecb0b7be13703e118ea5a5c2f91fb19b
+│   │   │   ├── e6ffd77a9f1de2087a38f5e302f8a3393e42a9
+│   │   │   └── fce8afda08e0e58ad437befb3f5f0b9a823109
+│   │   ├── 4b
+│   │   │   ├── 16beb94e79afa1c361e8575957a2ca73c189c0
+│   │   │   ├── 1a9067de51ebad72e3090bd888c975a5e71737
+│   │   │   ├── 2df2a7c1739adfe6661b4e2ef37023149c90ae
+│   │   │   ├── 392016d7b55d33c07670559ff81fd441d45798
+│   │   │   ├── d2255df4443c370f7c43f446e808af79fd7b53
+│   │   │   └── fe1a28b641d5f0670811ca42a725b4dc53aa1b
+│   │   ├── 4c
+│   │   │   ├── 35b29a077358430ca0f028d334aa2aed2099ff
+│   │   │   ├── 5be1cf24d1e29f503bd1383395b0d19c4c2438
+│   │   │   ├── 8404edd97b04eb988332822fbe5f12e7af500e
+│   │   │   ├── 975bbaba2a7d80da7f754c0330ee966775bc70
+│   │   │   ├── ba3d6df1a88b52899ad29f914e8313edc711c8
+│   │   │   └── c9d73f84a9d44084c754f0b37097ad0a17c2d3
+│   │   ├── 4d
+│   │   │   ├── 55f6b8e93592b40f06005cfe2c0a4aaca6f9dc
+│   │   │   ├── 596a8d22f5d43d7f2baaaf5869578ffc01dc98
+│   │   │   ├── 72665d68b7069105afa4dc64ec8868272db3ab
+│   │   │   ├── 81202b4878377ccfb0330c92ea1a5af47d6e45
+│   │   │   ├── 846e65b91e8368e12e2b3d16417072c51bdce7
+│   │   │   ├── 99f45ff44e2d04ac8481e8410dab6f35a545f5
+│   │   │   ├── 9a14311ce7f47a033167eba38e2a907d6946c5
+│   │   │   ├── 9b1b8228448a518fb71b21478aa576922dbdf3
+│   │   │   ├── b91754ff4e1f43e8dc26494edfb21ad5783916
+│   │   │   └── d5e8faa942866c350734f29be82459d8ace0c9
+│   │   ├── 4e
+│   │   │   ├── 08a432f313536e5a7c0f527c295b5a1f2fa59f
+│   │   │   ├── 0cc68763fe4f7f90c5a26a028c68cd7e495a30
+│   │   │   ├── 10e9c0007ab346a448e5260beb3059436dafa8
+│   │   │   ├── 67e0df9796c9214578c5272747466ccc4d45be
+│   │   │   ├── 6b01849e179aa77c1a9399b6e53985cb11e00f
+│   │   │   ├── 8f806a164487c3d30cf7b0a6d116152bc18325
+│   │   │   ├── a23fa38e7581a12927a13535633268fdfe2bca
+│   │   │   ├── ec0e042b739d3cec4a06dc4e568372edc1306b
+│   │   │   └── f868eebd0351430bd2e4bc0be023d0fbd9cbd0
+│   │   ├── 4f
+│   │   │   ├── 23eb83d6def2a92b0284adbbf05b89f3c7c826
+│   │   │   ├── 60a55cbf0fc4a119041b649674b14338ada122
+│   │   │   ├── bbca7114efb2b5de17926ec570d9345b405cc5
+│   │   │   └── fa222fcfc035ecfca8bad23abefad1b4de54b6
+│   │   ├── 50
+│   │   │   ├── 3e49207e97fbd49f96e9bb42242a7b5b5863e5
+│   │   │   ├── 5bb0de363fbc8e1ffceb6397d0c2327f054a4d
+│   │   │   ├── 794db6671a543cd1135761798883aaaa553ea5
+│   │   │   ├── b14fc75209c2ab6702b880be5e4fbae08a1796
+│   │   │   ├── eb613f6eb4e48c0ade2f8d6a6a8b7c2f03cf30
+│   │   │   └── f5542f68e096316848926e31aa56c734a31e3c
+│   │   ├── 51
+│   │   │   ├── 00b6f41082ab0c253dd296e5a129a824e687e7
+│   │   │   ├── 42c33e76748dadef2cb665fc55e48c259cada7
+│   │   │   ├── 5873d332c15f37a3a5fd64f2ec5c93055964ff
+│   │   │   ├── 74b28c565c285e3e312ec5178be64fbeca8398
+│   │   │   ├── 8f9ce76052919f6a00910f79bcdb998346d864
+│   │   │   └── d148ae5d0c84e80dbe7beae1814b6e2e8033aa
+│   │   ├── 52
+│   │   │   ├── 25c9ffc904b584ac32baeeac8d72d3f51e569c
+│   │   │   ├── 2e03e8d1ba5c8bb5fa2437b1b02fec1b933eae
+│   │   │   ├── 585b5e3f764e65decf7cead8164d3841590d46
+│   │   │   ├── bab5237fef88349a9f894732236cda50205cb1
+│   │   │   └── ff6546884d24688791603588ce7a828d7493d9
+│   │   ├── 53
+│   │   │   ├── 7035754c3482e67dd6538c19e9cc4fe1a451c1
+│   │   │   └── f516fe4c7bbb0c7353e116acbe49171abf95db
+│   │   ├── 54
+│   │   │   ├── 67532e67caedc34ed7bff9509658266d1e8a3e
+│   │   │   ├── adbd39648f9a2bc249f81083c4bb44f095b3d7
+│   │   │   ├── b70c3acb1b6eebcb9e4e70008223d0335cbe52
+│   │   │   ├── bb9051211e0534ce030d777a9c6614d088c712
+│   │   │   └── e27beff19f0a5609cf026160e8075b3fb44720
+│   │   ├── 55
+│   │   │   ├── 027dda407789e36fc853d10bb49ecbbf435962
+│   │   │   ├── 277c6e294bdf1804868aceecb1eed04f7f2c7b
+│   │   │   ├── 3fca1631216b392464eaf1ce38910d51b3f05c
+│   │   │   ├── 858830273eac9eb0d97f23bc28f65de166942e
+│   │   │   ├── a80ea23b11919ee643855525a857b1856ea58a
+│   │   │   ├── ae9b9e525e793bd5f5c8fdf27c75248dccdeb7
+│   │   │   └── f29c599100bc24f5edf68a2a6526dcdce9a8a7
+│   │   ├── 56
+│   │   │   ├── 112fa34a71e79f980e5a3e789831be501debc9
+│   │   │   ├── 5b5e742061dbdfc6ac8bd07f98987297aca5d4
+│   │   │   ├── 796ff3f885f964ac4d0b99cd9f10519fe36236
+│   │   │   ├── 7f17b0d7c7fb662c16d4357dd74830caf2dccb
+│   │   │   ├── 9c14d3bf387af5c8d8977ab4916e4813b2c377
+│   │   │   └── d847b76f59e2420e41569c472e8b20d375053d
+│   │   ├── 57
+│   │   │   ├── 1122c7665250e75b252d1cac160027b433d391
+│   │   │   ├── 30f213ba019d8669b16028fc5100fb31ebae4d
+│   │   │   ├── 422ebd7d5f6b77ac51abc552e58f45a652bc24
+│   │   │   ├── 4fc88729857fe0b3cef39bc7f3680f8a7b0748
+│   │   │   └── 52cab64e340dabfa83f1f484f908c6f939c295
+│   │   ├── 58
+│   │   │   ├── 43830fc95b4d76adb1fc259087d72e8fab8a63
+│   │   │   ├── 49e65239d3cbd6573870fcbc4ee82741c2a64b
+│   │   │   ├── 903376f714075a673913aca6c94b8a8c048045
+│   │   │   ├── 99c0edee99fee76a48add56530a388229e8a9b
+│   │   │   └── c71af9ec13c1e6fc9aece1dedc7b3bc92c0fc9
+│   │   ├── 59
+│   │   │   ├── 210d53ce501ba3bb2b90561c24a0c32414876c
+│   │   │   ├── 4ed35d8e8a97a3642cb6c598262f8239dff162
+│   │   │   └── df2c18ffa6629726eb2fa5d11180b877008c1e
+│   │   ├── 5a
+│   │   │   ├── 01261eabdd075a9e78c1987cd57348433ff69b
+│   │   │   ├── 58ef1387171dfa50107568009e264fa4887d80
+│   │   │   ├── 6603ef499398a0f330c6050e500c40002d6161
+│   │   │   └── 66114e4d8bd457207d94438578c508d80b91ba
+│   │   ├── 5b
+│   │   │   ├── 0348c472b8642fcb165a5fdb174f2d7b9e5851
+│   │   │   ├── 0ecdf68a4d44f15cc1f43a8322cdb54e7be4d1
+│   │   │   ├── 0f01bd96fcbc6c14218dfc1de829528de72735
+│   │   │   ├── 5458d4db99778f2d23b5a562bb3f56867228ee
+│   │   │   └── 82a230512a6d97540b1ed43c802ee7a89a135d
+│   │   ├── 5c
+│   │   │   ├── 032d67b2a4cf455afb700a587711c719fee6ed
+│   │   │   ├── 720d872548747a8389badd95c65ff8cb076c31
+│   │   │   └── 9ce9f62191877a81d16a644752a3757832e278
+│   │   ├── 5d
+│   │   │   ├── 2ce104a726179cc4b620ffb4b017f4a043e037
+│   │   │   ├── 3be5ec79abacba0038df881b42f61bc5cebe81
+│   │   │   ├── 71b9fb991cd8fb81765050359122414a6264d3
+│   │   │   ├── b812ecf673c973792ed9748294eea2fdf9e005
+│   │   │   ├── c9f4f3ea39f771f70a24774bea55a744b5dcae
+│   │   │   ├── e30177691e048cc148f33746322d0f21128948
+│   │   │   └── ea5423a34b774948589f5fe2740b9a2fc4b299
+│   │   ├── 5e
+│   │   │   ├── 4323558f63de5f90f666aeb5a71417b03b5e72
+│   │   │   ├── 8ea70b7f2d94622212ebbdac853fef146e2e93
+│   │   │   ├── ab88a0b07ca87a8227cec518edddf3b1bf9ec7
+│   │   │   ├── cd01f7b1660e0f00a5557aacac490011bc4e5f
+│   │   │   ├── e7702d384ee96d6d0f8dab1583d106d8f110f4
+│   │   │   └── f6a520780202a1d6addd833d800ccb1ecac0bb
+│   │   ├── 5f
+│   │   │   ├── 0072d919a8bd69231f5e2f438bf7777223da78
+│   │   │   ├── 904eddade8cac7350ee06d62ce76bc7872f386
+│   │   │   ├── b7a83601080c691823e77297780b5d09baffb4
+│   │   │   ├── ca5ed0a81e440959dffbd283fe44dfd642072c
+│   │   │   └── d9513665ef43307083aba41506ce2e0dade83b
+│   │   ├── 60
+│   │   │   ├── 2a4c52b9c6e4d4c125d991b5f501aadd55bf6a
+│   │   │   ├── 39b22894f24d459de232957c1bb634952c5a55
+│   │   │   ├── c331a893601ffbc93e40525754451a6824eac0
+│   │   │   ├── de8a1539f187aaef70cba45d12e61ec3ace5ef
+│   │   │   ├── e3b26e4afc40663a6bbbf79b1aea0e483ce879
+│   │   │   └── f8e61d52b1b4ec196383f9c1e47cb2557603f5
+│   │   ├── 61
+│   │   │   ├── 058ea28fcf62f4ae2a434649ebd5fe842950bd
+│   │   │   ├── 4c414e3ec7c25d7f2c4fa9a40dda4396799fc1
+│   │   │   ├── 8271e4b51b610b916f25e20f4b0c149c545a67
+│   │   │   ├── 933a44519a11ddf8ec578a91ac0c00997e54ed
+│   │   │   └── 9ba37e33a7dc36156397d97a59df1b363c0c7c
+│   │   ├── 62
+│   │   │   ├── 83c1e6c94e236dd6f4d1bfc20ddb294615d52d
+│   │   │   ├── 8f57487c0d716b8447549aab007944a14dd1b2
+│   │   │   └── f20b86179f5f93311d3773189bdfed3fe2fc7a
+│   │   ├── 63
+│   │   │   ├── 0c978aab5f9e4459703e7e5d801aeef5d3ea73
+│   │   │   ├── 161ded8fb56e89cf267926d21d883c881226e0
+│   │   │   ├── 18534bcb2c32ef3e2f72cb89deefef50ed9ad1
+│   │   │   ├── a490856c9a39e7b559040ba1560930bce32c84
+│   │   │   └── ea2d374b98de028f62e8d657e8a605d2697f1f
+│   │   ├── 64
+│   │   │   ├── 02ecda46b0fef089b025e2d0a23506d3ce5420
+│   │   │   ├── 9c10e642d5b37373ad625ca285b38767982af3
+│   │   │   ├── 9f5b058f27f98889b90c3a5149759ccb4570b7
+│   │   │   └── e732549fc266392c0cea198a32128bae0d04e4
+│   │   ├── 65
+│   │   │   └── 717669db0d2fd3f009e6f6b661c020bdbabf49
+│   │   ├── 66
+│   │   │   ├── 19d2e566597a04efd229000b225c4e3eea14a1
+│   │   │   └── ff3e49252b73a16963233f1515b0e1d1e02a99
+│   │   ├── 67
+│   │   │   ├── 04d76cff02fd35834d0b8dbc9343e796955ed8
+│   │   │   ├── 281ba64d14e972d77c09072b2cf0270d482c77
+│   │   │   ├── 96af8663907653cfd7133874d2d3d04e9dbad8
+│   │   │   ├── a685c704e0cb64234bb5f05ffc8479897b4a86
+│   │   │   └── da8b0e22cf47120ed0b88d8858c0fa29bd3cbd
+│   │   ├── 68
+│   │   │   ├── 0c853b0a1b5600aee53d884f2f6c30a0e82aa8
+│   │   │   ├── 14c1d37753bb13a5cf68965ade0d5658f60c67
+│   │   │   ├── 53704a33ac33f6e7593d6e4b5ef11bb603a2e1
+│   │   │   ├── 6ca44086dd7b4c17bf8c7611521ba4105b5d10
+│   │   │   ├── 9c16d8d2e93627c215ef771c9c451fe7b6f415
+│   │   │   ├── 9c3e3003d651de769e46d1e9944ab60f77cbce
+│   │   │   ├── d8fe343aae872d4677749225103461134d483f
+│   │   │   ├── e65068ec8f1c26ac7a4cef154dd0a6446521d8
+│   │   │   └── f57244b4da8f7aa657cba816b8a782653274d6
+│   │   ├── 69
+│   │   │   └── 1d565b381a0e2f1e386aa780f59bc4d04bd2e2
+│   │   ├── 6a
+│   │   │   ├── 0c936df7ba76b6b7ce4869c36c982cd346145a
+│   │   │   ├── 12729c738762e3fcad9772fa6973e165b0cfc6
+│   │   │   ├── d1c6d1479a70be519e621202ac23cffab99c0f
+│   │   │   └── e1f74a4e0fdca361d2cd797ca2a913f6d34b51
+│   │   ├── 6b
+│   │   │   ├── 2b44ada300b36366421bf4813e1a9cb9097152
+│   │   │   ├── 2fa103fa063f7e665915a7f878e8d05ab47a2b
+│   │   │   ├── 70f2a9800d2055aebb12599ad0496459e61bb6
+│   │   │   ├── b470dc28f86a480ee1e850837a77d852e1dd06
+│   │   │   ├── b91a3f72d67cd683b523f5daf679d1912829b4
+│   │   │   └── c44e48323bd48642126d989ebcf0613409be07
+│   │   ├── 6c
+│   │   │   ├── 3bc36363c6610b66c0226d481b94a85c873166
+│   │   │   ├── 74dc366609b7a6a6f0d276985efbb6ddeb00e1
+│   │   │   └── 8c128891fc0dc4e3481e6af07c5bfcfeb97ada
+│   │   ├── 6d
+│   │   │   ├── 4c704e8699011f21b76b122ff223d5eeef5863
+│   │   │   ├── 5a05cdcb344ae3f3c62f253525027a3411af84
+│   │   │   └── f125295f7a4b438eb4ec133b02935b322dfe68
+│   │   ├── 6e
+│   │   │   ├── 21550cf0e20a9371ba17d2d0745e097671550f
+│   │   │   ├── 302e3414595a2ceaaaacf55ac0c6fd7ae31415
+│   │   │   ├── 491ba47480480f213d0c5b5f0043670b1309b1
+│   │   │   └── 7f8aa1efd449a221965cf94a71a38042e85a8c
+│   │   ├── 6f
+│   │   │   ├── 801c2738a58a683d9283f56a41a9764aedafdf
+│   │   │   ├── c3fe02553f5dd5fe94bca0b77e2aea9bbdddaf
+│   │   │   ├── d71d900abc9ebe8b473f1ceb8062f3ff0d5be9
+│   │   │   ├── ded3c63cac7ffc2844177bdd99863ca3a97077
+│   │   │   └── f2d6ff85697438e1a33e596721a1dbeef7cdc2
+│   │   ├── 70
+│   │   │   ├── 2483c9f4e60f3e400ecc122729641f580148f4
+│   │   │   ├── bc3eff535aba45652e05f95ce1b09ab95a58ed
+│   │   │   ├── c6eada99b1d3f9914ed6e97c07a94ff24d167f
+│   │   │   └── f4b85bdce5c95891bbed55555309983d8793df
+│   │   ├── 71
+│   │   │   ├── 0d0c52c82d85f9843d7c194e6c02d5d33c4a5e
+│   │   │   ├── 2e0997a554787a3f1f11ff806315e19e265e45
+│   │   │   ├── 3aaf642cfb44f4ed1dfad81ed8e57d7be4abb8
+│   │   │   ├── 499d436acad2daf0242e2ccf4ca9dcfa2d56ad
+│   │   │   ├── 69dd6a6b2271930ace85a35044bc690ae82c42
+│   │   │   ├── 7d7e855b4f3e473d468e8cbae4eb653b2e2489
+│   │   │   ├── 8d6fea4835ec2d246af9800eddb7ffb276240c
+│   │   │   ├── c564dc62b08ac04e0418e73a0caafdc3c2d55d
+│   │   │   ├── dce673a4870c8253d294aea962c26f6589e124
+│   │   │   └── f6e371bc649b7c0aadcfc79c4d8d953007609c
+│   │   ├── 72
+│   │   │   ├── 9e0454eb34c72878d7ea846af13f0c4e7f7871
+│   │   │   ├── a2876d799b04e643c8a17c79f52d7982986ff3
+│   │   │   ├── a345ee2b557d408c08aff9f5033e74e0475944
+│   │   │   ├── a39c29077411e857e401bcc707fe6e916ee89e
+│   │   │   └── c092301b3103294fc6d3cc79a341a8ee07e081
+│   │   ├── 73
+│   │   │   ├── 74968ebe5ae5f0b22e2bd520283b097827111a
+│   │   │   ├── 960e0e2f9d925b57e0c1a45ca583d591977987
+│   │   │   ├── acc337cbae66782163e43a9d06decf4ccc0d7f
+│   │   │   ├── e3bbaba95548432a21c2b220cba66e774d78af
+│   │   │   └── e443cd9d71fb9c8cd694cec8732a2835368069
+│   │   ├── 74
+│   │   │   ├── 12c93b77c20ce84f59a42fa4a4ae1598687dca
+│   │   │   ├── 17d564274978777ac1e6bb6a1feeaace1290d1
+│   │   │   ├── 8789d92dffd59bcad51bff43b8435de783307b
+│   │   │   └── abc8c8bab948804783e1b0a26e918a0d112353
+│   │   ├── 75
+│   │   │   ├── 0d4ab370087da237e843c7c92c88c95ff0333e
+│   │   │   ├── 1f84919eaf4a33265203f710b73fb1169a8304
+│   │   │   ├── 25e966c073ca80ec475e7019e381c8ba9292c9
+│   │   │   ├── 352d4b89457f33e9b8497195fbe85ae23b6288
+│   │   │   ├── 48f4b53f3f0276517f2c47133ca47ca47d3694
+│   │   │   ├── 55dc38ad81d80943fed8171f7c7424737c3b38
+│   │   │   └── f7b129758e9e4ff3d1a05b79024abeec92d584
+│   │   ├── 76
+│   │   │   ├── 043aae15f0e9ca23bd1cbb9c10e4392c3ff26c
+│   │   │   ├── 50d2003eb9b6d98a86e1169b32486739adbb45
+│   │   │   ├── 861ee07443a1d65fcacd601db872c6a37c6f13
+│   │   │   └── b353932c194d5810bb0b5ab2be91ac1ac700e3
+│   │   ├── 77
+│   │   │   ├── 053960334e2e34dc584dea8019925c3b4ccca9
+│   │   │   ├── 14f47bee50a0dfae590b363952f14fda0779ec
+│   │   │   ├── 2e8862048c047118fbbf5451852a9cff86a10b
+│   │   │   ├── 53189da84f2fcf196aeaf0f25712de3aa0ce83
+│   │   │   ├── 9a4da0328bc8bbc1825817f566f1f7f82eaf11
+│   │   │   └── f464ba95369ed71b59ca1dedac7d624dd36a37
+│   │   ├── 78
+│   │   │   ├── 082d6f4008c0bd04b12dfc22e4e442a36395b3
+│   │   │   ├── 27b91e1f66a18e0eb978dd3208c50610c1593e
+│   │   │   ├── 86b03f3f89488bcb285bfa00687a64d4659cb3
+│   │   │   ├── caecdc963a4770890f49be1ccfa7808655a3cf
+│   │   │   └── d6d725e0dda68959322763b43b484824d5fa24
+│   │   ├── 79
+│   │   │   ├── 0e41c623e9e36325e1007dd8cc804b5b0e1e62
+│   │   │   ├── 48caf895840a2ceff7c11dd68d0c62c1a6fda1
+│   │   │   ├── 6c75a1ebb08360c346ee321108bbb774edab92
+│   │   │   ├── 7532e1e7d3e4c69bab2f57364e298d531f7f60
+│   │   │   ├── 84e47b9d54d40660bfbe9e96df6a8fdee8328e
+│   │   │   └── d083fac2e0a8b0d58c84395c14f4e8d4b2dbf2
+│   │   ├── 7a
+│   │   │   ├── 06a67f418e1b7cdfdb3a44dfed47ea8b4adf0d
+│   │   │   ├── 451666af4ed7885221a9ffaf8852821a5f6bb5
+│   │   │   ├── 50b8c2607f0be64c67a6e2bcac178f48e14548
+│   │   │   ├── 78517694bf87dd97cc4ad6fff0e8ce14355d39
+│   │   │   ├── a25c76bb49298c04b9e4de017354692bd24047
+│   │   │   ├── ad4c084fb67513ca750ecca60a943828a5c5ff
+│   │   │   ├── c47ad0df5ba273424f01cc76a82faf7dff74ed
+│   │   │   ├── e71b629df8b56a432053c61b8d959ff135d595
+│   │   │   ├── e75927115f5874f160a77ded929e9a916242c1
+│   │   │   └── ee9104e05ea46a71a0b4a03aeaff4a39e00b35
+│   │   ├── 7b
+│   │   │   ├── 5ebc4bde2db3634cdc361cdd17f23c9d503581
+│   │   │   ├── a2867849979cbb0b13ba3bbd1a9ae7b8b173e2
+│   │   │   └── d1976c3585b9a5beffedb7af6d34e426a71c7d
+│   │   ├── 7c
+│   │   │   ├── 2edc69d70a87455ebd5dedc29a3b51fb56edaa
+│   │   │   ├── 38598d9f1eccec54fb185e9bcbdfedfba5f24d
+│   │   │   ├── 510b7e58f3435e386701b63c86afb4c6f54279
+│   │   │   └── 94df004d8609d4550afb5c170f7a5a6efce02e
+│   │   ├── 7d
+│   │   │   ├── 46a197357c5047e3c5ae436dcf6ee1ab0d74b4
+│   │   │   ├── 622b3f5000e66a1dc4e0519dc86cc9e51ea7cd
+│   │   │   ├── 85775f1de63ad056c13e47973a954c40a3d864
+│   │   │   ├── e7bd30a15812c02596eb3127cf968208e719e9
+│   │   │   └── fc8c248d6ea602c281fa025a436ac7859ddff0
+│   │   ├── 7e
+│   │   │   ├── a1639af17237ed6eab209cccf96cddd8416ec4
+│   │   │   └── b12631618bec6c237af4795f9a1a59b90812f2
+│   │   ├── 7f
+│   │   │   ├── 089cb6fa3e832536758dd7d95c85314685f95e
+│   │   │   ├── 8ff1f37d114afa507d93cdc76c4ca55b225ea7
+│   │   │   ├── ae87e50f92e0c306963f2e099ce945371c6560
+│   │   │   ├── b7e2d7fc0e704879ee12de383a2a9bc4965472
+│   │   │   └── cc6525ecabb839ea82240f67e4576aa19b0e2b
+│   │   ├── 80
+│   │   │   ├── 247f79bd2f23b2b8e2c28cd47542bf6d54070b
+│   │   │   ├── 34d472310e9aec1ab1ad00427b661d61852b6c
+│   │   │   ├── 3dece7f7fac3c70e3f5fff6b8cdeeb86a016be
+│   │   │   ├── 48b4e8c1dae1c2031e3f7a8ec95b2be9da6b2b
+│   │   │   ├── a212fcfded5b5e9cc6b71c6111158b7166219e
+│   │   │   ├── b6920117fd961c11647899140aaa2e0796272f
+│   │   │   └── c5f3aa880df19cd39f0aab1abc0f68ade3a179
+│   │   ├── 81
+│   │   │   ├── 6d975ff224559482d7b395f8c0b524d9e4a5e4
+│   │   │   ├── 6e16d711bf79f680523fb0ecd98f702949fa97
+│   │   │   ├── 8853d16676c6090f4d2b7d67cdd80387d6c3ab
+│   │   │   ├── d191ae624027508f46a16c674d428eae792ad4
+│   │   │   ├── f3e2292e7e206263d127eca9415ece2eefffcd
+│   │   │   └── fc902a7eae3dad3b86d39e62abe680daad268d
+│   │   ├── 82
+│   │   │   ├── 567cfec4b23344f393603fe9e7d6312390dab9
+│   │   │   ├── 71df62fac2441f0af1c7d6e9b16b6479689a54
+│   │   │   ├── 86e30ef26355cb3208c24c655c950b2b0d085b
+│   │   │   └── 8edfe5ad4dd4638e654642442e0775c85ea7b7
+│   │   ├── 83
+│   │   │   ├── 1465ba5ce8f9e6feb25488f02aea3186de87c6
+│   │   │   ├── 582f4601a2c258476b758ec7fd6faedefda57d
+│   │   │   ├── a41b6740f71dbfba4d1caf033e6d7100876155
+│   │   │   └── f63191ddb5b300b653cf4310b4f86b19906e79
+│   │   ├── 84
+│   │   │   ├── 04f75c2adf131d7c57f4b197b295dc934b38d2
+│   │   │   ├── 2da48461e1d1a7d3953538272bad53f32af49b
+│   │   │   ├── 323b040e48f9859f86ab29ec734352249322d0
+│   │   │   ├── 42e81bee9840cf4bbc94755a35c610142b781a
+│   │   │   ├── 61a6c7c13a6c21e864bea2db0560516e2e9c85
+│   │   │   ├── 788f84c053cea8c9a0f29213fceec0d6e1876c
+│   │   │   ├── 7d869d57f4970093dbc10c1f1878fb46fdc6e4
+│   │   │   ├── 803f2da44ba997647fa503a2e4825766b12242
+│   │   │   ├── af2cb0e607ae0c0820d45757eb35fbfc048e2b
+│   │   │   ├── e21484da5664afb1f5ac7a13ee7e02f8657278
+│   │   │   └── ff9ed2c8c693aba8a061ef3d45cf5d53db1bbe
+│   │   ├── 85
+│   │   │   ├── 2cbb924a7d749b59d0263d2c5cb8de233430e0
+│   │   │   ├── 2d8a6141054862e34d4b22d80aeed35745abdd
+│   │   │   ├── 6db4f9f9cd67b049c9e205b286d795364c7815
+│   │   │   ├── 7c3b68bf74afaf488aaa172bffe2a5481e0055
+│   │   │   └── a7e2cb504f9211ea7f9e6cc4c66ec741c09c46
+│   │   ├── 86
+│   │   │   ├── 08cf60f1f7e4d0c7f1ee6a2dead3e06607563a
+│   │   │   ├── 6300d0e5e87fd8e64d8ad8860c6dee419639d4
+│   │   │   ├── ce63d5ebf9e4060547a7f418a5681509243bf4
+│   │   │   └── f602a76b2cc9743542cacc353f5b14755e306b
+│   │   ├── 87
+│   │   │   ├── 01e692ac1ca0fcc6fe7a22a5d74aa695d3d65a
+│   │   │   ├── 1725c792ca9cd9322758b1908b80f12222b791
+│   │   │   ├── 177c422404e3d4267b5fea65ee0b2ed00bf0fc
+│   │   │   ├── 31f03ef151adb08c87ccdbc990f7461fd24038
+│   │   │   ├── 944a68a463b47ab830d5d61379ac90515629ec
+│   │   │   └── f8832202dc58367036d723e89ffdc6c8c65b1d
+│   │   ├── 88
+│   │   │   ├── 122b7edf8ddfc483fa77602da05becde4c47f8
+│   │   │   ├── 3b5c1625db4538021051f98eca94940126224a
+│   │   │   ├── 58f024329873cf8440b9bc1f85531f4d7ff275
+│   │   │   ├── aa7bc71ff6947495c77f86d6e8bc6df21ae130
+│   │   │   ├── bac2a62e073a166ece0620303769a9bc14bed4
+│   │   │   └── f5d5c9284a381c0c333704d314313bda62e1e8
+│   │   ├── 89
+│   │   │   ├── 4ea003c9bd96ac4eb0496b8820d7fde77acbf1
+│   │   │   └── dbde3ca1ba9dd6b58d0d46630d96825d9f33f5
+│   │   ├── 8a
+│   │   │   ├── 02fb68e4598df9fab91f2b4c6847a9cfeb9528
+│   │   │   ├── 7bfc82e55ee21d4b176f64ad1a9f4379649612
+│   │   │   └── f70cd9543c1834031509ac0db556fef16dc047
+│   │   ├── 8b
+│   │   │   ├── 11456780e33a8471ac5f52fa2499dbdf664551
+│   │   │   ├── 15a192c8d59115754097deb0d25abc1b0f8c22
+│   │   │   ├── 19c64cfc16391ac1b1434e0c44db07eb47d63a
+│   │   │   ├── 22f50961552373b86445aea4e6263d8f402b68
+│   │   │   ├── 246378af9e222b970959775b46e1efb4d20c9a
+│   │   │   ├── 323237441f96947a381f5dcbb3e2070d949245
+│   │   │   ├── a7accd55023859e647077a906482c7b65426fe
+│   │   │   └── ca2c80206c9044e9e4193379bd95f1b2ebdfb9
+│   │   ├── 8c
+│   │   │   ├── 8e781adf2f30e8da71207e2652a551fe12da9f
+│   │   │   └── bf57ba7480300e2c398968830f49f12a2f48f3
+│   │   ├── 8d
+│   │   │   ├── 0eab6b69e43af00735d65e1462b14e54f49960
+│   │   │   ├── 26bf514da5386847f15f7e169c935af3b2a625
+│   │   │   ├── 74458fac3397a23d03fb94f619475ac741d859
+│   │   │   ├── 7553b9c04e59a831e267917f4ecb40d34b12ca
+│   │   │   ├── 81640bcf08223741827da06fab60c92b641797
+│   │   │   └── a9fa7fcdf7e3aef47d10c7adc4c504e96b2b6e
+│   │   ├── 8e
+│   │   │   ├── 4346b8f854224518efd69aafafc3e4c3044d42
+│   │   │   ├── 465663c02fb573904e2465279b3bf966eeb678
+│   │   │   ├── 49b3db4214d2effedb3cc0553cdadeb8acc77a
+│   │   │   ├── 541b69e6e7457d20c379694e388b2e7044c8e7
+│   │   │   ├── 5baf9e3e9f32cb54abe05cb8731c3777c5aea9
+│   │   │   ├── 6369569ba4ec3b8e4f137864c0349034510e0a
+│   │   │   ├── 7ac65539b2f97615cec25f40c01d8ca70c8ccb
+│   │   │   ├── e51be4bb0ecb18623e4e54681ea1e8929886c1
+│   │   │   ├── f177d0026cb09827dee4cb99261ab7faf89564
+│   │   │   └── faf8a41e47e1677b057b73687f54f5dd89ff1d
+│   │   ├── 8f
+│   │   │   ├── 55914cb490758c2d0aea8e24a96460db7a1d29
+│   │   │   ├── 5762331d40d8ee2d9951e406f509b2d1ab5d20
+│   │   │   ├── be6c2a024ca3a8852e53bcffe42efaa860bf71
+│   │   │   ├── d39a6f9fdd0999fb0249d02bc835403b98c5e7
+│   │   │   ├── e6651776c8407f9335c91d6ce1e7208cd334a0
+│   │   │   └── f0158dc3593f54247401b0097d208953aba5e8
+│   │   ├── 90
+│   │   │   ├── 0321981e5057dafb36c73effbcfb2bcc4ac5bc
+│   │   │   ├── 0d88abedf1039c9261379970fcf49fc0479adf
+│   │   │   ├── 16007b843b356eec3d7f1f8996811a954e6203
+│   │   │   ├── 4195661e4c9db9a29990d315a5a90fad9c9c4c
+│   │   │   ├── 5c61e7e9303fffacad7c0a790658ac21652491
+│   │   │   ├── 5d9dac558492ad84e35904e24ea879cebe83d2
+│   │   │   ├── 6296ff69e1621f0619daaed69bf8be1d5a5e67
+│   │   │   ├── 671de0406a36629c43798636963f8e111ea42e
+│   │   │   ├── 8e1f4d71d3822c6b689cd58fe9d5939f27d9bb
+│   │   │   ├── acb0eda3ff72921c1c56160fe90f2c67c6a670
+│   │   │   └── b91a2f8f248bb18ed0b4dd2c42c8a54bb22461
+│   │   ├── 91
+│   │   │   ├── 1488c00cdfd319fcd41f17d6d5bc6a3852fedf
+│   │   │   ├── 1837e8815a8d316a6c1ed30bf62e0158a7d032
+│   │   │   └── f5ef95f865ad24583418107147350a6afbad9a
+│   │   ├── 92
+│   │   │   ├── 0cdaa3b63c6fa4e720f52afbfae6a077f6c0de
+│   │   │   ├── 3d4fa4372f9eb9fe2184ea83dcf4d702fddc47
+│   │   │   ├── 808fb6f1c835f414eb815a139b935d95cd4d5b
+│   │   │   ├── 854fb2b6bc54d2570cc3df695065a711102a19
+│   │   │   ├── 98677e05ba0ce10d8138aa5a1b8615198c814e
+│   │   │   └── b63c5ce18227c6746755e4b287aee7e22ee423
+│   │   ├── 93
+│   │   │   ├── 0361107866355bb326cb4c6be43d156a1803ff
+│   │   │   ├── 13a0af5a29de5abd3fd29b0df8e2a2716a0283
+│   │   │   ├── 3cd59e6dc58c04a380f77905ccbf84ffeff761
+│   │   │   └── 74e7e09c3c80c5ad514a7606c8ae6d195923a4
+│   │   ├── 94
+│   │   │   ├── 16ce10f2c8506d8e894b78f8668af1fa59bc29
+│   │   │   ├── 529e1c19ad6315bdea1e673101560b7eb436f4
+│   │   │   ├── 7a23c93a3888537facb26e6ea5c8d4755fe7b8
+│   │   │   ├── c21ae376ccb1e08913853cf922d6237f14bd66
+│   │   │   └── f3616f5282ebc25b9109947f23c8e02fe4ca6c
+│   │   ├── 95
+│   │   │   ├── 1c8581139378b4d8ae095da5f3d1aba6810ddf
+│   │   │   ├── 223f2a73c74c14701125e40a7216cd6d53e1d6
+│   │   │   ├── 3a8ce61ceb37073825e0cf4a061e7c961d4d31
+│   │   │   ├── 4e0c5c618f7799b296a4980d33ebb8f2240b46
+│   │   │   ├── 8cb64e6ee7d47b2f51072a0b849be18681003b
+│   │   │   ├── c35a394461aa0b397c01820455fa2fbfc71af9
+│   │   │   ├── ce116d15da3f321d11ac04f50048aac096f5c9
+│   │   │   ├── d68843c00bf54bb2f4811009a8e0a60348c36e
+│   │   │   └── eb4cb39ced8d6a77d5c961cc37202368af58a2
+│   │   ├── 96
+│   │   │   ├── 01e2115320fdc3defe49a2a9c37fcb500dadbd
+│   │   │   ├── 47da783cf497e797b5e5677c0f6f344f4a175a
+│   │   │   ├── 7f6e5c73eb0754d51f0fe31b35bd892717b37c
+│   │   │   └── b9fb5349f46e2d19ca197791b2f3680b682799
+│   │   ├── 97
+│   │   │   ├── 8c816c870143d2e488f521571801dd0fed8449
+│   │   │   └── d0ad9343bd0714921e4a10ff41360ce883b77c
+│   │   ├── 98
+│   │   │   ├── 13dfae26845fe2614a8cdee2b13755666cd775
+│   │   │   ├── 62f7d08bac8f4ee8d3d260dce3eafb061aa8a1
+│   │   │   ├── c3152c5f89d5416916746e2dbed1aa56d7cf09
+│   │   │   └── e5d46942bf8dcf049c39cc1e153d8cac39425b
+│   │   ├── 99
+│   │   │   ├── 408d113c5722b269adcafbbef584a9c94ad323
+│   │   │   ├── 6ee107a5a28d161fb7a52f9dd27965bcce9fc6
+│   │   │   └── 89cc2d2b71a265226501b6688a1f9265a2cba3
+│   │   ├── 9a
+│   │   │   ├── 1119e041528ce1afdb2b1df61ac7fdbfe9f017
+│   │   │   ├── 7d9f578161a16b3032b4bb6f10af20af318941
+│   │   │   ├── c43d8e02ef71c7f27c6a56c89c2912cee3a6e6
+│   │   │   ├── cb98225884db1e3169c41fccdcbfb062c79cc3
+│   │   │   ├── eeb64ca636560f027513c0b1dd8860777cd4af
+│   │   │   └── fc0a328651d8228957ecd9abe88c81c6960e3b
+│   │   ├── 9b
+│   │   │   ├── 09ca72c6d5a0475eca097bc923a7f7cf22f9b1
+│   │   │   ├── 497908234f76209b31bd003b26da73dde187c5
+│   │   │   ├── 9fc49125a7d60de5cf5175ea9085c7434f10c3
+│   │   │   ├── c350a0094e7ffe717f5e240aaf4c8ed83b548e
+│   │   │   └── e499503d8c668052170e9a49f6195e50b89fad
+│   │   ├── 9c
+│   │   │   ├── 443464059b66b08d77aad17be6f82dc5cb5c94
+│   │   │   ├── 639ea4dacb931d7a2e0b3d1251f46939bc25ff
+│   │   │   ├── 693c5dc50b330f9dd0463da6145393207a4f22
+│   │   │   ├── 9750426ead0241ced2c37b30bf84c57d270a08
+│   │   │   ├── a64d3bd99b82aea1ae6fcbee939f4b5db029d9
+│   │   │   └── ed9d9693171d3e3d286af9da29441128088248
+│   │   ├── 9d
+│   │   │   ├── 48dd4ad50bf24f5b7c70c396abeacae0cf08a0
+│   │   │   └── 6abc57d1e7122739060772687766a6430f463e
+│   │   ├── 9e
+│   │   │   ├── 4bde8490b1723de6ac74bc97b773e2088a40ca
+│   │   │   ├── 59607869fe91eac2d70bf5a7f9cd0257021baa
+│   │   │   └── 87ffbfaf6fe76a6f85cff0075ddfc123130371
+│   │   ├── 9f
+│   │   │   ├── 412046cb215850e48c7839b341ad87af1cfe61
+│   │   │   ├── 9d2aa7e1c91c22ff3d88b26c1e3e203c76c4df
+│   │   │   └── a04e3c12d18a19f07fb5d35b0c7515a8df58a3
+│   │   ├── a0
+│   │   │   ├── 1540f071cf93d133ca5dc4504c440ee5ecd2ea
+│   │   │   ├── 5870833f926545f58ba5401eecf60f5fe5ca46
+│   │   │   ├── 6dea54c290365d4c7f328db71a95d32dc64ff5
+│   │   │   └── ec166413b9607d572607f1ea33bcb110737e7b
+│   │   ├── a1
+│   │   │   ├── 20fd8bf6f92231351e7ef1e97f7b9d81c4b3f8
+│   │   │   ├── 31e14f1830166305b8120568edaa77c1222f2f
+│   │   │   ├── 32231a44b3ee3c3256cc18a7d7346608e3f8d5
+│   │   │   ├── 930b78dcefa1ea6f0e9b35fdd313f9fcf5987f
+│   │   │   ├── d3152b2db529ff02687e8c845952884d0609d9
+│   │   │   └── e0b40f252ed94fb4b2b9281bd98b9d0d581342
+│   │   ├── a2
+│   │   │   ├── 1476dd364c21156dc9748f7ee9321d1828e03d
+│   │   │   ├── 15e9aa3e90f4bcc573a7be7009a67e6ffb418e
+│   │   │   ├── 5df4a5f7899a321c28380a144a7f85f8bf53dd
+│   │   │   ├── c6304ba50d5f9a1da16a6def38219553af474c
+│   │   │   ├── e19513467cd5c769da87f44c4841c050f96e33
+│   │   │   └── e75fd36f2b8aac2372a851c8be5582bf0872fb
+│   │   ├── a3
+│   │   │   ├── 550111982bdaa5d9e0870a1597ce1b31d6336c
+│   │   │   ├── 81d08b081f00acdb783adbbea10b8242b8b981
+│   │   │   ├── b8e82c3c40bae3ad8d859afefdda5016b4a1c8
+│   │   │   └── db3e236f8505c64cc2cf87c23b85e27b160da3
+│   │   ├── a4
+│   │   │   ├── 01ebdd676b3bd6df53de12d4b4455a7ccb8d07
+│   │   │   ├── 229ef15908a1f525cb5395585fa59ee6dcf263
+│   │   │   ├── 744df74f4c482540bd941f0b619a874da6dd83
+│   │   │   └── d31fc53095f161d50546fcee4bfc7058e83087
+│   │   ├── a5
+│   │   │   ├── 2a38ffa99e35837c475b60d5f81b10ec8c8134
+│   │   │   ├── 2fedb74306f27c10892ae9378eaf20650ec5ea
+│   │   │   ├── 366c1a13ba65facdf32c176507dc14e46c7e47
+│   │   │   ├── 38e3ddb02dd2eb8c8e9b35c875aa59e40860a8
+│   │   │   ├── 8f790e683ee22d2704654c81b7d98897b41aa1
+│   │   │   └── c296de943bb4c720be334c5f2db07924dd1dd6
+│   │   ├── a6
+│   │   │   ├── 35d4bce491dc6acff3224a37d422ec6b636886
+│   │   │   ├── 754540d0ef6efa2802b810a7943a212b5ac925
+│   │   │   ├── 7a014b19170ced9d38a0e2ddcb3d6d43817433
+│   │   │   ├── a213b6f091c6d94f392aaadabfd3b0d35261db
+│   │   │   ├── c099dd064c6dcb197e5ee75ba4fa83aedecbfe
+│   │   │   └── fa69b4b75a691e8cce431e5f27c93cf6e4b018
+│   │   ├── a7
+│   │   │   ├── 4049a5f44f48f78946332858bac79e5d88ec9f
+│   │   │   ├── 724121910fedad4dc2910fd90b4d6cb71d7839
+│   │   │   ├── 85648f2ebdd5713e5cd3db568689322d34e437
+│   │   │   └── edeb9ccdfa2b3a1551243d6f8a9d94370cd69b
+│   │   ├── a8
+│   │   │   ├── 3a84b67d6e3f77317168b1b7b9dc54b6ab4d7a
+│   │   │   └── b089fe83eefcac2e85bb57d46912c8c4aadfb8
+│   │   ├── a9
+│   │   │   ├── 1dd89ddb094de995a84245c77e096a4d3fa86d
+│   │   │   ├── 3f504646af014804f51e38cc9a27143e95cf29
+│   │   │   ├── 569ae4e4f6e0797b808f9456c391c3d48f9838
+│   │   │   ├── 859c6c4d0328886f9c3a87ffe1a048bc3bfb22
+│   │   │   ├── 924feadb1763289c673c4a309624d6373f111e
+│   │   │   ├── df4d3ef197d99a8b6091a39c78c6d3430f0c33
+│   │   │   └── e4072a9f9922ad4977ac7adbd7feec22102f17
+│   │   ├── aa
+│   │   │   ├── 141cd466188a1802b85db7338b52c80b8b3a98
+│   │   │   ├── 3c4c9054cc74c7ae9efe86d845b59cd2fe2e6b
+│   │   │   ├── 57fb4e6cf27cbba189e054a7940434089e8362
+│   │   │   ├── 599ea734473699196f95763d7cda624aa203e7
+│   │   │   ├── 679279d45cede5f883787837563e80e6556567
+│   │   │   ├── aa1f338118921399e2bd31220b8d14026f760d
+│   │   │   └── c1b1aa50d54774011a8f408c0b2b15a16add33
+│   │   ├── ab
+│   │   │   ├── 5472b7e464068b3afbf4a182dfd524320051cd
+│   │   │   ├── 7305ca6829ab920e2353e4a7cb12ec5f5849ba
+│   │   │   ├── 82efcb23189d26fb53d8826d61c963d3686de7
+│   │   │   ├── 9b3ded2d17f2f006dadfbbe5fee7b465c16ef3
+│   │   │   ├── ad2c6f5e0da94b652191851ae3f41c4201fa8c
+│   │   │   └── e1562ab696240c1ab3320737aa92d6f9f6ea6d
+│   │   ├── ac
+│   │   │   ├── 23d9c8d28fee3bd5e518ff70c234f48ca92150
+│   │   │   ├── 41e817ef07993b83fcf8cba94e0bee323ff081
+│   │   │   ├── 5b80179bf920482a18cf94ea676e1f834d6e4f
+│   │   │   ├── 6bf5c3f9496e941b311ee6aaf5f4915259d810
+│   │   │   ├── cd85e243fabca78f70d4449ea5e591617e0531
+│   │   │   └── e3431d0ffe56ffe8077c4fd36f7a9fc2de3ad9
+│   │   ├── ad
+│   │   │   ├── 0c31e8a855a0e2ad33b688b88e9293b1684f73
+│   │   │   ├── 1fbe3d03e3c5ca14bc7f504e7d3e6f0ef04aa3
+│   │   │   ├── 497495d927cffb63ac590d2062284508cebd45
+│   │   │   ├── 6b0138775c6396f73a0b334f60413e940aa574
+│   │   │   ├── 95978b1d50c8aa295a681085aa806ba299bae9
+│   │   │   ├── c5863d371f06cd53ef436d6d64bfc5c9ebab68
+│   │   │   ├── cf457f9ae6cede003081e016e1ceb891318260
+│   │   │   └── e285488b7f717f256666bb3ea21bbda44fe0e3
+│   │   ├── ae
+│   │   │   ├── 212540ca1b7df7fe4b26ef40c5988af70ca1ba
+│   │   │   ├── 3bf56f97783eadb77b68ab83f9cc1b5bc84c70
+│   │   │   ├── 4824a87417cf1a05c41f58378a5ca62b0ea5f1
+│   │   │   ├── 64e31a5cdb2ee476b1d04a0306f2e50cb7fd34
+│   │   │   ├── 6f75f8e45c809af4df7b3555a3b01bee2f3672
+│   │   │   ├── 97d4d0459126825d58af83de2c3727998c61ae
+│   │   │   ├── d37c64d866966d8e5fbea19da0911fa72d3224
+│   │   │   ├── e4e5befbb2ea789cbb08935cd75b834dec4de5
+│   │   │   └── f61ae99a4f0e25c5f99661ac7773150b0f2bfe
+│   │   ├── af
+│   │   │   ├── 0465b51e823e76f150b851c8a5ec7e599070ce
+│   │   │   ├── 64e4cdf31954d2aa101b14b8006e6d451cc797
+│   │   │   ├── 891a1b4c2ab4c0a91dbcd94b240e63f700d07f
+│   │   │   ├── d8e8bf2d2c43eb5efc83ce1b17474f96317aaa
+│   │   │   ├── e5c7b8248e7e0b6140355245416dd47dbaf27d
+│   │   │   └── ec7ffbe8bf5372bc35ffba75c3a15897530aab
+│   │   ├── b0
+│   │   │   ├── 41105c902cc2a2c01b46ce60596df081bf2505
+│   │   │   ├── 8e28bdcd33840ed77f78f9ba4730a8c9dc933b
+│   │   │   ├── b585870f114c3c0c981c49fef61e1a6b6fd816
+│   │   │   ├── e7db02c16950cba43be9a9c2357dc805528a8a
+│   │   │   └── f80da61821fc229f447422f2e6eb3b77ae5a2e
+│   │   ├── b1
+│   │   │   ├── 298b51d21451695635087454200f179b4a7692
+│   │   │   ├── 36ff1974ff0520791a2351d768219acfb78344
+│   │   │   ├── 85419fdfba3785034e29062d09658795d2d967
+│   │   │   └── d8094b64a7aa48d3094b91befdc04c9e16b053
+│   │   ├── b2
+│   │   │   ├── 088cab02014c24c1c26ff51fac029ded87357c
+│   │   │   ├── 1601f7c894300f4385ff2ca6d28b9ea1a3956a
+│   │   │   ├── 422d575586032d0f18c7f21e8dc1253e453adf
+│   │   │   ├── 84595204caae887a7cefeceb6f1e59039fe198
+│   │   │   ├── 84b1d5547373e0fefc1b471f263d5f6d3ce291
+│   │   │   ├── b2a44f6ebc70c450043c05a002e7a93ba5d651
+│   │   │   └── ccd1af556f52fd53c600dab4775b7e150d264e
+│   │   ├── b3
+│   │   │   ├── 113acb023d6f320a01efffed5fee11ea065c9c
+│   │   │   └── a515399c422b26df6ec4a2bd3ecdb80e19720d
+│   │   ├── b4
+│   │   │   ├── 08e300f41324f1bddfde49c5513ef840bfcb9c
+│   │   │   ├── 156e22cae5144794e81e7ae4fd90b44afdb2fa
+│   │   │   ├── 217046a678d2573e06808f26808575c274049f
+│   │   │   ├── 62f46b5c4a9aaca9130bfd296a6d597e7d9bd1
+│   │   │   ├── 78ed6f510da1892ca056149eff7cebb855316f
+│   │   │   ├── c3eaaad8bb39999d1fed0eed2900c07c937ec1
+│   │   │   └── d5daa285316e7100f7ad4ccc7bd82f267efab0
+│   │   ├── b5
+│   │   │   ├── 39f624fdf7bb11556e7631755f34e779b90d78
+│   │   │   ├── 5af542fb7423f221dab131daf87dcf692c1554
+│   │   │   ├── 70a58c0172470bcb988be7459341065d66ee01
+│   │   │   ├── 7227057f65523d080e067cf6e1496c4e3d0058
+│   │   │   ├── 72b9bfb1209ad978cb4776d39d82adbc6cf9fb
+│   │   │   ├── ad35c545a2574fade088fadb6688a2c26e5df6
+│   │   │   └── e2a00e83d300a8566dfd34e38a0cf73d6f992c
+│   │   ├── b6
+│   │   │   ├── 34504a4cdb29cdee77536c5f5f886df26020c4
+│   │   │   ├── 94bf5b9a0691268cfa72177179bbf89ba9d2cf
+│   │   │   └── e42643b6a54db1a5b6647ebef01199b5a60434
+│   │   ├── b7
+│   │   │   ├── 121defc3a94fa98f3f16c42e8da8eccf827141
+│   │   │   ├── 34f0489e083d578918c5e1925f301b084e2679
+│   │   │   ├── 821e939a68b27dc3c9a2155ce6937a3e3db6a8
+│   │   │   └── ef76cde6ed97276cfe1a3aa340703805091450
+│   │   ├── b8
+│   │   │   ├── 2e190a3e061fa11c82a921b0b62ba608fc4dd1
+│   │   │   ├── 4f6dd4cd897d168424937c3d1958672656efd2
+│   │   │   ├── c22b9abc076b15d7563238a4d31453f29249e6
+│   │   │   ├── d33cedaa8003a12741b4fd6904490f1f4b377a
+│   │   │   ├── dbd803a8823a1bea869a49b1d0691ea158321d
+│   │   │   └── df657df825b4686675927a524d779df906ede3
+│   │   ├── b9
+│   │   │   ├── 3950677972cefbb584fa583140719e2d022426
+│   │   │   ├── 7542ac942f35e8183735946c1abb36036ba31a
+│   │   │   ├── b57b0b83086aa6df8062dfd9e2115105fdee77
+│   │   │   ├── c9d0794a51cfa45486861716167e3181c131e7
+│   │   │   └── ff45258c87b4688415fc860359a34895fccde9
+│   │   ├── ba
+│   │   │   └── d537224dba5cc836dbab7fb6e6b0955fdcea74
+│   │   ├── bb
+│   │   │   ├── d7c032676b2a484cfbe0fa7719907e5e7a2092
+│   │   │   ├── e457d35eff017b543e7564b5dfda01b372fd51
+│   │   │   └── f52b202a274b74147fdc1f22a70cabdb131548
+│   │   ├── bc
+│   │   │   ├── 13393b89f0d69fc95daafda7d804ed5dd271ff
+│   │   │   ├── 34766e0882ed731b4fe82ffc01cd3ca8f7c138
+│   │   │   ├── 64655cf95555efd36b014686d325e68d1f158e
+│   │   │   ├── 730397555d0b540c88bf27ca9f18d4e0a53afb
+│   │   │   ├── 860b4357f19a2f4dc64af1ff9047ccadd89b6b
+│   │   │   ├── 9c7b92ffa8523475743ab6678342938bd3043f
+│   │   │   ├── afb14b55a750ddbe7d6f54f34db3a2683f48ed
+│   │   │   ├── be37c74eaf2c90b1199bc7add1037bf81bc7a0
+│   │   │   └── cbcbe9770e99fe20f50a4f13c76966ce619f20
+│   │   ├── bd
+│   │   │   ├── 015766193b2d3337e56179941b1047bb633ac3
+│   │   │   ├── 357899c2029b1e69dcaecbfdc9584f44b368db
+│   │   │   ├── 7e51252100888091809d574e9bf5e4ae8adbd1
+│   │   │   ├── 8157adfe74afef11b686e402bd5fb4387088ad
+│   │   │   ├── a843cdcad880856038692f3750b8a145047496
+│   │   │   ├── c1b94e2b378211f08d733d8c8d24bc22e2fd45
+│   │   │   └── dafc2c94f8c7e4cd27a73a20f6b9dd95ac4cc9
+│   │   ├── be
+│   │   │   ├── 1d70e1c65e7ec8910391b0c8aa8c1de78b3140
+│   │   │   ├── 6d8208ce22943610b741d371d2a9eb1a8697fc
+│   │   │   ├── 7ced888cbb70e23e7e81e1f5ae41d9aaf44bcd
+│   │   │   ├── 88f2083866b0686a5ee8e9eb9010a019a75794
+│   │   │   ├── b704b90b65e369a76c3b2dbb52e4ed36b8cf35
+│   │   │   └── d100fd77f8ec6badbdb14112849e71336f7441
+│   │   ├── bf
+│   │   │   ├── 71f53a38dfbb9d033ba7fe470fbcbb5f36262d
+│   │   │   ├── 8f2d5869e8872a7e2d430776470b23f272644e
+│   │   │   └── f011288a3b661bdacfb600b9945b65430cdef4
+│   │   ├── c0
+│   │   │   ├── 5380a41142486e502117894ef1e6c544afb1e9
+│   │   │   ├── 66c967c9a7316651324b44d357be31b8ecaeb8
+│   │   │   ├── 8e326897d55f5ba7d674d7aed4684a4e2adcf8
+│   │   │   ├── df83d1cf8c5b692fbba463553f21d8dbf7abd0
+│   │   │   └── fe0a89798551b48cf9ab496cbb532321878828
+│   │   ├── c1
+│   │   │   ├── 334095f876a408c10f2357faaced969ec090ab
+│   │   │   ├── 5f6b6c3c4198a6a59076d0201ba222502d397b
+│   │   │   └── 674171e09c00daf1d441013a1c6cd92ac53c58
+│   │   ├── c2
+│   │   │   ├── 04411b4d8e06c6ec6900a52f063108c1276847
+│   │   │   ├── 1d803a1d8bbd721035cb81d581ad5fd11312e4
+│   │   │   ├── 7e157efd98050dc3fbc0deee97a42fb41ddfd0
+│   │   │   ├── a5679d71ccf84490f688daf667b18abdc5c4b7
+│   │   │   └── ee512890e2e865debaaaa5cf3de34397cd9d5b
+│   │   ├── c3
+│   │   │   ├── 259d37565dc323b8045468cdc6ce5973f8e703
+│   │   │   ├── 5da978fcd6f77bcd4af5a91c8b1a28c28f60b3
+│   │   │   ├── c4172c5ca0a41bfd09d1a0d249c7ce0705afbd
+│   │   │   ├── d3ffb5a602c7403a117765aabbce2b993d4422
+│   │   │   └── e76e692bd1ac3db48b838b887d16163489d3f6
+│   │   ├── c4
+│   │   │   ├── 16ab89037424c82aa72db5dfe3d62471501376
+│   │   │   ├── 2ed8c9371a0b4110b0a9366d61bb64c083583e
+│   │   │   ├── 3c6f55880ef2a01a9eaccca699c6aa104b823b
+│   │   │   ├── 6129e05e059092d9ce51be927467113eb5d2b2
+│   │   │   ├── 863a2bf24664289fe35e74a1234c4df2511c1d
+│   │   │   ├── 8a024f89efdc25905e56a81b668e1b6924a1e1
+│   │   │   ├── 8f51d31752a8aa307324eea641cf0db10d6526
+│   │   │   ├── a28869f9209e65d9d8c72ef8dbcd53dc63eada
+│   │   │   └── a4a534e0ebead2d239e59ade9ba5fd613e9751
+│   │   ├── c5
+│   │   │   ├── 11b49b6f6b221edb36ca92c2126ee1c1fd7b7e
+│   │   │   ├── 415b627b89c4db96124e9f76d21c5e5c81a0dd
+│   │   │   ├── 5a48b128e476dc0bdea3a78cd8ef32957c16cc
+│   │   │   ├── 68f667a15f435446b21d138205581fa14d68dc
+│   │   │   └── 6e6865ec433e36697b340a306d29ea16c69805
+│   │   ├── c6
+│   │   │   ├── 07212578abc01ed6fd3fd98cc9169fe8031048
+│   │   │   ├── 204edb75b73def86a81e879c6e450a5970d186
+│   │   │   ├── 296be4f391ca87b7d1a820f6d197e63c21251f
+│   │   │   ├── 4fdaa262f3ca0c9ff9b6179b6f53c471f65bc8
+│   │   │   ├── 60b1c8f411a9db3e07e1b27235ce3c3d622384
+│   │   │   ├── 83ffed8bb074e4111b78e517c3b03fb989d471
+│   │   │   ├── 867d74de2bf75d12e4512aada9f35785b60c38
+│   │   │   └── ee0a86dae7a80d15e338954f28a027f53bfbf4
+│   │   ├── c7
+│   │   │   ├── 22cb45b98cb216e0387ca8aa9a87b6fc333c92
+│   │   │   ├── 2c6cc816b17bf4738a60a0a5e07bd01e40192d
+│   │   │   ├── 82c1374647528ddd723fcbb665003e0ed89bf4
+│   │   │   ├── 94ec06e5cf95bc1f008f95df8cd2907b642adb
+│   │   │   ├── b703601dc2381a94e4e5daa87d67afae93798e
+│   │   │   ├── baacfed725d9b0e6b8421b036cf8a6a4982cf0
+│   │   │   └── ed2cc452904ae08b29e78f845bdfd18c764405
+│   │   ├── c8
+│   │   │   ├── 318c4e92664f969438bbed1dd434984bf0c9d7
+│   │   │   ├── 5fb67c463f20d1ee449b0ffee725a61dfb9259
+│   │   │   ├── 8f389de09f418da376598c42e8788d4fb6d172
+│   │   │   └── ca5efe53abbb18d330ee83a48ed129465c7f85
+│   │   ├── c9
+│   │   │   ├── 0118862cf8c80804d51e3181a448b9171a3b70
+│   │   │   ├── 6ce97ce061558f404288d15eb373e98e5f982b
+│   │   │   ├── a02553c786219f40d541887148086aacfbf6f6
+│   │   │   ├── cca6a3cbdfd6780c8eb1f200c171bdc5ebc1a5
+│   │   │   └── ec428ec287d8497dc346ac5e77d95a7a50cb2e
+│   │   ├── ca
+│   │   │   ├── 25299b382b79f178c91d8310c76f94e333a2d7
+│   │   │   ├── b277e98f3cbf59f40c921b3181bc7a6dfaa5ff
+│   │   │   └── f34ea69b37cd2f489ed60ba8ed4df1b58bce5f
+│   │   ├── cb
+│   │   │   ├── 0ec4e69c433363dba98b0c189b62c2e33222b2
+│   │   │   ├── 4990da37524e497aee7929807066ac9c157a50
+│   │   │   ├── 75542dc4654fc6d321cdf387e8646bda3a7e3f
+│   │   │   ├── 81f8e7b4c1418d93e103edc5c92e8c40dc16ee
+│   │   │   ├── 8e62ee6e771d59f007bfc8be4e5ba61a52a6d3
+│   │   │   ├── df3a9a90f94640c6f3f58f66432bbd4b45e867
+│   │   │   └── f2ee2cbb025e19e2f70adc8ae03f5538101c8a
+│   │   ├── cc
+│   │   │   ├── 22d7957a94b62632216938212441dfd4111a37
+│   │   │   ├── e8fcc3535223f9e5aff0a51b794cf256e47d4e
+│   │   │   └── ebdb6528170dfd2c4d85b3b1de187ba3d3f579
+│   │   ├── cd
+│   │   │   ├── 3599af61e1c3bdd154cf230a3b7229771431ef
+│   │   │   ├── 8b501939b9bc7d58726f2795219cca7be39ff6
+│   │   │   ├── 9f7187d25dd355a14f354c1b96d3a867040623
+│   │   │   ├── a5b435d1dfe68295df0b28983cd34fb0aa835f
+│   │   │   ├── abe8fed3ab53101fffe2c709e9e29016dbe299
+│   │   │   └── e6d389916ee12d04318f97219d7a7fca72078c
+│   │   ├── ce
+│   │   │   ├── 014cdcae4bb2b5cf5de69059c4bb57cee94fe0
+│   │   │   ├── 2a8f54159ef13690ef238d4d822e77773ff28d
+│   │   │   ├── 3aa0f1f068df1f82b5283e38b63bcd028a16a7
+│   │   │   └── 84c55834f334afb7d9befe7ed9bba6d222f3b6
+│   │   ├── cf
+│   │   │   ├── 953e4fa44701e3f796a2fde57aa177ee55a625
+│   │   │   └── f085842ceaf22e5fd8be30bbfe40090747af76
+│   │   ├── d0
+│   │   │   ├── 08999783ab9baff29da87b8ee13b06993c1fc9
+│   │   │   ├── 7fefa7fe235963bca3e8d21a3430245daaf68f
+│   │   │   ├── 9364d1e465e5cbde8f26f9f39b9a546858f6c0
+│   │   │   ├── bbd9026ced9aa0e7447f04278a9a142aaf508f
+│   │   │   └── d33c7f0396d0f689d9eb92d7742fc8198cada5
+│   │   ├── d1
+│   │   │   ├── d667cb380d101af7d0b0b007edf73cd83f9257
+│   │   │   ├── e93740c8ea26e4e2307d4ef5ee0d1a2392445f
+│   │   │   └── f98201620916b2bfb58c27d87d6bdfa1882c93
+│   │   ├── d2
+│   │   │   ├── 16cb0f983c2001afbbeea1b3088e755719d25d
+│   │   │   ├── 46a0e9df6d889feed39dfbd95a7ee74ba987af
+│   │   │   ├── 6c85ed8a7fe065458f4d16564b93dea8706af4
+│   │   │   ├── 9caa4671d632607328cc8617e8dce89f78c80b
+│   │   │   └── cb737dd62b28254acd03666c67244f6773e712
+│   │   ├── d3
+│   │   │   ├── 3c872543d0c51763ce6a933b07d61ad8959dcf
+│   │   │   ├── 5ea4f2e2d0b7a3485168854a94f22111bae47e
+│   │   │   ├── afb6ea40f192cd211031c2cc77863d85308b4c
+│   │   │   ├── b630c3f74117fd6a48c268fb03c6a8828fd307
+│   │   │   ├── c29eb6dfbee016d01c2509d2b9a490387a073b
+│   │   │   ├── fcbbec1435fde8c678330ac23f117af2578278
+│   │   │   └── fff57696e6580b77ad6fc68c4ca15c38ea6b07
+│   │   ├── d4
+│   │   │   ├── 073b0161eb7891bd59d6f36f9361b5f47afd98
+│   │   │   ├── 226a10bf92d28cd2808ce5f5cf361a5c68a317
+│   │   │   ├── 6cb18a1cb3e9bf86744d9d110017e046ddfce8
+│   │   │   ├── 6f8a6d476ce162dd541ea99fe705b4368202c4
+│   │   │   └── fe9970cf8e0bcac2b181d88f9d7b30a681899a
+│   │   ├── d5
+│   │   │   ├── 0dfbf39cd43eda790f440cf3d55404bf4c1912
+│   │   │   ├── 2298bbd87e936e2717b093411a5b006855e320
+│   │   │   ├── 4517b1de50c4c5629e408a99e2491681ecd152
+│   │   │   ├── 57797543511b728b502aac5fef149ecaa7fc74
+│   │   │   ├── 5c7349e5cad671a1791e473ea821a2373b7b4a
+│   │   │   ├── 61f6b89e368e9bd9ab749b963d1ff19be3dd81
+│   │   │   ├── 882e298a77ca2967582857491bcb75b0797804
+│   │   │   ├── ba0c263deaff04ae97477fb89b95bb2e7e58e9
+│   │   │   ├── db9662271a436c05228788665025561a07a585
+│   │   │   └── ee3a39f9d359ca086e7e8e6837efe74b6d0c57
+│   │   ├── d6
+│   │   │   ├── 27ef6053aeb811f4507d6d1c6c5f933656e481
+│   │   │   ├── 2eaa3da3a85e4c921d505b947a36c98d23e6dd
+│   │   │   ├── a87d5005ce67238d53d6de8d9125833b96a6ad
+│   │   │   ├── c957dd622a1787713f43a1d782f69263bdbb96
+│   │   │   └── d445a605cecdd48d3423340825f6048e0aaf7a
+│   │   ├── d7
+│   │   │   ├── 0f638ff695ec060908e6c9b0e6ba1d7d4ca3e0
+│   │   │   ├── 1df2b67b21343ce02e45b6deb3bf90d54a8e20
+│   │   │   ├── 39d5054a71bb4cd1b6224db2eaf8ec08d24fb2
+│   │   │   ├── acb2a5de7cd71ecfcf9b3deb9bfda96eeb3cde
+│   │   │   ├── dc111e4a1409bca0000139f3b13b1e718731ad
+│   │   │   └── e0c4023905ac1f769fd9debd0faab8d12ed38c
+│   │   ├── d8
+│   │   │   ├── 48482275314bf8c46de53980f02d9c9410b5d5
+│   │   │   ├── 8ddfa0595e3f2c1875df46416a9c013ec5762c
+│   │   │   ├── 97cd22749ee5b6a155a8debe97d26961d4af06
+│   │   │   ├── bf8f87688fbcc3d2407fe34141dfe0b43dc29e
+│   │   │   ├── d9bd12e4c3fa23d08a30ddc9ed42f1cf14e6bc
+│   │   │   └── fa9af7efb63f55c5e85ee69c43c945b7d49f4c
+│   │   ├── d9
+│   │   │   ├── 162886b0cc03b00f8cd3afb7ff5386cc520094
+│   │   │   ├── 1f2236021960062bc6fb659fc784b583614f0d
+│   │   │   ├── 2aa056d1688ebfe83a7daea735ee67cb5b40d4
+│   │   │   ├── 929ee05a1c00a2c54a344cf4213d049207765b
+│   │   │   └── ee4b1f7a95a232b30772601b707fd0c03daaa7
+│   │   ├── da
+│   │   │   ├── 69ccfc7a1ea9b3f33a5fb0beb9122872780190
+│   │   │   ├── b47e160a52cff1ed7a6043587f22669f1118b3
+│   │   │   ├── bf49851fdfc19af520e3be8c0cee74a8fa8e2a
+│   │   │   ├── c9e45627a79928b9837709e4438f26ab64ce7e
+│   │   │   ├── f3b97362e429ea1b06a96b12b4b5e0f9e759d6
+│   │   │   └── f790fc7d989aec8ee53be7cef6d7d34a5e8567
+│   │   ├── db
+│   │   │   ├── 2f8a3a291d98b2a576f3bf725a2b59bba0c2ff
+│   │   │   ├── 9f8c7afadf90d3cd150225cf1e76b6cabbb444
+│   │   │   ├── b3f1e37a202a77ab8ba6c1536ca204119018ac
+│   │   │   └── b5a92473693ab25ace86da17220db78f4efeb8
+│   │   ├── dc
+│   │   │   ├── 3dd719f7fde8f71ad41447045dff007b68fd1a
+│   │   │   ├── 56143d1825b872f0729feec99d6f501f206b26
+│   │   │   ├── 6a541b8409af2613988804982f5a90cf36fd6f
+│   │   │   ├── c38e337da87dbaec2d2a7e387829d2420581b8
+│   │   │   └── d353755891509ae7ed1083112477e9ff975192
+│   │   ├── dd
+│   │   │   ├── 56aa672b608098cd20762367764d9f222a6c71
+│   │   │   ├── 9a38143dbeee9b8a780cc0aaa3c857009e3715
+│   │   │   └── beba0880dcd69b821b5a7519de12266769855e
+│   │   ├── de
+│   │   │   ├── 53fb6e317f892e284a009276e266ff9bd89b3f
+│   │   │   ├── 96247f77c677aa7ccb0270d7481aa5b8bc0ccf
+│   │   │   └── e2f4826250ffd2b5224745d18c85d57f24b150
+│   │   ├── df
+│   │   │   └── 22b41a90c788c38f5eef0c467492cbd11c3494
+│   │   ├── e0
+│   │   │   ├── 1d208b220bae3896278cef166969cbfb46e4a2
+│   │   │   ├── 36e6af47ea017d8ae86e60c223a68544328fcc
+│   │   │   ├── 58bfb2578e4da5c75dcd1883f776e4b3062e58
+│   │   │   ├── 84d6fb873d58e0522c3eddb9d82853a36d7110
+│   │   │   ├── ab5ae180bbca6405ef2e8a45c4d03af002195c
+│   │   │   └── b065bb725c4e8ff7a15992a09e428022e63806
+│   │   ├── e1
+│   │   │   ├── 12d8eda2590bdb951d7fbc7fb810a8f9b52daa
+│   │   │   ├── 16266af1dff4bae5100b3e3f7657daa74d50ab
+│   │   │   └── eb16ce112e2ea5bba1d3afe9bcdb2854de19ea
+│   │   ├── e2
+│   │   │   ├── 15bc4ccf138bbc38ad58ad57e92135484b3c0f
+│   │   │   ├── 4b55865cdc47e1687f8a15b3d5fdb8a2ff4a67
+│   │   │   ├── 57635970521827ba859b0dcb47ccb7f3ad695a
+│   │   │   ├── 878b065734378de9e4d97a992d987fc9862a08
+│   │   │   ├── b6b2e437d8e911807a1066ac77a577abc8882e
+│   │   │   └── c57ac6c064fc9f83fe33789735ff4d26e1e49d
+│   │   ├── e3
+│   │   │   ├── 21acdf8a5a9dafbeb640de68ff700f0310f56a
+│   │   │   ├── 2d9a1b429aec5f1b57e291b52062dcf65527de
+│   │   │   ├── 6991093783145df834df69d99c9c1ae782800e
+│   │   │   ├── 734be15e1f6fbb4b207761c8e424b77cf3a4eb
+│   │   │   └── e29a4cf5453e3a4003372b2fda0df9578703d2
+│   │   ├── e4
+│   │   │   ├── 60aeaff54dc28ff95bf40e94454397e29089f7
+│   │   │   ├── 7679aaa07c3e80b417849896a867966c66d0a0
+│   │   │   ├── ccb177aeb877307364f6abcd91a5a26af53525
+│   │   │   └── f234aa28894a4880b0105e337bef7ed009c213
+│   │   ├── e5
+│   │   │   ├── c4adf2f3defa8e483f52f9342620bb17cdc30f
+│   │   │   └── d88932fa5f5187fc534e05fb1c838953761899
+│   │   ├── e6
+│   │   │   ├── 04521adb82c196b08745c283fcdb95b1c8523c
+│   │   │   ├── 25f38701b8a345c152d2b0daef7eabe61d2344
+│   │   │   ├── 7883fb6629e543595aca0aa66a383a607fc54a
+│   │   │   ├── 829a50d4c10d93ce0a49798d6619f085eb360f
+│   │   │   ├── 9de29bb2d1d6434b8b29ae775ad8c2e48c5391
+│   │   │   └── b5b5cec6a4ad0488803c187e9138a4c7e040ca
+│   │   ├── e7
+│   │   │   ├── 2d2d69c9b757fbf837c4292761409ebe3dabf5
+│   │   │   ├── 613214e82c890c8921a68fc6bbd474b0c824f4
+│   │   │   ├── 6db378faf4f4e98f410fd1c7c46c71e19ae22d
+│   │   │   └── cd74ae6723438afc306471154c83a669f3f03f
+│   │   ├── e8
+│   │   │   ├── 08f994deedcd7f6bac80e721aace1e4318cfd4
+│   │   │   ├── 58cec4b269113195a8a7c91678854b80e6bbd5
+│   │   │   ├── 5f04edc5671d95082d474cdd50e05d5b346af4
+│   │   │   ├── a7b78b522bd96ba46921d126b9178e919f5723
+│   │   │   └── f4318bce83def3ecb4322ab2ed21eca0fbaf68
+│   │   ├── e9
+│   │   │   ├── 40db5f1ba32cd095fe3581037e341dc3966526
+│   │   │   ├── 5c819be7b2d0b41964aebc279708589f4726cc
+│   │   │   ├── d189bc5b05c33c4d24a46b8bcdd5f7444ad922
+│   │   │   └── ffa3083ad279ecf95fd8eae59cb253e9a539c4
+│   │   ├── ea
+│   │   │   ├── 6253daae89c844fecc9bde99783c44a30571eb
+│   │   │   ├── 7953a3a866a804ddb7a3c3787a78fe3a6ffcd9
+│   │   │   └── dbe8a1614526985e5b1148b10a086013e47f92
+│   │   ├── eb
+│   │   │   ├── 00abe613060342649a3eda23d92daf8831e961
+│   │   │   ├── 143e5370a2461f96f4610df1f6e30828c5639f
+│   │   │   ├── 1b318a93ff903f2c71f7dcc0643f9b4ef3fd46
+│   │   │   ├── 28672a764dc7f55706c5d9d5d43f398f404ea0
+│   │   │   ├── d404780e432c905dce24b3fe718a7b35218284
+│   │   │   └── fc67316f41139377c4b87af4b0aff179f70e79
+│   │   ├── ec
+│   │   │   ├── 1b65925d5545b67b8a081ae32452c4d3496b97
+│   │   │   ├── 2bf43050083724483c331909427544698cc306
+│   │   │   ├── 6fab9ee9c1447a8f16ba907c284862338ee235
+│   │   │   ├── 83e9ebc03d04d32adc438e219b3528527868e2
+│   │   │   ├── 842155946882aa67eb97f5a33d01bc3f6d9ce2
+│   │   │   ├── 9f69b6c8bdbb1f2500b43175717f1df69697a9
+│   │   │   ├── cc7b0b8e9f3cbfdc6a8e5069a4d676b04cb439
+│   │   │   └── d1aa9785a2eab26b28ff04bf26048468b9f647
+│   │   ├── ed
+│   │   │   ├── 21017704e0f26294f09be4475ef09a638dc43f
+│   │   │   ├── 3f64b3dd4f35cd425b1b7b11b8e9d6dde6aee3
+│   │   │   ├── 819b2a6c228d772f31d1ce6ccc6aca1ed26217
+│   │   │   ├── f9e02df4dde000a22a02fe3d6cc4106fa77233
+│   │   │   └── fad1faf53d65a346bc294f9b5549a235216bee
+│   │   ├── ee
+│   │   │   ├── 00bdfe796fb143424f5f7fbd64615fc553a278
+│   │   │   └── 6b61a7eec8eaece8a734dbdeed963a88bf5a43
+│   │   ├── ef
+│   │   │   ├── 0a535fcfd8575b6469c8e62a65d5aed5a0aa92
+│   │   │   ├── 3af3a49b5b6888f7b49aad7469fc6e20099fd4
+│   │   │   ├── 66ce4d2ba13afe7532329cdfac7c39e625d32e
+│   │   │   ├── bba51f9ec31b797ce1897ad9f94659a26e6d8f
+│   │   │   ├── e112bea0ddc510d7eb81a138dad715ab31adbb
+│   │   │   └── ecdcee7e8eae37ad047b81610a6d5145fc0dcb
+│   │   ├── f0
+│   │   │   ├── 6a7c7976992250ed417f1b36aed78c7e31e712
+│   │   │   ├── c74ba3d525549548710b390f43a4777eeadc18
+│   │   │   ├── e0a59b79ab3e4d19a4c3d75fbfa580f68bbf36
+│   │   │   ├── f4463bc7e64e5b4b2ae0433bcc221deca70545
+│   │   │   └── fb92738de0ebf496a7c79342eb59d4160afe4b
+│   │   ├── f1
+│   │   │   ├── 23c15f33751f37855cef06055b185a5329ff6b
+│   │   │   ├── 4ecba8431b26ac7b1a8d403726c8ca5479df96
+│   │   │   ├── 6e65a7fddd8e9b22c29aca3d7fd5f5598f7e2f
+│   │   │   ├── 71ab7db63e1aa0d17bed9d9bd5b488ed2695e8
+│   │   │   └── 8d9f4518f326bb7c1bfbba08abd7d8010cdec6
+│   │   ├── f2
+│   │   │   └── a676b264775d7260a8cda7c35586b52f797edb
+│   │   ├── f3
+│   │   │   ├── 39de3dd2c6d0ccd93ece3b44a3eff863a53794
+│   │   │   ├── 55e017b130bdf94f76f2332ed056744ee9e963
+│   │   │   ├── 5ef5dfe6e47eb5fafdc82fc2a7b9a44a16fbc8
+│   │   │   ├── 82cec3c8fa65cba22ac095a270c7eb56a3e398
+│   │   │   ├── a27c15234816c0f7623ab885f89207b8dd613f
+│   │   │   └── f67cc9f2a8e78eed641bdd062809f74c554588
+│   │   ├── f4
+│   │   │   ├── 17b70317670dfb93ef73b8cc4bf6b21f1066c8
+│   │   │   ├── 19bd2ca817932de6c6b4626723eda7b08fb8d8
+│   │   │   ├── 1e3094d09e27df7522a2ef2f5323eaffd1e2d2
+│   │   │   ├── 3d479574fa7f476203a2f813425cd07faca40c
+│   │   │   ├── 3d4d0d071add3f547906b0777595f43c15bff2
+│   │   │   └── 73418cf4a250665493c2eab98648de6540a0a4
+│   │   ├── f5
+│   │   │   ├── 1d710fe56f05f1c1ee5d27260776337b8bd6ee
+│   │   │   ├── 4e9c626b2d5737c1b14e8192ce89be122ec1e8
+│   │   │   ├── 75ba578d43e00df289dd346ae217dc7fd15ca8
+│   │   │   ├── a7c373487b761e4aaa5b405c5d0d8de087f41e
+│   │   │   ├── e892acd22c4225ffcc61403330b4c10628d5ca
+│   │   │   └── fc12f25018640c17d08818ff7696d949b84639
+│   │   ├── f6
+│   │   │   ├── 0cc0f8031225d4b6ba1f5d8d721881fff53468
+│   │   │   └── 63fb7b1158b45704fc659211fe22c403ec0797
+│   │   ├── f7
+│   │   │   ├── 1aebc17d46c942f19af03cb2bfe137b0b0a3a0
+│   │   │   ├── 4d5e7385d751802b0744898377ae2f9087e611
+│   │   │   └── fe478f3f09e9648d20829fd3be6084ddbe9f77
+│   │   ├── f8
+│   │   │   ├── 0017ffd0dfe1e82e4b5e0ad51f5a9b0117dbdb
+│   │   │   ├── 14f66e2f2f8788bd7c1d171586588a9b71eef1
+│   │   │   ├── d02485fc9772fbd625562f17ee1c6cfa5b2336
+│   │   │   ├── e186c5b06ad3f67e8142a0ee0adb791b2de2c7
+│   │   │   └── f26fe3c5ee0a00951eb2be424ea4952d4293bd
+│   │   ├── f9
+│   │   │   ├── 0210ec50a23f994e7451bea61532e57fc48e20
+│   │   │   ├── 31b6e8b404c7c921ac0059364f27d0ec03ef53
+│   │   │   ├── b2156eefe421ec405f689cda417fc3aab7d576
+│   │   │   ├── d9fe7ab9592396f841b24cf91fd9e6fd17d07c
+│   │   │   └── ff1f3ab790e33546ba12eca6a1ee2552654015
+│   │   ├── fa
+│   │   │   ├── 182d824e0bb066a6dd79148dfe378797c69e25
+│   │   │   ├── 2f3ad628745e8f12dc22b71f06953ee4dbd736
+│   │   │   ├── 41d39b9ded7781a05256ff1af45fc2c7cd5451
+│   │   │   └── 525044dc1805c75d1dfd2a15357bbb8a8f55f0
+│   │   ├── fb
+│   │   │   ├── 225190033c8da199f0fd473183da627eb2fb05
+│   │   │   ├── 809a8150536e9b4e3ad90553383ee0ecdca580
+│   │   │   └── 97bfd268ba3c8c70564dfcba03341bf4cc8d05
+│   │   ├── fc
+│   │   │   ├── 98da30a7ea37bef41a6ea40b80da5537101ee2
+│   │   │   ├── 98efd456649cf73958c7f537275d7c58445162
+│   │   │   ├── 9e5782103255fc0629faed840bfc239e5a6d28
+│   │   │   └── c600f3ff0ec1208d9e699bdd414506fbdb48a5
+│   │   ├── fd
+│   │   │   ├── 0da283e9490a9d75468af400d9cc08a12ae33b
+│   │   │   ├── 183bdf78c15b83bfa27f60087c4fd86974d776
+│   │   │   ├── 263b7d3f8d8f83ecb51dc25f6c2e4952591c01
+│   │   │   ├── 46ad44ae7cedac96c3e3af8d5de2921a8936f3
+│   │   │   ├── 4f9aab8784302f91f40093d030a865eb4518f6
+│   │   │   ├── 99687d7059d0201a15f2b56d4df2a6a2dc4dd1
+│   │   │   ├── b5c81812f30ce0aec82e31f4b4b82a206339db
+│   │   │   └── ed0d99d7debed74ea3523ef5ebad6a94f4c05e
+│   │   ├── fe
+│   │   │   ├── 2933f149bc2dd30bdf94cc29ff60453372bd41
+│   │   │   ├── 29c648efa21f8e89cd401b71f669211451814e
+│   │   │   ├── 7421b46beb1e0b1b14b5b3fd5ddfe4660fb98b
+│   │   │   ├── 97a988fe2d198c363eda9b097c34e590a3af9e
+│   │   │   └── fbd4bdc7a4afe1992b0cdb1a5dba508d1561d4
+│   │   ├── ff
+│   │   │   ├── cb094652ef3364dc8188a7518161ecc1ac2211
+│   │   │   ├── d0104b6d2ce72465a441852b1fb1429e069f74
+│   │   │   ├── e18c0143fdbdafcfce582b70390582f6d4239d
+│   │   │   └── f85fa45adcbd9512f773eca2df8b70215f3fad
+│   │   ├── info
+│   │   └── pack
+│   └── refs
+│       ├── heads
+│       │   ├── backup
+│       │   ├── chore
+│       │   ├── feat
+│       │   ├── fix
+│       │   ├── for-manus
+│       │   ├── main
+│       │   └── snapshot-20250924-2302
+│       ├── remotes
+│       │   └── origin
+│       └── tags
+│           ├── snapshot-20250924-2302-tag
+│           ├── v0.1-memory-admin
+│           ├── v0.2-rebecca-core-agents
+│           ├── v0.2.0
+│           ├── v0.3-ingest-pdf-fix
+│           ├── v0.3-profiles-get
+│           ├── v0.3.0
+│           ├── v0.4-admin-traces
+│           ├── v0.4.0
+│           ├── v0.4.1-ingest-github+url
+│           └── v0.5-ingest-github-paged
+├── .gitattributes
+├── .github
+│   ├── PULL_REQUEST_TEMPLATE.md
+│   └── workflows
+│       └── ci.yml
+├── .gitignore
+├── Makefile
+├── _manus_pack
+│   └── .env.local.example
+├── apps
+│   └── web
+│       ├── .editorconfig
+│       ├── .env.example
+│       ├── .env.local
+│       ├── .env.local.example
+│       ├── .eslintrc.json
+│       ├── .gitignore
+│       ├── .ingest_checkpoints
+│       ├── .next
+│       │   ├── app-build-manifest.json
+│       │   ├── build-manifest.json
+│       │   ├── cache
+│       │   ├── fallback-build-manifest.json
+│       │   ├── package.json
+│       │   ├── prerender-manifest.json
+│       │   ├── routes-manifest.json
+│       │   ├── server
+│       │   ├── static
+│       │   ├── trace
+│       │   └── types
+│       ├── .vscode
+│       │   ├── extensions.json
+│       │   └── settings.json
+│       ├── Dockerfile
+│       ├── Ping-4O.ps1
+│       ├── README.md
+│       ├── Run-Rag.backup.ps1
+│       ├── Run-Rag.ps1
+│       ├── Sync-Memory.ps1
+│       ├── _sanity_bundle
+│       │   └── .env.redacted
+│       ├── agents.prod.json
+│       ├── answer.json
+│       ├── ask.json
+│       ├── docs
+│       │   ├── CHANGELOG.md
+│       │   ├── evals
+│       │   └── retrieve-api.md
+│       ├── eslint.config.mjs
+│       ├── freya-rebecca-v0.4.0.bundle
+│       ├── logs
+│       ├── middleware.ts
+│       ├── migrations
+│       │   └── 2025-08-27_rag_logs.sql
+│       ├── next-env.d.ts
+│       ├── next.config.mjs
+│       ├── package.json
+│       ├── patches
+│       │   └── 0001-release-main-29.08.2025.patch
+│       ├── public
+│       │   ├── file.svg
+│       │   ├── globe.svg
+│       │   ├── next.svg
+│       │   ├── vercel.svg
+│       │   └── window.svg
+│       ├── resp-gpt5.json
+│       ├── retrieve_grep_output.txt
+│       ├── scripts
+│       │   ├── audit-state.mjs
+│       │   ├── ci_smoke.sh
+│       │   ├── contract
+│       │   ├── db
+│       │   ├── diag
+│       │   ├── e2e
+│       │   ├── embed_backfill.sh
+│       │   ├── evals
+│       │   ├── ingest_github.sh
+│       │   ├── ingest_github_paged.sh
+│       │   ├── ingest_many.sh
+│       │   ├── ingest_pdf.sh
+│       │   ├── ingest_pdf_file.sh
+│       │   ├── ingest_readme_pdfs.sh
+│       │   ├── ingest_url.sh
+│       │   ├── ingest_youtube.sh
+│       │   ├── migrate-g0.js
+│       │   ├── migrate.sh
+│       │   ├── migrations
+│       │   ├── retrieve.sh
+│       │   ├── run_admin_sql.sh
+│       │   └── smoke_pdf.sh
+│       ├── seed.json
+│       ├── seeds
+│       │   ├── agents
+│       │   ├── army
+│       │   ├── profiles
+│       │   ├── rebecca
+│       │   └── refs
+│       ├── src
+│       │   ├── app
+│       │   ├── lib
+│       │   └── types
+│       ├── tests
+│       │   ├── Smoke-Evals.ps1
+│       │   └── golden.json
+│       ├── traces.csv
+│       ├── tsconfig.backup.json
+│       ├── tsconfig.json
+│       ├── tsconfig.tsbuildinfo
+│       └── urls.txt
+├── docker-compose.yml
+├── docs
+│   ├── CHANGELOG.md
+│   └── manus
+│       ├── API_CONTRACT.md
+│       └── VISION.md
+├── env-check.ps1
+├── logs
+│   ├── db_ping.json
+│   ├── git_diff_stat.txt
+│   ├── git_log.txt
+│   ├── ingest_github.json
+│   ├── ingest_pdf.json
+│   ├── ingest_url.json
+│   ├── pr_body.md
+│   ├── retrieve_compact.json
+│   └── retrieve_full.json
+├── node_modules
+│   ├── .bin
+│   │   ├── acorn -> ../acorn/bin/acorn
+│   │   ├── eslint -> ../eslint/bin/eslint.js
+│   │   ├── esparse -> ../esprima/bin/esparse.js
+│   │   ├── esvalidate -> ../esprima/bin/esvalidate.js
+│   │   ├── js-yaml -> ../js-yaml/bin/js-yaml.js
+│   │   ├── json5 -> ../json5/lib/cli.js
+│   │   ├── loose-envify -> ../loose-envify/cli.js
+│   │   ├── nanoid -> ../nanoid/bin/nanoid.cjs
+│   │   ├── napi-postinstall -> ../napi-postinstall/lib/cli.js
+│   │   ├── next -> ../next/dist/bin/next
+│   │   ├── node-which -> ../which/bin/node-which
+│   │   ├── openai -> ../openai/bin/cli
+│   │   ├── resolve -> ../resolve/bin/resolve
+│   │   ├── semver -> ../semver/bin/semver.js
+│   │   ├── tldts -> ../tldts/bin/cli.js
+│   │   ├── tsc -> ../typescript/bin/tsc
+│   │   └── tsserver -> ../typescript/bin/tsserver
+│   ├── .package-lock.json
+│   ├── @asamuzakjp
+│   │   └── css-color
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       ├── package.json
+│   │       └── src
+│   ├── @csstools
+│   │   ├── color-helpers
+│   │   │   ├── CHANGELOG.md
+│   │   │   ├── LICENSE.md
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── css-calc
+│   │   │   ├── CHANGELOG.md
+│   │   │   ├── LICENSE.md
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── css-color-parser
+│   │   │   ├── CHANGELOG.md
+│   │   │   ├── LICENSE.md
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── css-parser-algorithms
+│   │   │   ├── CHANGELOG.md
+│   │   │   ├── LICENSE.md
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   └── css-tokenizer
+│   │       ├── CHANGELOG.md
+│   │       ├── LICENSE.md
+│   │       ├── README.md
+│   │       ├── dist
+│   │       └── package.json
+│   ├── @emnapi
+│   │   └── runtime
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       ├── index.js
+│   │       └── package.json
+│   ├── @eslint
+│   │   ├── config-array
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── config-helpers
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── core
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── eslintrc
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── conf
+│   │   │   ├── dist
+│   │   │   ├── lib
+│   │   │   ├── package.json
+│   │   │   └── universal.js
+│   │   ├── js
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── package.json
+│   │   │   ├── src
+│   │   │   └── types
+│   │   ├── object-schema
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   └── plugin-kit
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       └── package.json
+│   ├── @eslint-community
+│   │   ├── eslint-utils
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── index.d.mts
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── index.mjs
+│   │   │   ├── index.mjs.map
+│   │   │   ├── node_modules
+│   │   │   └── package.json
+│   │   └── regexpp
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── index.d.ts
+│   │       ├── index.js
+│   │       ├── index.js.map
+│   │       ├── index.mjs
+│   │       ├── index.mjs.map
+│   │       └── package.json
+│   ├── @humanfs
+│   │   ├── core
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   ├── package.json
+│   │   │   └── src
+│   │   └── node
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       ├── node_modules
+│   │       ├── package.json
+│   │       └── src
+│   ├── @humanwhocodes
+│   │   ├── module-importer
+│   │   │   ├── CHANGELOG.md
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   ├── package.json
+│   │   │   └── src
+│   │   └── retry
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       └── package.json
+│   ├── @img
+│   │   ├── sharp-libvips-linux-x64
+│   │   │   ├── README.md
+│   │   │   ├── lib
+│   │   │   ├── package.json
+│   │   │   └── versions.json
+│   │   ├── sharp-libvips-linuxmusl-x64
+│   │   │   ├── README.md
+│   │   │   ├── lib
+│   │   │   ├── package.json
+│   │   │   └── versions.json
+│   │   ├── sharp-linux-x64
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── lib
+│   │   │   └── package.json
+│   │   └── sharp-linuxmusl-x64
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── lib
+│   │       └── package.json
+│   ├── @mozilla
+│   │   └── readability
+│   │       ├── .prettierrc.js
+│   │       ├── CHANGELOG.md
+│   │       ├── CODE_OF_CONDUCT.md
+│   │       ├── CONTRIBUTING.md
+│   │       ├── JSDOMParser.js
+│   │       ├── LICENSE.md
+│   │       ├── README.md
+│   │       ├── Readability-readerable.js
+│   │       ├── Readability.js
+│   │       ├── SECURITY.md
+│   │       ├── eslint.config.mjs
+│   │       ├── index.d.ts
+│   │       ├── index.js
+│   │       └── package.json
+│   ├── @napi-rs
+│   ├── @next
+│   │   ├── env
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── eslint-plugin-next
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── swc-linux-x64-gnu
+│   │   │   ├── README.md
+│   │   │   ├── next-swc.linux-x64-gnu.node
+│   │   │   └── package.json
+│   │   └── swc-linux-x64-musl
+│   │       ├── README.md
+│   │       ├── next-swc.linux-x64-musl.node
+│   │       └── package.json
+│   ├── @nodelib
+│   │   ├── fs.scandir
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── out
+│   │   │   └── package.json
+│   │   ├── fs.stat
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── out
+│   │   │   └── package.json
+│   │   └── fs.walk
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── out
+│   │       └── package.json
+│   ├── @nolyfill
+│   │   └── is-core-module
+│   │       ├── LICENSE
+│   │       ├── index.d.ts
+│   │       ├── index.js
+│   │       └── package.json
+│   ├── @rtsao
+│   │   └── scc
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── index.d.ts
+│   │       ├── index.js
+│   │       ├── index.js.flow
+│   │       └── package.json
+│   ├── @rushstack
+│   │   └── eslint-patch
+│   │       ├── .eslintrc.js
+│   │       ├── CHANGELOG.json
+│   │       ├── CHANGELOG.md
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── custom-config-package-names.js
+│   │       ├── eslint-bulk-suppressions.js
+│   │       ├── lib
+│   │       ├── modern-module-resolution.js
+│   │       └── package.json
+│   ├── @swc
+│   │   └── helpers
+│   │       ├── LICENSE
+│   │       ├── _
+│   │       ├── cjs
+│   │       ├── esm
+│   │       ├── package.json
+│   │       ├── scripts
+│   │       └── src
+│   ├── @tybys
+│   ├── @types
+│   │   ├── estree
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── flow.d.ts
+│   │   │   ├── index.d.ts
+│   │   │   └── package.json
+│   │   ├── json-schema
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── index.d.ts
+│   │   │   └── package.json
+│   │   ├── json5
+│   │   │   ├── README.md
+│   │   │   ├── index.d.ts
+│   │   │   ├── package.json
+│   │   │   └── types-metadata.json
+│   │   ├── node
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── assert
+│   │   │   ├── assert.d.ts
+│   │   │   ├── async_hooks.d.ts
+│   │   │   ├── buffer.buffer.d.ts
+│   │   │   ├── buffer.d.ts
+│   │   │   ├── child_process.d.ts
+│   │   │   ├── cluster.d.ts
+│   │   │   ├── compatibility
+│   │   │   ├── console.d.ts
+│   │   │   ├── constants.d.ts
+│   │   │   ├── crypto.d.ts
+│   │   │   ├── dgram.d.ts
+│   │   │   ├── diagnostics_channel.d.ts
+│   │   │   ├── dns
+│   │   │   ├── dns.d.ts
+│   │   │   ├── dom-events.d.ts
+│   │   │   ├── domain.d.ts
+│   │   │   ├── events.d.ts
+│   │   │   ├── fs
+│   │   │   ├── fs.d.ts
+│   │   │   ├── globals.d.ts
+│   │   │   ├── globals.typedarray.d.ts
+│   │   │   ├── http.d.ts
+│   │   │   ├── http2.d.ts
+│   │   │   ├── https.d.ts
+│   │   │   ├── index.d.ts
+│   │   │   ├── inspector.d.ts
+│   │   │   ├── module.d.ts
+│   │   │   ├── net.d.ts
+│   │   │   ├── os.d.ts
+│   │   │   ├── package.json
+│   │   │   ├── path.d.ts
+│   │   │   ├── perf_hooks.d.ts
+│   │   │   ├── process.d.ts
+│   │   │   ├── punycode.d.ts
+│   │   │   ├── querystring.d.ts
+│   │   │   ├── readline
+│   │   │   ├── readline.d.ts
+│   │   │   ├── repl.d.ts
+│   │   │   ├── sea.d.ts
+│   │   │   ├── stream
+│   │   │   ├── stream.d.ts
+│   │   │   ├── string_decoder.d.ts
+│   │   │   ├── test.d.ts
+│   │   │   ├── timers
+│   │   │   ├── timers.d.ts
+│   │   │   ├── tls.d.ts
+│   │   │   ├── trace_events.d.ts
+│   │   │   ├── ts5.6
+│   │   │   ├── tty.d.ts
+│   │   │   ├── url.d.ts
+│   │   │   ├── util.d.ts
+│   │   │   ├── v8.d.ts
+│   │   │   ├── vm.d.ts
+│   │   │   ├── wasi.d.ts
+│   │   │   ├── worker_threads.d.ts
+│   │   │   └── zlib.d.ts
+│   │   ├── pg
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── index.d.mts
+│   │   │   ├── index.d.ts
+│   │   │   ├── lib
+│   │   │   └── package.json
+│   │   ├── react
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── canary.d.ts
+│   │   │   ├── compiler-runtime.d.ts
+│   │   │   ├── experimental.d.ts
+│   │   │   ├── global.d.ts
+│   │   │   ├── index.d.ts
+│   │   │   ├── jsx-dev-runtime.d.ts
+│   │   │   ├── jsx-runtime.d.ts
+│   │   │   ├── package.json
+│   │   │   └── ts5.0
+│   │   └── react-dom
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── canary.d.ts
+│   │       ├── client.d.ts
+│   │       ├── experimental.d.ts
+│   │       ├── index.d.ts
+│   │       ├── package.json
+│   │       ├── server.browser.d.ts
+│   │       ├── server.bun.d.ts
+│   │       ├── server.d.ts
+│   │       ├── server.edge.d.ts
+│   │       ├── server.node.d.ts
+│   │       ├── static.browser.d.ts
+│   │       ├── static.d.ts
+│   │       ├── static.edge.d.ts
+│   │       ├── static.node.d.ts
+│   │       └── test-utils
+│   ├── @typescript-eslint
+│   │   ├── eslint-plugin
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   ├── index.d.ts
+│   │   │   ├── node_modules
+│   │   │   ├── package.json
+│   │   │   ├── raw-plugin.d.ts
+│   │   │   └── rules.d.ts
+│   │   ├── parser
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── project-service
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── scope-manager
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── tsconfig-utils
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── type-utils
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── types
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   ├── typescript-estree
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   ├── node_modules
+│   │   │   └── package.json
+│   │   ├── utils
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   ├── dist
+│   │   │   └── package.json
+│   │   └── visitor-keys
+│   │       ├── LICENSE
+│   │       ├── README.md
+│   │       ├── dist
+│   │       └── package.json
+│   ├── @unrs
+│   │   ├── resolver-binding-linux-x64-gnu
+│   │   │   ├── README.md
+│   │   │   ├── package.json
+│   │   │   └── resolver.linux-x64-gnu.node
+│   │   └── resolver-binding-linux-x64-musl
+│   │       ├── README.md
+│   │       ├── package.json
+│   │       └── resolver.linux-x64-musl.node
+│   ├── acorn
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── acorn
+│   │   ├── dist
+│   │   │   ├── acorn.d.mts
+│   │   │   ├── acorn.d.ts
+│   │   │   ├── acorn.js
+│   │   │   ├── acorn.mjs
+│   │   │   └── bin.js
+│   │   └── package.json
+│   ├── acorn-jsx
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── xhtml.js
+│   ├── agent-base
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── helpers.d.ts
+│   │   │   ├── helpers.d.ts.map
+│   │   │   ├── helpers.js
+│   │   │   ├── helpers.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   └── index.js.map
+│   │   └── package.json
+│   ├── ajv
+│   │   ├── .tonic_example.js
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── ajv.bundle.js
+│   │   │   ├── ajv.min.js
+│   │   │   └── ajv.min.js.map
+│   │   ├── lib
+│   │   │   ├── ajv.d.ts
+│   │   │   ├── ajv.js
+│   │   │   ├── cache.js
+│   │   │   ├── compile
+│   │   │   ├── data.js
+│   │   │   ├── definition_schema.js
+│   │   │   ├── dot
+│   │   │   ├── dotjs
+│   │   │   ├── keyword.js
+│   │   │   └── refs
+│   │   ├── package.json
+│   │   └── scripts
+│   │       ├── .eslintrc.yml
+│   │       ├── bundle.js
+│   │       ├── compile-dots.js
+│   │       ├── info
+│   │       ├── prepare-tests
+│   │       ├── publish-built-version
+│   │       └── travis-gh-pages
+│   ├── ansi-styles
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── argparse
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── argparse.js
+│   │   ├── lib
+│   │   │   ├── sub.js
+│   │   │   └── textwrap.js
+│   │   └── package.json
+│   ├── aria-query
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── ariaPropsMap.js
+│   │   │   ├── domMap.js
+│   │   │   ├── elementRoleMap.js
+│   │   │   ├── etc
+│   │   │   ├── index.js
+│   │   │   ├── roleElementMap.js
+│   │   │   ├── rolesMap.js
+│   │   │   └── util
+│   │   └── package.json
+│   ├── array-buffer-byte-length
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── array-includes
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── array.prototype.findlast
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── array.prototype.findlastindex
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── array.prototype.flat
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── array.prototype.flatmap
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── array.prototype.tosorted
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── arraybuffer.prototype.slice
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── ast-types-flow
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   └── types.js
+│   │   └── package.json
+│   ├── async-function
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.mts
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── index.mjs
+│   │   ├── legacy.js
+│   │   ├── package.json
+│   │   ├── require.mjs
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── available-typed-arrays
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── axe-core
+│   │   ├── LICENSE
+│   │   ├── LICENSE-3RD-PARTY.txt
+│   │   ├── README.md
+│   │   ├── axe.d.ts
+│   │   ├── axe.js
+│   │   ├── axe.min.js
+│   │   ├── locales
+│   │   │   ├── README.md
+│   │   │   ├── _template.json
+│   │   │   ├── da.json
+│   │   │   ├── de.json
+│   │   │   ├── el.json
+│   │   │   ├── es.json
+│   │   │   ├── eu.json
+│   │   │   ├── fr.json
+│   │   │   ├── he.json
+│   │   │   ├── it.json
+│   │   │   ├── ja.json
+│   │   │   ├── ko.json
+│   │   │   ├── nl.json
+│   │   │   ├── no_NB.json
+│   │   │   ├── pl.json
+│   │   │   ├── pt_BR.json
+│   │   │   ├── zh_CN.json
+│   │   │   └── zh_TW.json
+│   │   ├── package.json
+│   │   └── sri-history.json
+│   ├── axobject-query
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── AXObjectElementMap.js
+│   │   │   ├── AXObjectRoleMap.js
+│   │   │   ├── AXObjectsMap.js
+│   │   │   ├── elementAXObjectMap.js
+│   │   │   ├── etc
+│   │   │   ├── index.js
+│   │   │   └── util
+│   │   └── package.json
+│   ├── balanced-match
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── boolbase
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── brace-expansion
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── braces
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── compile.js
+│   │   │   ├── constants.js
+│   │   │   ├── expand.js
+│   │   │   ├── parse.js
+│   │   │   ├── stringify.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── call-bind
+│   │   ├── .eslintignore
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── callBound.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── callBound.js
+│   │       └── index.js
+│   ├── call-bind-apply-helpers
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── actualApply.d.ts
+│   │   ├── actualApply.js
+│   │   ├── applyBind.d.ts
+│   │   ├── applyBind.js
+│   │   ├── functionApply.d.ts
+│   │   ├── functionApply.js
+│   │   ├── functionCall.d.ts
+│   │   ├── functionCall.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── reflectApply.d.ts
+│   │   ├── reflectApply.js
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── call-bound
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── callsites
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── caniuse-lite
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── data
+│   │   │   ├── agents.js
+│   │   │   ├── browserVersions.js
+│   │   │   ├── browsers.js
+│   │   │   ├── features
+│   │   │   ├── features.js
+│   │   │   └── regions
+│   │   ├── dist
+│   │   │   ├── lib
+│   │   │   └── unpacker
+│   │   └── package.json
+│   ├── chalk
+│   │   ├── index.d.ts
+│   │   ├── license
+│   │   ├── package.json
+│   │   ├── readme.md
+│   │   └── source
+│   │       ├── index.js
+│   │       ├── templates.js
+│   │       └── util.js
+│   ├── cheerio
+│   │   ├── LICENSE
+│   │   ├── Readme.md
+│   │   ├── dist
+│   │   │   ├── browser
+│   │   │   ├── commonjs
+│   │   │   └── esm
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── __fixtures__
+│   │       ├── __tests__
+│   │       ├── api
+│   │       ├── cheerio.spec.ts
+│   │       ├── cheerio.ts
+│   │       ├── index-browser.mts
+│   │       ├── index.spec.ts
+│   │       ├── index.ts
+│   │       ├── load-parse.ts
+│   │       ├── load.spec.ts
+│   │       ├── load.ts
+│   │       ├── options.ts
+│   │       ├── parse.spec.ts
+│   │       ├── parse.ts
+│   │       ├── parsers
+│   │       ├── slim.ts
+│   │       ├── static.spec.ts
+│   │       ├── static.ts
+│   │       ├── types.ts
+│   │       ├── utils.spec.ts
+│   │       └── utils.ts
+│   ├── cheerio-select
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── esm
+│   │   │   ├── helpers.d.ts
+│   │   │   ├── helpers.d.ts.map
+│   │   │   ├── helpers.js
+│   │   │   ├── helpers.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── positionals.d.ts
+│   │   │   ├── positionals.d.ts.map
+│   │   │   ├── positionals.js
+│   │   │   └── positionals.js.map
+│   │   └── package.json
+│   ├── client-only
+│   │   ├── error.js
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── color
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── color-convert
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── conversions.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── route.js
+│   ├── color-name
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── color-string
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── concat-map
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.markdown
+│   │   ├── example
+│   │   │   └── map.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── map.js
+│   ├── cross-spawn
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── enoent.js
+│   │   │   ├── parse.js
+│   │   │   └── util
+│   │   └── package.json
+│   ├── css-select
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── attributes.d.ts
+│   │   │   ├── attributes.d.ts.map
+│   │   │   ├── attributes.js
+│   │   │   ├── attributes.js.map
+│   │   │   ├── compile.d.ts
+│   │   │   ├── compile.d.ts.map
+│   │   │   ├── compile.js
+│   │   │   ├── compile.js.map
+│   │   │   ├── esm
+│   │   │   ├── general.d.ts
+│   │   │   ├── general.d.ts.map
+│   │   │   ├── general.js
+│   │   │   ├── general.js.map
+│   │   │   ├── helpers
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── pseudo-selectors
+│   │   │   ├── sort.d.ts
+│   │   │   ├── sort.d.ts.map
+│   │   │   ├── sort.js
+│   │   │   ├── sort.js.map
+│   │   │   ├── types.d.ts
+│   │   │   ├── types.d.ts.map
+│   │   │   ├── types.js
+│   │   │   └── types.js.map
+│   │   └── package.json
+│   ├── css-what
+│   │   ├── LICENSE
+│   │   ├── lib
+│   │   │   ├── commonjs
+│   │   │   └── es
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── cssstyle
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── CSSStyleDeclaration.js
+│   │   │   ├── allExtraProperties.js
+│   │   │   ├── allWebkitProperties.js
+│   │   │   ├── generated
+│   │   │   ├── parsers.js
+│   │   │   ├── properties
+│   │   │   └── utils
+│   │   └── package.json
+│   ├── csstype
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js.flow
+│   │   └── package.json
+│   ├── damerau-levenshtein
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── scripts
+│   │   │   └── update-changelog.sh
+│   │   └── test
+│   │       └── test.js
+│   ├── data-urls
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── parser.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── data-view-buffer
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── data-view-byte-length
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── data-view-byte-offset
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── debug
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── browser.js
+│   │       ├── common.js
+│   │       ├── index.js
+│   │       └── node.js
+│   ├── decimal.js
+│   │   ├── LICENCE.md
+│   │   ├── README.md
+│   │   ├── decimal.d.ts
+│   │   ├── decimal.js
+│   │   ├── decimal.mjs
+│   │   └── package.json
+│   ├── deep-is
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.markdown
+│   │   ├── example
+│   │   │   └── cmp.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── NaN.js
+│   │       ├── cmp.js
+│   │       └── neg-vs-pos-0.js
+│   ├── define-data-property
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── define-properties
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── detect-libc
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── lib
+│   │   │   ├── detect-libc.js
+│   │   │   ├── filesystem.js
+│   │   │   └── process.js
+│   │   └── package.json
+│   ├── doctrine
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── LICENSE.closure-compiler
+│   │   ├── LICENSE.esprima
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── doctrine.js
+│   │   │   ├── typed.js
+│   │   │   └── utility.js
+│   │   └── package.json
+│   ├── dom-serializer
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── esm
+│   │   │   ├── foreignNames.d.ts
+│   │   │   ├── foreignNames.d.ts.map
+│   │   │   ├── foreignNames.js
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── domelementtype
+│   │   ├── LICENSE
+│   │   ├── lib
+│   │   │   ├── esm
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   └── index.js
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── domhandler
+│   │   ├── LICENSE
+│   │   ├── lib
+│   │   │   ├── esm
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── node.d.ts
+│   │   │   ├── node.d.ts.map
+│   │   │   └── node.js
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── domutils
+│   │   ├── LICENSE
+│   │   ├── lib
+│   │   │   ├── esm
+│   │   │   ├── feeds.d.ts
+│   │   │   ├── feeds.d.ts.map
+│   │   │   ├── feeds.js
+│   │   │   ├── feeds.js.map
+│   │   │   ├── helpers.d.ts
+│   │   │   ├── helpers.d.ts.map
+│   │   │   ├── helpers.js
+│   │   │   ├── helpers.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── legacy.d.ts
+│   │   │   ├── legacy.d.ts.map
+│   │   │   ├── legacy.js
+│   │   │   ├── legacy.js.map
+│   │   │   ├── manipulation.d.ts
+│   │   │   ├── manipulation.d.ts.map
+│   │   │   ├── manipulation.js
+│   │   │   ├── manipulation.js.map
+│   │   │   ├── querying.d.ts
+│   │   │   ├── querying.d.ts.map
+│   │   │   ├── querying.js
+│   │   │   ├── querying.js.map
+│   │   │   ├── stringify.d.ts
+│   │   │   ├── stringify.d.ts.map
+│   │   │   ├── stringify.js
+│   │   │   ├── stringify.js.map
+│   │   │   ├── traversal.d.ts
+│   │   │   ├── traversal.d.ts.map
+│   │   │   ├── traversal.js
+│   │   │   └── traversal.js.map
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── dotenv
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README-es.md
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── config.d.ts
+│   │   ├── config.js
+│   │   ├── lib
+│   │   │   ├── cli-options.js
+│   │   │   ├── env-options.js
+│   │   │   ├── main.d.ts
+│   │   │   └── main.js
+│   │   └── package.json
+│   ├── dunder-proto
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── get.d.ts
+│   │   ├── get.js
+│   │   ├── package.json
+│   │   ├── set.d.ts
+│   │   ├── set.js
+│   │   ├── test
+│   │   │   ├── get.js
+│   │   │   ├── index.js
+│   │   │   └── set.js
+│   │   └── tsconfig.json
+│   ├── emoji-regex
+│   │   ├── LICENSE-MIT.txt
+│   │   ├── README.md
+│   │   ├── RGI_Emoji.d.ts
+│   │   ├── RGI_Emoji.js
+│   │   ├── es2015
+│   │   │   ├── RGI_Emoji.d.ts
+│   │   │   ├── RGI_Emoji.js
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── text.d.ts
+│   │   │   └── text.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── text.d.ts
+│   │   └── text.js
+│   ├── encoding-sniffer
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── commonjs
+│   │   │   └── esm
+│   │   ├── package.json
+│   │   ├── sniffer.d.ts
+│   │   └── sniffer.js
+│   ├── entities
+│   │   ├── LICENSE
+│   │   ├── lib
+│   │   │   ├── decode.d.ts
+│   │   │   ├── decode.d.ts.map
+│   │   │   ├── decode.js
+│   │   │   ├── decode.js.map
+│   │   │   ├── decode_codepoint.d.ts
+│   │   │   ├── decode_codepoint.d.ts.map
+│   │   │   ├── decode_codepoint.js
+│   │   │   ├── decode_codepoint.js.map
+│   │   │   ├── encode.d.ts
+│   │   │   ├── encode.d.ts.map
+│   │   │   ├── encode.js
+│   │   │   ├── encode.js.map
+│   │   │   ├── escape.d.ts
+│   │   │   ├── escape.d.ts.map
+│   │   │   ├── escape.js
+│   │   │   ├── escape.js.map
+│   │   │   ├── esm
+│   │   │   ├── generated
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   └── index.js.map
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── es-abstract
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── 2015
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnNames.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyDescriptor.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── ObjectCreate.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetIndexProperty.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── Type.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2016
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnNames.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyDescriptor.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToArrayLike.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── ObjectCreate.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16Decode.js
+│   │   │   ├── UTF16Encoding.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2017
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnProperties.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyDescriptor.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── NumberToRawBytes.js
+│   │   │   ├── ObjectCreate.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumber.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16Decode.js
+│   │   │   ├── UTF16Encoding.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2018
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnPropertyNames.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStringPrefix.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── NumberToRawBytes.js
+│   │   │   ├── NumberToString.js
+│   │   │   ├── ObjectCreate.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumber.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16Decode.js
+│   │   │   ├── UTF16Encoding.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2019
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnPropertyNames.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStringPrefix.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── NumberToRawBytes.js
+│   │   │   ├── NumberToString.js
+│   │   │   ├── ObjectCreate.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumber.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16Decode.js
+│   │   │   ├── UTF16Encoding.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2020
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnPropertyNames.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsInteger.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsNonNegativeInteger.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStringPrefix.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumeric.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16DecodeString.js
+│   │   │   ├── UTF16DecodeSurrogatePair.js
+│   │   │   ├── UTF16Encoding.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── tables
+│   │   │   ├── thisBigIntValue.js
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2021
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AddToKeptObjects.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ApplyStringOrNumericBinaryOperator.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── ByteListBitwiseOp.js
+│   │   │   ├── ByteListEqual.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── ClearKeptObjects.js
+│   │   │   ├── CloneArrayBuffer.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CodePointsToString.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnPropertyNames.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPromiseResolve.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsIntegralNumber.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStringPrefix.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumeric.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetTypedArrayFromArrayLike.js
+│   │   │   ├── SetTypedArrayFromTypedArray.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── SplitMatch.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringIndexOf.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── StringToCodePoints.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToIntegerOrInfinity.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16EncodeCodePoint.js
+│   │   │   ├── UTF16SurrogatePairToCodePoint.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateIntegerTypedArray.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeakRefDeref.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── clamp.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── substring.js
+│   │   │   ├── tables
+│   │   │   ├── thisBigIntValue.js
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2022
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AddToKeptObjects.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ApplyStringOrNumericBinaryOperator.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── ByteListBitwiseOp.js
+│   │   │   ├── ByteListEqual.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── ClearKeptObjects.js
+│   │   │   ├── CloneArrayBuffer.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CodePointsToString.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── CreateNonEnumerableDataPropertyOrThrow.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefineMethodProperty.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnPropertyNames.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetMatchIndexPair.js
+│   │   │   ├── GetMatchString.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPromiseResolve.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetStringIndex.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstallErrorCause.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsIntegralNumber.js
+│   │   │   ├── IsLessThan.js
+│   │   │   ├── IsLooselyEqual.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStrictlyEqual.js
+│   │   │   ├── IsStringPrefix.js
+│   │   │   ├── IsStringWellFormedUnicode.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IterableToList.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeMatchIndicesIndexPairArray.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RegExpHasFlag.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumeric.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetTypedArrayFromArrayLike.js
+│   │   │   ├── SetTypedArrayFromTypedArray.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SortIndexedProperties.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringIndexOf.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── StringToCodePoints.js
+│   │   │   ├── StringToNumber.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToIntegerOrInfinity.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── ToZeroPaddedDecimalString.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArrayElementSize.js
+│   │   │   ├── TypedArrayElementType.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16EncodeCodePoint.js
+│   │   │   ├── UTF16SurrogatePairToCodePoint.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateIntegerTypedArray.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeakRefDeref.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── clamp.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── substring.js
+│   │   │   ├── tables
+│   │   │   ├── thisBigIntValue.js
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   └── thisTimeValue.js
+│   │   ├── 2023
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AddToKeptObjects.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── ApplyStringOrNumericBinaryOperator.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── ByteListBitwiseOp.js
+│   │   │   ├── ByteListEqual.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanBeHeldWeakly.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── ClearKeptObjects.js
+│   │   │   ├── CloneArrayBuffer.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CodePointsToString.js
+│   │   │   ├── CompareArrayElements.js
+│   │   │   ├── CompareTypedArrayElements.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateMethodProperty.js
+│   │   │   ├── CreateNonEnumerableDataPropertyOrThrow.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefaultTimeZone.js
+│   │   │   ├── DefineMethodProperty.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnProperties.js
+│   │   │   ├── FindViaPredicate.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetIteratorFromMethod.js
+│   │   │   ├── GetMatchIndexPair.js
+│   │   │   ├── GetMatchString.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetNamedTimeZoneEpochNanoseconds.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPromiseResolve.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetStringIndex.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetUTCEpochNanoseconds.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstallErrorCause.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── IntegerIndexedElementGet.js
+│   │   │   ├── IntegerIndexedElementSet.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsIntegralNumber.js
+│   │   │   ├── IsLessThan.js
+│   │   │   ├── IsLooselyEqual.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStrictlyEqual.js
+│   │   │   ├── IsStringWellFormedUnicode.js
+│   │   │   ├── IsTimeZoneOffsetString.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorToList.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── KeyForSymbol.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeMatchIndicesIndexPairArray.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── ParseHexOctet.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RegExpHasFlag.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetTypedArrayFromArrayLike.js
+│   │   │   ├── SetTypedArrayFromTypedArray.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SortIndexedProperties.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringIndexOf.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── StringToCodePoints.js
+│   │   │   ├── StringToNumber.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToIntegerOrInfinity.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── ToZeroPaddedDecimalString.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayCreate.js
+│   │   │   ├── TypedArrayCreateSameType.js
+│   │   │   ├── TypedArrayElementSize.js
+│   │   │   ├── TypedArrayElementType.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16EncodeCodePoint.js
+│   │   │   ├── UTF16SurrogatePairToCodePoint.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateIntegerTypedArray.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeakRefDeref.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── clamp.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── substring.js
+│   │   │   ├── tables
+│   │   │   ├── thisBigIntValue.js
+│   │   │   ├── thisBooleanValue.js
+│   │   │   ├── thisNumberValue.js
+│   │   │   ├── thisStringValue.js
+│   │   │   ├── thisSymbolValue.js
+│   │   │   ├── thisTimeValue.js
+│   │   │   └── truncate.js
+│   │   ├── 2024
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AddToKeptObjects.js
+│   │   │   ├── AddValueToKeyedGroup.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── AllCharacters.js
+│   │   │   ├── ApplyStringOrNumericBinaryOperator.js
+│   │   │   ├── ArrayBufferByteLength.js
+│   │   │   ├── ArrayBufferCopyAndDetach.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── ByteListBitwiseOp.js
+│   │   │   ├── ByteListEqual.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanBeHeldWeakly.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CharacterComplement.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── ClearKeptObjects.js
+│   │   │   ├── CloneArrayBuffer.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CodePointsToString.js
+│   │   │   ├── CompareArrayElements.js
+│   │   │   ├── CompareTypedArrayElements.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIterResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateNonEnumerableDataPropertyOrThrow.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefineMethodProperty.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EnumerableOwnProperties.js
+│   │   │   ├── FindViaPredicate.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetArrayBufferMaxByteLengthOption.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetIteratorFromMethod.js
+│   │   │   ├── GetMatchIndexPair.js
+│   │   │   ├── GetMatchString.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetNamedTimeZoneEpochNanoseconds.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPromiseResolve.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetStringIndex.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetUTCEpochNanoseconds.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── GetViewByteLength.js
+│   │   │   ├── GroupBy.js
+│   │   │   ├── HasEitherUnicodeFlag.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstallErrorCause.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsArrayBufferViewOutOfBounds.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsFixedLengthArrayBuffer.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsIntegralNumber.js
+│   │   │   ├── IsLessThan.js
+│   │   │   ├── IsLooselyEqual.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsPropertyKey.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStrictlyEqual.js
+│   │   │   ├── IsStringWellFormedUnicode.js
+│   │   │   ├── IsTimeZoneOffsetString.js
+│   │   │   ├── IsTypedArrayOutOfBounds.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsViewOutOfBounds.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorStepValue.js
+│   │   │   ├── IteratorToList.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── KeyForSymbol.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDataViewWithBufferWitnessRecord.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeFullYear.js
+│   │   │   ├── MakeMatchIndicesIndexPairArray.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MakeTypedArrayWithBufferWitnessRecord.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── ParseHexOctet.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RegExpHasFlag.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetTypedArrayFromArrayLike.js
+│   │   │   ├── SetTypedArrayFromTypedArray.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SortIndexedProperties.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringIndexOf.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringPaddingBuiltinsImpl.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── StringToCodePoints.js
+│   │   │   ├── StringToNumber.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── SystemTimeZoneIdentifier.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThisBigIntValue.js
+│   │   │   ├── ThisBooleanValue.js
+│   │   │   ├── ThisNumberValue.js
+│   │   │   ├── ThisStringValue.js
+│   │   │   ├── ThisSymbolValue.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToIntegerOrInfinity.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── ToZeroPaddedDecimalString.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── Type.js
+│   │   │   ├── TypedArrayByteLength.js
+│   │   │   ├── TypedArrayCreateFromConstructor.js
+│   │   │   ├── TypedArrayCreateSameType.js
+│   │   │   ├── TypedArrayElementSize.js
+│   │   │   ├── TypedArrayElementType.js
+│   │   │   ├── TypedArrayGetElement.js
+│   │   │   ├── TypedArrayLength.js
+│   │   │   ├── TypedArraySetElement.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16EncodeCodePoint.js
+│   │   │   ├── UTF16SurrogatePairToCodePoint.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateAtomicAccessOnIntegerTypedArray.js
+│   │   │   ├── ValidateIntegerTypedArray.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeakRefDeref.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── clamp.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── substring.js
+│   │   │   ├── tables
+│   │   │   └── truncate.js
+│   │   ├── 2025
+│   │   │   ├── AddEntriesFromIterable.js
+│   │   │   ├── AddToKeptObjects.js
+│   │   │   ├── AddValueToKeyedGroup.js
+│   │   │   ├── AdvanceStringIndex.js
+│   │   │   ├── AllCharacters.js
+│   │   │   ├── ApplyStringOrNumericBinaryOperator.js
+│   │   │   ├── ArrayBufferByteLength.js
+│   │   │   ├── ArrayBufferCopyAndDetach.js
+│   │   │   ├── ArrayCreate.js
+│   │   │   ├── ArraySetLength.js
+│   │   │   ├── ArraySpeciesCreate.js
+│   │   │   ├── AsyncFromSyncIteratorContinuation.js
+│   │   │   ├── AsyncIteratorClose.js
+│   │   │   ├── BigInt
+│   │   │   ├── BigIntBitwiseOp.js
+│   │   │   ├── BinaryAnd.js
+│   │   │   ├── BinaryOr.js
+│   │   │   ├── BinaryXor.js
+│   │   │   ├── ByteListBitwiseOp.js
+│   │   │   ├── ByteListEqual.js
+│   │   │   ├── Call.js
+│   │   │   ├── CanBeHeldWeakly.js
+│   │   │   ├── CanonicalNumericIndexString.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CanonicalizeKeyedCollectionKey.js
+│   │   │   ├── CharacterComplement.js
+│   │   │   ├── CharacterRange.js
+│   │   │   ├── ClearKeptObjects.js
+│   │   │   ├── CloneArrayBuffer.js
+│   │   │   ├── CodePointAt.js
+│   │   │   ├── CodePointsToString.js
+│   │   │   ├── CompareArrayElements.js
+│   │   │   ├── CompareTypedArrayElements.js
+│   │   │   ├── CompletePropertyDescriptor.js
+│   │   │   ├── CompletionRecord.js
+│   │   │   ├── CopyDataProperties.js
+│   │   │   ├── CreateAsyncFromSyncIterator.js
+│   │   │   ├── CreateDataProperty.js
+│   │   │   ├── CreateDataPropertyOrThrow.js
+│   │   │   ├── CreateHTML.js
+│   │   │   ├── CreateIteratorFromClosure.js
+│   │   │   ├── CreateIteratorResultObject.js
+│   │   │   ├── CreateListFromArrayLike.js
+│   │   │   ├── CreateNonEnumerableDataPropertyOrThrow.js
+│   │   │   ├── CreateRegExpStringIterator.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── DateString.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── DefineMethodProperty.js
+│   │   │   ├── DefinePropertyOrThrow.js
+│   │   │   ├── DeletePropertyOrThrow.js
+│   │   │   ├── DetachArrayBuffer.js
+│   │   │   ├── EncodeForRegExpEscape.js
+│   │   │   ├── EnumerableOwnProperties.js
+│   │   │   ├── FindViaPredicate.js
+│   │   │   ├── FlattenIntoArray.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── GeneratorResume.js
+│   │   │   ├── GeneratorResumeAbrupt.js
+│   │   │   ├── GeneratorStart.js
+│   │   │   ├── GeneratorValidate.js
+│   │   │   ├── Get.js
+│   │   │   ├── GetArrayBufferMaxByteLengthOption.js
+│   │   │   ├── GetGlobalObject.js
+│   │   │   ├── GetIterator.js
+│   │   │   ├── GetIteratorDirect.js
+│   │   │   ├── GetIteratorFlattenable.js
+│   │   │   ├── GetIteratorFromMethod.js
+│   │   │   ├── GetMatchIndexPair.js
+│   │   │   ├── GetMatchString.js
+│   │   │   ├── GetMethod.js
+│   │   │   ├── GetNamedTimeZoneEpochNanoseconds.js
+│   │   │   ├── GetOwnPropertyKeys.js
+│   │   │   ├── GetPromiseResolve.js
+│   │   │   ├── GetPrototypeFromConstructor.js
+│   │   │   ├── GetSetRecord.js
+│   │   │   ├── GetStringIndex.js
+│   │   │   ├── GetSubstitution.js
+│   │   │   ├── GetUTCEpochNanoseconds.js
+│   │   │   ├── GetV.js
+│   │   │   ├── GetValueFromBuffer.js
+│   │   │   ├── GetViewByteLength.js
+│   │   │   ├── GroupBy.js
+│   │   │   ├── HasEitherUnicodeFlag.js
+│   │   │   ├── HasOwnProperty.js
+│   │   │   ├── HasProperty.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── IfAbruptCloseIterator.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── InstallErrorCause.js
+│   │   │   ├── InstanceofOperator.js
+│   │   │   ├── InternalizeJSONProperty.js
+│   │   │   ├── Invoke.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── IsArrayBufferViewOutOfBounds.js
+│   │   │   ├── IsBigIntElementType.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsCompatiblePropertyDescriptor.js
+│   │   │   ├── IsConcatSpreadable.js
+│   │   │   ├── IsConstructor.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsDetachedBuffer.js
+│   │   │   ├── IsExtensible.js
+│   │   │   ├── IsFixedLengthArrayBuffer.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsLessThan.js
+│   │   │   ├── IsLooselyEqual.js
+│   │   │   ├── IsNoTearConfiguration.js
+│   │   │   ├── IsPromise.js
+│   │   │   ├── IsRegExp.js
+│   │   │   ├── IsSharedArrayBuffer.js
+│   │   │   ├── IsStrictlyEqual.js
+│   │   │   ├── IsStringWellFormedUnicode.js
+│   │   │   ├── IsTimeZoneOffsetString.js
+│   │   │   ├── IsTypedArrayFixedLength.js
+│   │   │   ├── IsTypedArrayOutOfBounds.js
+│   │   │   ├── IsUnclampedIntegerElementType.js
+│   │   │   ├── IsUnsignedElementType.js
+│   │   │   ├── IsValidIntegerIndex.js
+│   │   │   ├── IsViewOutOfBounds.js
+│   │   │   ├── IsWordChar.js
+│   │   │   ├── IteratorClose.js
+│   │   │   ├── IteratorComplete.js
+│   │   │   ├── IteratorNext.js
+│   │   │   ├── IteratorStep.js
+│   │   │   ├── IteratorStepValue.js
+│   │   │   ├── IteratorToList.js
+│   │   │   ├── IteratorValue.js
+│   │   │   ├── KeyForSymbol.js
+│   │   │   ├── LengthOfArrayLike.js
+│   │   │   ├── MakeDataViewWithBufferWitnessRecord.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeFullYear.js
+│   │   │   ├── MakeMatchIndicesIndexPairArray.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MakeTypedArrayWithBufferWitnessRecord.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── NewPromiseCapability.js
+│   │   │   ├── NormalCompletion.js
+│   │   │   ├── Number
+│   │   │   ├── NumberBitwiseOp.js
+│   │   │   ├── NumberToBigInt.js
+│   │   │   ├── NumericToRawBytes.js
+│   │   │   ├── ObjectDefineProperties.js
+│   │   │   ├── OrdinaryCreateFromConstructor.js
+│   │   │   ├── OrdinaryDefineOwnProperty.js
+│   │   │   ├── OrdinaryGetOwnProperty.js
+│   │   │   ├── OrdinaryGetPrototypeOf.js
+│   │   │   ├── OrdinaryHasInstance.js
+│   │   │   ├── OrdinaryHasProperty.js
+│   │   │   ├── OrdinaryObjectCreate.js
+│   │   │   ├── OrdinarySetPrototypeOf.js
+│   │   │   ├── OrdinaryToPrimitive.js
+│   │   │   ├── ParseHexOctet.js
+│   │   │   ├── PromiseResolve.js
+│   │   │   ├── QuoteJSONString.js
+│   │   │   ├── RawBytesToNumeric.js
+│   │   │   ├── RegExpCreate.js
+│   │   │   ├── RegExpExec.js
+│   │   │   ├── RegExpHasFlag.js
+│   │   │   ├── RequireObjectCoercible.js
+│   │   │   ├── ReturnCompletion.js
+│   │   │   ├── SameType.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SameValueNonNumber.js
+│   │   │   ├── SameValueZero.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── Set.js
+│   │   │   ├── SetDataHas.js
+│   │   │   ├── SetDataIndex.js
+│   │   │   ├── SetDataSize.js
+│   │   │   ├── SetFunctionLength.js
+│   │   │   ├── SetFunctionName.js
+│   │   │   ├── SetIntegrityLevel.js
+│   │   │   ├── SetTypedArrayFromArrayLike.js
+│   │   │   ├── SetTypedArrayFromTypedArray.js
+│   │   │   ├── SetValueInBuffer.js
+│   │   │   ├── SetterThatIgnoresPrototypeProperties.js
+│   │   │   ├── SortIndexedProperties.js
+│   │   │   ├── SpeciesConstructor.js
+│   │   │   ├── StringCreate.js
+│   │   │   ├── StringGetOwnProperty.js
+│   │   │   ├── StringIndexOf.js
+│   │   │   ├── StringLastIndexOf.js
+│   │   │   ├── StringPad.js
+│   │   │   ├── StringPaddingBuiltinsImpl.js
+│   │   │   ├── StringToBigInt.js
+│   │   │   ├── StringToCodePoints.js
+│   │   │   ├── StringToNumber.js
+│   │   │   ├── SymbolDescriptiveString.js
+│   │   │   ├── SystemTimeZoneIdentifier.js
+│   │   │   ├── TestIntegrityLevel.js
+│   │   │   ├── ThisBigIntValue.js
+│   │   │   ├── ThisBooleanValue.js
+│   │   │   ├── ThisNumberValue.js
+│   │   │   ├── ThisStringValue.js
+│   │   │   ├── ThisSymbolValue.js
+│   │   │   ├── ThrowCompletion.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeString.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── TimeZoneString.js
+│   │   │   ├── ToBigInt.js
+│   │   │   ├── ToBigInt64.js
+│   │   │   ├── ToBigUint64.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToDateString.js
+│   │   │   ├── ToIndex.js
+│   │   │   ├── ToInt16.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInt8.js
+│   │   │   ├── ToIntegerOrInfinity.js
+│   │   │   ├── ToLength.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToNumeric.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToPropertyKey.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── ToUint8.js
+│   │   │   ├── ToUint8Clamp.js
+│   │   │   ├── ToZeroPaddedDecimalString.js
+│   │   │   ├── TrimString.js
+│   │   │   ├── TypedArrayByteLength.js
+│   │   │   ├── TypedArrayCreateFromConstructor.js
+│   │   │   ├── TypedArrayCreateSameType.js
+│   │   │   ├── TypedArrayElementSize.js
+│   │   │   ├── TypedArrayElementType.js
+│   │   │   ├── TypedArrayGetElement.js
+│   │   │   ├── TypedArrayLength.js
+│   │   │   ├── TypedArraySetElement.js
+│   │   │   ├── TypedArraySpeciesCreate.js
+│   │   │   ├── UTF16EncodeCodePoint.js
+│   │   │   ├── UTF16SurrogatePairToCodePoint.js
+│   │   │   ├── UnicodeEscape.js
+│   │   │   ├── UpdateModifiers.js
+│   │   │   ├── ValidateAndApplyPropertyDescriptor.js
+│   │   │   ├── ValidateAtomicAccess.js
+│   │   │   ├── ValidateAtomicAccessOnIntegerTypedArray.js
+│   │   │   ├── ValidateIntegerTypedArray.js
+│   │   │   ├── ValidateTypedArray.js
+│   │   │   ├── WeakRefDeref.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── WordCharacters.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── clamp.js
+│   │   │   ├── floor.js
+│   │   │   ├── max.js
+│   │   │   ├── min.js
+│   │   │   ├── modulo.js
+│   │   │   ├── msFromTime.js
+│   │   │   ├── substring.js
+│   │   │   ├── tables
+│   │   │   └── truncate.js
+│   │   ├── 5
+│   │   │   ├── AbstractEqualityComparison.js
+│   │   │   ├── AbstractRelationalComparison.js
+│   │   │   ├── Canonicalize.js
+│   │   │   ├── CheckObjectCoercible.js
+│   │   │   ├── DateFromTime.js
+│   │   │   ├── Day.js
+│   │   │   ├── DayFromYear.js
+│   │   │   ├── DayWithinYear.js
+│   │   │   ├── DaysInYear.js
+│   │   │   ├── FromPropertyDescriptor.js
+│   │   │   ├── HourFromTime.js
+│   │   │   ├── InLeapYear.js
+│   │   │   ├── IsAccessorDescriptor.js
+│   │   │   ├── IsCallable.js
+│   │   │   ├── IsDataDescriptor.js
+│   │   │   ├── IsGenericDescriptor.js
+│   │   │   ├── IsPropertyDescriptor.js
+│   │   │   ├── MakeDate.js
+│   │   │   ├── MakeDay.js
+│   │   │   ├── MakeTime.js
+│   │   │   ├── MinFromTime.js
+│   │   │   ├── MonthFromTime.js
+│   │   │   ├── SameValue.js
+│   │   │   ├── SecFromTime.js
+│   │   │   ├── StrictEqualityComparison.js
+│   │   │   ├── TimeClip.js
+│   │   │   ├── TimeFromYear.js
+│   │   │   ├── TimeWithinDay.js
+│   │   │   ├── ToBoolean.js
+│   │   │   ├── ToInt32.js
+│   │   │   ├── ToInteger.js
+│   │   │   ├── ToNumber.js
+│   │   │   ├── ToObject.js
+│   │   │   ├── ToPrimitive.js
+│   │   │   ├── ToPropertyDescriptor.js
+│   │   │   ├── ToString.js
+│   │   │   ├── ToUint16.js
+│   │   │   ├── ToUint32.js
+│   │   │   ├── Type.js
+│   │   │   ├── WeekDay.js
+│   │   │   ├── YearFromTime.js
+│   │   │   ├── abs.js
+│   │   │   ├── floor.js
+│   │   │   ├── modulo.js
+│   │   │   └── msFromTime.js
+│   │   ├── CHANGELOG.md
+│   │   ├── GetIntrinsic.js
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── es2015.js
+│   │   ├── es2016.js
+│   │   ├── es2017.js
+│   │   ├── es2018.js
+│   │   ├── es2019.js
+│   │   ├── es2020.js
+│   │   ├── es2021.js
+│   │   ├── es2022.js
+│   │   ├── es2023.js
+│   │   ├── es2024.js
+│   │   ├── es2025.js
+│   │   ├── es5.js
+│   │   ├── es6.js
+│   │   ├── es7.js
+│   │   ├── helpers
+│   │   │   ├── CharSet.js
+│   │   │   ├── DefineOwnProperty.js
+│   │   │   ├── IsArray.js
+│   │   │   ├── OwnPropertyKeys.js
+│   │   │   ├── assertRecord.js
+│   │   │   ├── assign.js
+│   │   │   ├── bytesAsFloat16.js
+│   │   │   ├── bytesAsFloat32.js
+│   │   │   ├── bytesAsFloat64.js
+│   │   │   ├── bytesAsInteger.js
+│   │   │   ├── callBind.js
+│   │   │   ├── callBound.js
+│   │   │   ├── caseFolding.json
+│   │   │   ├── defaultEndianness.js
+│   │   │   ├── every.js
+│   │   │   ├── forEach.js
+│   │   │   ├── fractionToBinaryString.js
+│   │   │   ├── fromPropertyDescriptor.js
+│   │   │   ├── getInferredName.js
+│   │   │   ├── getIteratorMethod.js
+│   │   │   ├── getOwnPropertyDescriptor.js
+│   │   │   ├── getProto.js
+│   │   │   ├── getSymbolDescription.js
+│   │   │   ├── intToBinaryString.js
+│   │   │   ├── integerToNBytes.js
+│   │   │   ├── isAbstractClosure.js
+│   │   │   ├── isByteValue.js
+│   │   │   ├── isCodePoint.js
+│   │   │   ├── isFinite.js
+│   │   │   ├── isFullyPopulatedPropertyDescriptor.js
+│   │   │   ├── isInteger.js
+│   │   │   ├── isLeadingSurrogate.js
+│   │   │   ├── isLineTerminator.js
+│   │   │   ├── isNaN.js
+│   │   │   ├── isNegativeZero.js
+│   │   │   ├── isObject.js
+│   │   │   ├── isPrefixOf.js
+│   │   │   ├── isPrimitive.js
+│   │   │   ├── isPropertyKey.js
+│   │   │   ├── isSamePropertyDescriptor.js
+│   │   │   ├── isSameType.js
+│   │   │   ├── isStringOrHole.js
+│   │   │   ├── isStringOrUndefined.js
+│   │   │   ├── isTrailingSurrogate.js
+│   │   │   ├── maxSafeInteger.js
+│   │   │   ├── maxValue.js
+│   │   │   ├── mod.js
+│   │   │   ├── modBigInt.js
+│   │   │   ├── padTimeComponent.js
+│   │   │   ├── records
+│   │   │   ├── reduce.js
+│   │   │   ├── regexTester.js
+│   │   │   ├── setProto.js
+│   │   │   ├── sign.js
+│   │   │   ├── some.js
+│   │   │   ├── timeConstants.js
+│   │   │   ├── timeValue.js
+│   │   │   ├── typedArrayConstructors.js
+│   │   │   ├── valueToFloat16Bytes.js
+│   │   │   ├── valueToFloat32Bytes.js
+│   │   │   └── valueToFloat64Bytes.js
+│   │   ├── index.js
+│   │   ├── operations
+│   │   │   ├── 2015.js
+│   │   │   ├── 2016.js
+│   │   │   ├── 2017.js
+│   │   │   ├── 2018.js
+│   │   │   ├── 2019.js
+│   │   │   ├── 2020.js
+│   │   │   ├── 2021.js
+│   │   │   ├── 2022.js
+│   │   │   ├── 2023.js
+│   │   │   ├── 2024.js
+│   │   │   ├── 2025.js
+│   │   │   └── es5.js
+│   │   └── package.json
+│   ├── es-define-property
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── es-errors
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── eval.d.ts
+│   │   ├── eval.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── range.d.ts
+│   │   ├── range.js
+│   │   ├── ref.d.ts
+│   │   ├── ref.js
+│   │   ├── syntax.d.ts
+│   │   ├── syntax.js
+│   │   ├── test
+│   │   │   └── index.js
+│   │   ├── tsconfig.json
+│   │   ├── type.d.ts
+│   │   ├── type.js
+│   │   ├── uri.d.ts
+│   │   └── uri.js
+│   ├── es-iterator-helpers
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── Iterator
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.concat
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.from
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.constructor
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.drop
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.every
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.filter
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.find
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.flatMap
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.forEach
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.map
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.reduce
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.some
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.take
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.prototype.toArray
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.zip
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── Iterator.zipKeyed
+│   │   │   ├── auto.js
+│   │   │   ├── implementation.js
+│   │   │   ├── index.js
+│   │   │   ├── polyfill.js
+│   │   │   └── shim.js
+│   │   ├── IteratorHelperPrototype
+│   │   │   └── index.js
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── WrapForValidIteratorPrototype
+│   │   │   └── index.js
+│   │   ├── aos
+│   │   │   ├── CreateIteratorFromClosure.js
+│   │   │   ├── GeneratorResume.js
+│   │   │   ├── GeneratorResumeAbrupt.js
+│   │   │   ├── GeneratorStart.js
+│   │   │   ├── GeneratorValidate.js
+│   │   │   ├── GetIteratorDirect.js
+│   │   │   ├── GetIteratorFlattenable.js
+│   │   │   ├── GetOptionsObject.js
+│   │   │   ├── IfAbruptCloseIterators.js
+│   │   │   ├── IteratorCloseAll.js
+│   │   │   ├── IteratorZip.js
+│   │   │   └── ReturnCompletion.js
+│   │   ├── auto.js
+│   │   ├── index.json
+│   │   ├── package.json
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── Iterator.concat.js
+│   │       ├── Iterator.from.js
+│   │       ├── Iterator.js
+│   │       ├── Iterator.prototype.constructor.js
+│   │       ├── Iterator.prototype.drop.js
+│   │       ├── Iterator.prototype.every.js
+│   │       ├── Iterator.prototype.filter.js
+│   │       ├── Iterator.prototype.find.js
+│   │       ├── Iterator.prototype.flatMap.js
+│   │       ├── Iterator.prototype.forEach.js
+│   │       ├── Iterator.prototype.js
+│   │       ├── Iterator.prototype.map.js
+│   │       ├── Iterator.prototype.reduce.js
+│   │       ├── Iterator.prototype.some.js
+│   │       ├── Iterator.prototype.take.js
+│   │       ├── Iterator.prototype.toArray.js
+│   │       ├── Iterator.zip.js
+│   │       ├── Iterator.zipKeyed.js
+│   │       ├── helpers
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── es-object-atoms
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── RequireObjectCoercible.d.ts
+│   │   ├── RequireObjectCoercible.js
+│   │   ├── ToObject.d.ts
+│   │   ├── ToObject.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── isObject.d.ts
+│   │   ├── isObject.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── es-set-tostringtag
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── es-shim-unscopables
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   ├── index.js
+│   │   │   └── with.js
+│   │   └── tsconfig.json
+│   ├── es-to-primitive
+│   │   ├── .editorconfig
+│   │   ├── .eslintignore
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── es2015.d.ts
+│   │   ├── es2015.js
+│   │   ├── es5.d.ts
+│   │   ├── es5.js
+│   │   ├── es6.d.ts
+│   │   ├── es6.js
+│   │   ├── helpers
+│   │   │   └── isPrimitive.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   ├── es2015.js
+│   │   │   ├── es5.js
+│   │   │   ├── es6.js
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── escape-string-regexp
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── eslint
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── eslint.js
+│   │   ├── conf
+│   │   │   ├── default-cli-options.js
+│   │   │   ├── ecma-version.js
+│   │   │   ├── globals.js
+│   │   │   ├── replacements.json
+│   │   │   └── rule-type-list.json
+│   │   ├── lib
+│   │   │   ├── api.js
+│   │   │   ├── cli-engine
+│   │   │   ├── cli.js
+│   │   │   ├── config
+│   │   │   ├── config-api.js
+│   │   │   ├── eslint
+│   │   │   ├── languages
+│   │   │   ├── linter
+│   │   │   ├── options.js
+│   │   │   ├── rule-tester
+│   │   │   ├── rules
+│   │   │   ├── services
+│   │   │   ├── shared
+│   │   │   ├── types
+│   │   │   ├── universal.js
+│   │   │   └── unsupported-api.js
+│   │   ├── messages
+│   │   │   ├── all-files-ignored.js
+│   │   │   ├── all-matched-files-ignored.js
+│   │   │   ├── config-file-missing.js
+│   │   │   ├── config-plugin-missing.js
+│   │   │   ├── config-serialize-function.js
+│   │   │   ├── eslintrc-incompat.js
+│   │   │   ├── eslintrc-plugins.js
+│   │   │   ├── extend-config-missing.js
+│   │   │   ├── failed-to-read-json.js
+│   │   │   ├── file-not-found.js
+│   │   │   ├── invalid-rule-options.js
+│   │   │   ├── invalid-rule-severity.js
+│   │   │   ├── no-config-found.js
+│   │   │   ├── plugin-conflict.js
+│   │   │   ├── plugin-invalid.js
+│   │   │   ├── plugin-missing.js
+│   │   │   ├── print-config-with-directory-path.js
+│   │   │   ├── shared.js
+│   │   │   └── whitespace-found.js
+│   │   └── package.json
+│   ├── eslint-config-next
+│   │   ├── core-web-vitals.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── parser.js
+│   │   └── typescript.js
+│   ├── eslint-import-resolver-node
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── node_modules
+│   │   │   └── debug
+│   │   └── package.json
+│   ├── eslint-import-resolver-typescript
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.es2020.mjs
+│   │   │   ├── index.js
+│   │   │   └── index.js.map
+│   │   └── package.json
+│   ├── eslint-module-utils
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── ModuleCache.d.ts
+│   │   ├── ModuleCache.js
+│   │   ├── contextCompat.d.ts
+│   │   ├── contextCompat.js
+│   │   ├── declaredScope.d.ts
+│   │   ├── declaredScope.js
+│   │   ├── hash.d.ts
+│   │   ├── hash.js
+│   │   ├── ignore.d.ts
+│   │   ├── ignore.js
+│   │   ├── module-require.d.ts
+│   │   ├── module-require.js
+│   │   ├── moduleVisitor.d.ts
+│   │   ├── moduleVisitor.js
+│   │   ├── node_modules
+│   │   │   └── debug
+│   │   ├── package.json
+│   │   ├── parse.d.ts
+│   │   ├── parse.js
+│   │   ├── pkgDir.d.ts
+│   │   ├── pkgDir.js
+│   │   ├── pkgUp.d.ts
+│   │   ├── pkgUp.js
+│   │   ├── readPkgUp.d.ts
+│   │   ├── readPkgUp.js
+│   │   ├── resolve.d.ts
+│   │   ├── resolve.js
+│   │   ├── tsconfig.json
+│   │   ├── types.d.ts
+│   │   ├── unambiguous.d.ts
+│   │   ├── unambiguous.js
+│   │   ├── visit.d.ts
+│   │   └── visit.js
+│   ├── eslint-plugin-import
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── config
+│   │   │   ├── electron.js
+│   │   │   ├── errors.js
+│   │   │   ├── flat
+│   │   │   ├── react-native.js
+│   │   │   ├── react.js
+│   │   │   ├── recommended.js
+│   │   │   ├── stage-0.js
+│   │   │   ├── typescript.js
+│   │   │   └── warnings.js
+│   │   ├── docs
+│   │   │   └── rules
+│   │   ├── index.d.ts
+│   │   ├── lib
+│   │   │   ├── core
+│   │   │   ├── docsUrl.js
+│   │   │   ├── exportMap
+│   │   │   ├── importDeclaration.js
+│   │   │   ├── index.js
+│   │   │   ├── rules
+│   │   │   └── scc.js
+│   │   ├── memo-parser
+│   │   │   ├── LICENSE
+│   │   │   ├── README.md
+│   │   │   └── index.js
+│   │   ├── node_modules
+│   │   │   ├── .bin
+│   │   │   ├── debug
+│   │   │   └── semver
+│   │   └── package.json
+│   ├── eslint-plugin-jsx-a11y
+│   │   ├── .babelrc
+│   │   ├── .eslintrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── __mocks__
+│   │   │   ├── IdentifierMock.js
+│   │   │   ├── JSXAttributeMock.js
+│   │   │   ├── JSXElementMock.js
+│   │   │   ├── JSXExpressionContainerMock.js
+│   │   │   ├── JSXSpreadAttributeMock.js
+│   │   │   ├── JSXTextMock.js
+│   │   │   ├── LiteralMock.js
+│   │   │   └── genInteractives.js
+│   │   ├── __tests__
+│   │   │   ├── __util__
+│   │   │   ├── index-test.js
+│   │   │   └── src
+│   │   ├── docs
+│   │   │   └── rules
+│   │   ├── lib
+│   │   │   ├── configs
+│   │   │   ├── index.js
+│   │   │   ├── rules
+│   │   │   └── util
+│   │   └── package.json
+│   ├── eslint-plugin-react
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── configs
+│   │   │   ├── all.js
+│   │   │   ├── jsx-runtime.js
+│   │   │   └── recommended.js
+│   │   ├── index.d.ts
+│   │   ├── index.d.ts.map
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── rules
+│   │   │   ├── types.d.ts
+│   │   │   └── util
+│   │   ├── node_modules
+│   │   │   ├── .bin
+│   │   │   ├── resolve
+│   │   │   └── semver
+│   │   └── package.json
+│   ├── eslint-plugin-react-hooks
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cjs
+│   │   │   ├── eslint-plugin-react-hooks.d.ts
+│   │   │   ├── eslint-plugin-react-hooks.development.js
+│   │   │   └── eslint-plugin-react-hooks.production.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── eslint-scope
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   └── eslint-scope.cjs
+│   │   ├── lib
+│   │   │   ├── assert.js
+│   │   │   ├── definition.js
+│   │   │   ├── index.js
+│   │   │   ├── pattern-visitor.js
+│   │   │   ├── reference.js
+│   │   │   ├── referencer.js
+│   │   │   ├── scope-manager.js
+│   │   │   ├── scope.js
+│   │   │   ├── variable.js
+│   │   │   └── version.js
+│   │   └── package.json
+│   ├── eslint-visitor-keys
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── eslint-visitor-keys.cjs
+│   │   │   ├── eslint-visitor-keys.d.cts
+│   │   │   ├── index.d.ts
+│   │   │   └── visitor-keys.d.ts
+│   │   ├── lib
+│   │   │   ├── index.js
+│   │   │   └── visitor-keys.js
+│   │   └── package.json
+│   ├── espree
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   └── espree.cjs
+│   │   ├── espree.js
+│   │   ├── lib
+│   │   │   ├── espree.js
+│   │   │   ├── features.js
+│   │   │   ├── options.js
+│   │   │   ├── token-translator.js
+│   │   │   └── version.js
+│   │   └── package.json
+│   ├── esprima
+│   │   ├── ChangeLog
+│   │   ├── LICENSE.BSD
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   ├── esparse.js
+│   │   │   └── esvalidate.js
+│   │   ├── dist
+│   │   │   └── esprima.js
+│   │   └── package.json
+│   ├── esquery
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── esquery.esm.js
+│   │   │   ├── esquery.esm.min.js
+│   │   │   ├── esquery.esm.min.js.map
+│   │   │   ├── esquery.js
+│   │   │   ├── esquery.lite.js
+│   │   │   ├── esquery.lite.min.js
+│   │   │   ├── esquery.lite.min.js.map
+│   │   │   ├── esquery.min.js
+│   │   │   └── esquery.min.js.map
+│   │   ├── license.txt
+│   │   ├── package.json
+│   │   └── parser.js
+│   ├── esrecurse
+│   │   ├── .babelrc
+│   │   ├── README.md
+│   │   ├── esrecurse.js
+│   │   ├── gulpfile.babel.js
+│   │   └── package.json
+│   ├── estraverse
+│   │   ├── .jshintrc
+│   │   ├── LICENSE.BSD
+│   │   ├── README.md
+│   │   ├── estraverse.js
+│   │   ├── gulpfile.js
+│   │   └── package.json
+│   ├── esutils
+│   │   ├── LICENSE.BSD
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── ast.js
+│   │   │   ├── code.js
+│   │   │   ├── keyword.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── extend-shallow
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── fast-deep-equal
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── es6
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── react.d.ts
+│   │   │   └── react.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── react.d.ts
+│   │   └── react.js
+│   ├── fast-glob
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── node_modules
+│   │   │   └── glob-parent
+│   │   ├── out
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── managers
+│   │   │   ├── providers
+│   │   │   ├── readers
+│   │   │   ├── settings.d.ts
+│   │   │   ├── settings.js
+│   │   │   ├── types
+│   │   │   └── utils
+│   │   └── package.json
+│   ├── fast-json-stable-stringify
+│   │   ├── .eslintrc.yml
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── benchmark
+│   │   │   ├── index.js
+│   │   │   └── test.json
+│   │   ├── example
+│   │   │   ├── key_cmp.js
+│   │   │   ├── nested.js
+│   │   │   ├── str.js
+│   │   │   └── value_cmp.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── cmp.js
+│   │       ├── nested.js
+│   │       ├── str.js
+│   │       └── to-json.js
+│   ├── fast-levenshtein
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── levenshtein.js
+│   │   └── package.json
+│   ├── fastq
+│   │   ├── .github
+│   │   │   ├── dependabot.yml
+│   │   │   └── workflows
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── bench.js
+│   │   ├── example.js
+│   │   ├── example.mjs
+│   │   ├── index.d.ts
+│   │   ├── package.json
+│   │   ├── queue.js
+│   │   └── test
+│   │       ├── example.ts
+│   │       ├── promise.js
+│   │       ├── test.js
+│   │       └── tsconfig.json
+│   ├── file-entry-cache
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cache.js
+│   │   └── package.json
+│   ├── fill-range
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── find-up
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── flat-cache
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── changelog.md
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── cache.js
+│   │       ├── del.js
+│   │       └── utils.js
+│   ├── flatted
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cjs
+│   │   │   ├── index.js
+│   │   │   └── package.json
+│   │   ├── es.js
+│   │   ├── esm
+│   │   │   └── index.js
+│   │   ├── esm.js
+│   │   ├── index.js
+│   │   ├── min.js
+│   │   ├── package.json
+│   │   ├── php
+│   │   │   └── flatted.php
+│   │   ├── python
+│   │   │   └── flatted.py
+│   │   └── types
+│   │       └── index.d.ts
+│   ├── for-each
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   ├── FUNDING.yml
+│   │   │   └── SECURITY.md
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── test.js
+│   │   └── tsconfig.json
+│   ├── function-bind
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   ├── FUNDING.yml
+│   │   │   └── SECURITY.md
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── .eslintrc
+│   │       └── index.js
+│   ├── function.prototype.name
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── helpers
+│   │   │   └── functionsHaveNames.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       ├── tests.js
+│   │       └── uglified.js
+│   ├── functions-have-names
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── get-intrinsic
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── GetIntrinsic.js
+│   ├── get-proto
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── Object.getPrototypeOf.d.ts
+│   │   ├── Object.getPrototypeOf.js
+│   │   ├── README.md
+│   │   ├── Reflect.getPrototypeOf.d.ts
+│   │   ├── Reflect.getPrototypeOf.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── get-symbol-description
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── getInferredName.d.ts
+│   │   ├── getInferredName.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── get-tsconfig
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.cts
+│   │   │   ├── index.d.mts
+│   │   │   └── index.mjs
+│   │   └── package.json
+│   ├── glob-parent
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── globals
+│   │   ├── globals.json
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── globalthis
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.browser.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── native.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── gopd
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── gOPD.d.ts
+│   │   ├── gOPD.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── graphemer
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── Graphemer.d.ts
+│   │   │   ├── Graphemer.d.ts.map
+│   │   │   ├── Graphemer.js
+│   │   │   ├── GraphemerHelper.d.ts
+│   │   │   ├── GraphemerHelper.d.ts.map
+│   │   │   ├── GraphemerHelper.js
+│   │   │   ├── GraphemerIterator.d.ts
+│   │   │   ├── GraphemerIterator.d.ts.map
+│   │   │   ├── GraphemerIterator.js
+│   │   │   ├── boundaries.d.ts
+│   │   │   ├── boundaries.d.ts.map
+│   │   │   ├── boundaries.js
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── gray-matter
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── gray-matter.d.ts
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── defaults.js
+│   │   │   ├── engine.js
+│   │   │   ├── engines.js
+│   │   │   ├── excerpt.js
+│   │   │   ├── parse.js
+│   │   │   ├── stringify.js
+│   │   │   ├── to-file.js
+│   │   │   └── utils.js
+│   │   ├── node_modules
+│   │   │   ├── .bin
+│   │   │   ├── argparse
+│   │   │   └── js-yaml
+│   │   └── package.json
+│   ├── has-bigints
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── has-flag
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── has-property-descriptors
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── has-proto
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── accessor.d.ts
+│   │   ├── accessor.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── mutator.d.ts
+│   │   ├── mutator.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   ├── accessor.js
+│   │   │   ├── index.js
+│   │   │   └── mutator.js
+│   │   └── tsconfig.json
+│   ├── has-symbols
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── shams.d.ts
+│   │   ├── shams.js
+│   │   ├── test
+│   │   │   ├── index.js
+│   │   │   ├── shams
+│   │   │   └── tests.js
+│   │   └── tsconfig.json
+│   ├── has-tostringtag
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── shams.d.ts
+│   │   ├── shams.js
+│   │   ├── test
+│   │   │   ├── index.js
+│   │   │   ├── shams
+│   │   │   └── tests.js
+│   │   └── tsconfig.json
+│   ├── hasown
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── tsconfig.json
+│   ├── html-encoding-sniffer
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   └── html-encoding-sniffer.js
+│   │   └── package.json
+│   ├── htmlparser2
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── WritableStream.js
+│   │   ├── dist
+│   │   │   ├── commonjs
+│   │   │   └── esm
+│   │   ├── node_modules
+│   │   │   └── entities
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── FeedHandler.spec.ts
+│   │       ├── Parser.events.spec.ts
+│   │       ├── Parser.spec.ts
+│   │       ├── Parser.ts
+│   │       ├── Tokenizer.spec.ts
+│   │       ├── Tokenizer.ts
+│   │       ├── WritableStream.spec.ts
+│   │       ├── WritableStream.ts
+│   │       ├── __fixtures__
+│   │       ├── __snapshots__
+│   │       ├── index.spec.ts
+│   │       └── index.ts
+│   ├── http-proxy-agent
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   └── index.js.map
+│   │   └── package.json
+│   ├── https-proxy-agent
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── parse-proxy-response.d.ts
+│   │   │   ├── parse-proxy-response.d.ts.map
+│   │   │   ├── parse-proxy-response.js
+│   │   │   └── parse-proxy-response.js.map
+│   │   └── package.json
+│   ├── iconv-lite
+│   │   ├── .github
+│   │   │   └── dependabot.yml
+│   │   ├── .idea
+│   │   │   ├── codeStyles
+│   │   │   ├── iconv-lite.iml
+│   │   │   ├── inspectionProfiles
+│   │   │   ├── modules.xml
+│   │   │   └── vcs.xml
+│   │   ├── Changelog.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── encodings
+│   │   │   ├── dbcs-codec.js
+│   │   │   ├── dbcs-data.js
+│   │   │   ├── index.js
+│   │   │   ├── internal.js
+│   │   │   ├── sbcs-codec.js
+│   │   │   ├── sbcs-data-generated.js
+│   │   │   ├── sbcs-data.js
+│   │   │   ├── tables
+│   │   │   ├── utf16.js
+│   │   │   ├── utf32.js
+│   │   │   └── utf7.js
+│   │   ├── lib
+│   │   │   ├── bom-handling.js
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── streams.js
+│   │   └── package.json
+│   ├── ignore
+│   │   ├── LICENSE-MIT
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── legacy.js
+│   │   └── package.json
+│   ├── import-fresh
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── imurmurhash
+│   │   ├── README.md
+│   │   ├── imurmurhash.js
+│   │   ├── imurmurhash.min.js
+│   │   └── package.json
+│   ├── internal-slot
+│   │   ├── .attw.json
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-array-buffer
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-arrayish
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── yarn-error.log
+│   ├── is-async-function
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   ├── index.js
+│   │   │   └── uglified.js
+│   │   └── tsconfig.json
+│   ├── is-bigint
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-boolean-object
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-bun-module
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── bun.mjs
+│   │   │   ├── generic.d.ts
+│   │   │   ├── generic.js
+│   │   │   ├── shared.d.ts
+│   │   │   └── shared.js
+│   │   └── package.json
+│   ├── is-callable
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── is-core-module
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── core.json
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── is-data-view
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-date-object
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-extendable
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── is-extglob
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── is-finalizationregistry
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-generator-function
+│   │   ├── .eslintrc
+│   │   ├── .nvmrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   ├── corejs.js
+│   │   │   ├── index.js
+│   │   │   └── uglified.js
+│   │   └── tsconfig.json
+│   ├── is-glob
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── is-map
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .gitattributes
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-negative-zero
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-number
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── is-number-object
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-potential-custom-element-name
+│   │   ├── LICENSE-MIT.txt
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── is-regex
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-set
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .gitattributes
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-shared-array-buffer
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-string
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-symbol
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-typed-array
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-weakmap
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-weakref
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── is-weakset
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .gitattributes
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── isarray
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── isexe
+│   │   ├── .npmignore
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── mode.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── basic.js
+│   │   └── windows.js
+│   ├── iterator.prototype
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── js-tokens
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── js-yaml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── js-yaml.js
+│   │   ├── dist
+│   │   │   ├── js-yaml.js
+│   │   │   ├── js-yaml.min.js
+│   │   │   └── js-yaml.mjs
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── common.js
+│   │   │   ├── dumper.js
+│   │   │   ├── exception.js
+│   │   │   ├── loader.js
+│   │   │   ├── schema
+│   │   │   ├── schema.js
+│   │   │   ├── snippet.js
+│   │   │   ├── type
+│   │   │   └── type.js
+│   │   └── package.json
+│   ├── jsdom
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── api.js
+│   │   │   └── jsdom
+│   │   └── package.json
+│   ├── json-buffer
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── json-schema-traverse
+│   │   ├── .eslintrc.yml
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── spec
+│   │       ├── .eslintrc.yml
+│   │       ├── fixtures
+│   │       └── index.spec.js
+│   ├── json-stable-stringify-without-jsonify
+│   │   ├── .npmignore
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── example
+│   │   │   ├── key_cmp.js
+│   │   │   ├── nested.js
+│   │   │   ├── str.js
+│   │   │   └── value_cmp.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── readme.markdown
+│   │   └── test
+│   │       ├── cmp.js
+│   │       ├── nested.js
+│   │       ├── replacer.js
+│   │       ├── space.js
+│   │       ├── str.js
+│   │       └── to-json.js
+│   ├── json5
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   └── index.js
+│   │   ├── lib
+│   │   │   ├── cli.js
+│   │   │   ├── index.js
+│   │   │   ├── parse.js
+│   │   │   ├── register.js
+│   │   │   ├── require.js
+│   │   │   ├── stringify.js
+│   │   │   ├── unicode.js
+│   │   │   └── util.js
+│   │   └── package.json
+│   ├── jsx-ast-utils
+│   │   ├── .babelrc
+│   │   ├── .eslintignore
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── __tests__
+│   │   │   ├── helper.js
+│   │   │   └── src
+│   │   ├── elementType.js
+│   │   ├── eventHandlers.js
+│   │   ├── eventHandlersByType.js
+│   │   ├── getLiteralPropValue.js
+│   │   ├── getProp.js
+│   │   ├── getPropValue.js
+│   │   ├── hasAnyProp.js
+│   │   ├── hasEveryProp.js
+│   │   ├── hasProp.js
+│   │   ├── lib
+│   │   │   ├── elementType.js
+│   │   │   ├── eventHandlers.js
+│   │   │   ├── getProp.js
+│   │   │   ├── getPropValue.js
+│   │   │   ├── hasProp.js
+│   │   │   ├── index.js
+│   │   │   ├── propName.js
+│   │   │   └── values
+│   │   ├── package.json
+│   │   ├── propName.js
+│   │   └── src
+│   │       ├── elementType.js
+│   │       ├── eventHandlers.js
+│   │       ├── getProp.js
+│   │       ├── getPropValue.js
+│   │       ├── hasProp.js
+│   │       ├── index.js
+│   │       ├── propName.js
+│   │       └── values
+│   ├── keyv
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── index.d.ts
+│   │       └── index.js
+│   ├── kind-of
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── language-subtag-registry
+│   │   ├── README.md
+│   │   ├── data
+│   │   │   └── json
+│   │   └── package.json
+│   ├── language-tags
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── Subtag.js
+│   │   │   ├── Tag.js
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── levn
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── cast.js
+│   │   │   ├── index.js
+│   │   │   └── parse-string.js
+│   │   └── package.json
+│   ├── locate-path
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── lodash.merge
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── loose-envify
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cli.js
+│   │   ├── custom.js
+│   │   ├── index.js
+│   │   ├── loose-envify.js
+│   │   ├── package.json
+│   │   └── replace.js
+│   ├── lru-cache
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── commonjs
+│   │   │   └── esm
+│   │   └── package.json
+│   ├── math-intrinsics
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── abs.d.ts
+│   │   ├── abs.js
+│   │   ├── constants
+│   │   │   ├── maxArrayLength.d.ts
+│   │   │   ├── maxArrayLength.js
+│   │   │   ├── maxSafeInteger.d.ts
+│   │   │   ├── maxSafeInteger.js
+│   │   │   ├── maxValue.d.ts
+│   │   │   └── maxValue.js
+│   │   ├── floor.d.ts
+│   │   ├── floor.js
+│   │   ├── isFinite.d.ts
+│   │   ├── isFinite.js
+│   │   ├── isInteger.d.ts
+│   │   ├── isInteger.js
+│   │   ├── isNaN.d.ts
+│   │   ├── isNaN.js
+│   │   ├── isNegativeZero.d.ts
+│   │   ├── isNegativeZero.js
+│   │   ├── max.d.ts
+│   │   ├── max.js
+│   │   ├── min.d.ts
+│   │   ├── min.js
+│   │   ├── mod.d.ts
+│   │   ├── mod.js
+│   │   ├── package.json
+│   │   ├── pow.d.ts
+│   │   ├── pow.js
+│   │   ├── round.d.ts
+│   │   ├── round.js
+│   │   ├── sign.d.ts
+│   │   ├── sign.js
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── merge2
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── micromatch
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── minimatch
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── minimatch.js
+│   │   └── package.json
+│   ├── minimist
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── example
+│   │   │   └── parse.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── all_bool.js
+│   │       ├── bool.js
+│   │       ├── dash.js
+│   │       ├── default_bool.js
+│   │       ├── dotted.js
+│   │       ├── kv_short.js
+│   │       ├── long.js
+│   │       ├── num.js
+│   │       ├── parse.js
+│   │       ├── parse_modified.js
+│   │       ├── proto.js
+│   │       ├── short.js
+│   │       ├── stop_early.js
+│   │       ├── unknown.js
+│   │       └── whitespace.js
+│   ├── ms
+│   │   ├── index.js
+│   │   ├── license.md
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── nanoid
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── async
+│   │   │   ├── index.browser.cjs
+│   │   │   ├── index.browser.js
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── index.native.js
+│   │   │   └── package.json
+│   │   ├── bin
+│   │   │   └── nanoid.cjs
+│   │   ├── index.browser.cjs
+│   │   ├── index.browser.js
+│   │   ├── index.cjs
+│   │   ├── index.d.cts
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── nanoid.js
+│   │   ├── non-secure
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── package.json
+│   │   ├── package.json
+│   │   └── url-alphabet
+│   │       ├── index.cjs
+│   │       ├── index.js
+│   │       └── package.json
+│   ├── napi-postinstall
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── cli.d.ts
+│   │   │   ├── cli.js
+│   │   │   ├── cli.js.map
+│   │   │   ├── constants.d.ts
+│   │   │   ├── constants.js
+│   │   │   ├── constants.js.map
+│   │   │   ├── fallback.d.ts
+│   │   │   ├── fallback.js
+│   │   │   ├── fallback.js.map
+│   │   │   ├── helpers.d.ts
+│   │   │   ├── helpers.js
+│   │   │   ├── helpers.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── target.d.ts
+│   │   │   ├── target.js
+│   │   │   ├── target.js.map
+│   │   │   ├── types.d.ts
+│   │   │   ├── types.js
+│   │   │   └── types.js.map
+│   │   └── package.json
+│   ├── natural-compare
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── next
+│   │   ├── README.md
+│   │   ├── amp.d.ts
+│   │   ├── amp.js
+│   │   ├── app.d.ts
+│   │   ├── app.js
+│   │   ├── babel.d.ts
+│   │   ├── babel.js
+│   │   ├── cache.d.ts
+│   │   ├── cache.js
+│   │   ├── client.d.ts
+│   │   ├── client.js
+│   │   ├── compat
+│   │   │   ├── router.d.ts
+│   │   │   └── router.js
+│   │   ├── config.d.ts
+│   │   ├── config.js
+│   │   ├── constants.d.ts
+│   │   ├── constants.js
+│   │   ├── dist
+│   │   │   ├── api
+│   │   │   ├── bin
+│   │   │   ├── build
+│   │   │   ├── cli
+│   │   │   ├── client
+│   │   │   ├── compiled
+│   │   │   ├── diagnostics
+│   │   │   ├── esm
+│   │   │   ├── experimental
+│   │   │   ├── export
+│   │   │   ├── lib
+│   │   │   ├── next-devtools
+│   │   │   ├── pages
+│   │   │   ├── server
+│   │   │   ├── shared
+│   │   │   ├── styled-jsx
+│   │   │   ├── telemetry
+│   │   │   ├── trace
+│   │   │   └── types.d.ts
+│   │   ├── document.d.ts
+│   │   ├── document.js
+│   │   ├── dynamic.d.ts
+│   │   ├── dynamic.js
+│   │   ├── error.d.ts
+│   │   ├── error.js
+│   │   ├── experimental
+│   │   │   ├── testing
+│   │   │   └── testmode
+│   │   ├── font
+│   │   │   ├── google
+│   │   │   ├── index.d.ts
+│   │   │   └── local
+│   │   ├── form.d.ts
+│   │   ├── form.js
+│   │   ├── head.d.ts
+│   │   ├── head.js
+│   │   ├── headers.d.ts
+│   │   ├── headers.js
+│   │   ├── image-types
+│   │   │   └── global.d.ts
+│   │   ├── image.d.ts
+│   │   ├── image.js
+│   │   ├── index.d.ts
+│   │   ├── jest.d.ts
+│   │   ├── jest.js
+│   │   ├── legacy
+│   │   │   ├── image.d.ts
+│   │   │   └── image.js
+│   │   ├── license.md
+│   │   ├── link.d.ts
+│   │   ├── link.js
+│   │   ├── navigation-types
+│   │   │   └── compat
+│   │   ├── navigation.d.ts
+│   │   ├── navigation.js
+│   │   ├── og.d.ts
+│   │   ├── og.js
+│   │   ├── package.json
+│   │   ├── router.d.ts
+│   │   ├── router.js
+│   │   ├── script.d.ts
+│   │   ├── script.js
+│   │   ├── server.d.ts
+│   │   ├── server.js
+│   │   ├── types
+│   │   │   ├── compiled.d.ts
+│   │   │   └── global.d.ts
+│   │   ├── types.d.ts
+│   │   ├── types.js
+│   │   ├── web-vitals.d.ts
+│   │   └── web-vitals.js
+│   ├── node-ensure
+│   │   ├── .npmignore
+│   │   ├── README.md
+│   │   ├── browser.js
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── nth-check
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── compile.d.ts
+│   │   │   ├── compile.d.ts.map
+│   │   │   ├── compile.js
+│   │   │   ├── compile.js.map
+│   │   │   ├── esm
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── parse.d.ts
+│   │   │   ├── parse.d.ts.map
+│   │   │   ├── parse.js
+│   │   │   └── parse.js.map
+│   │   └── package.json
+│   ├── nwsapi
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   └── lint.log
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── modules
+│   │       └── nwsapi.js
+│   ├── object-assign
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── object-inspect
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── example
+│   │   │   ├── all.js
+│   │   │   ├── circular.js
+│   │   │   ├── fn.js
+│   │   │   └── inspect.js
+│   │   ├── index.js
+│   │   ├── package-support.json
+│   │   ├── package.json
+│   │   ├── readme.markdown
+│   │   ├── test
+│   │   │   ├── bigint.js
+│   │   │   ├── browser
+│   │   │   ├── circular.js
+│   │   │   ├── deep.js
+│   │   │   ├── element.js
+│   │   │   ├── err.js
+│   │   │   ├── fakes.js
+│   │   │   ├── fn.js
+│   │   │   ├── global.js
+│   │   │   ├── has.js
+│   │   │   ├── holes.js
+│   │   │   ├── indent-option.js
+│   │   │   ├── inspect.js
+│   │   │   ├── lowbyte.js
+│   │   │   ├── number.js
+│   │   │   ├── quoteStyle.js
+│   │   │   ├── toStringTag.js
+│   │   │   ├── undef.js
+│   │   │   └── values.js
+│   │   ├── test-core-js.js
+│   │   └── util.inspect.js
+│   ├── object-keys
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .travis.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── isArguments.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── object.assign
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── dist
+│   │   │   └── browser.js
+│   │   ├── hasSymbols.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── native.js
+│   │       ├── ses-compat.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── object.entries
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── .eslintrc
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── native.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── object.fromentries
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── object.groupby
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── object.values
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── .eslintrc
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── openai
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── _vendor
+│   │   │   ├── partial-json-parser
+│   │   │   └── zod-to-json-schema
+│   │   ├── api-promise.d.mts
+│   │   ├── api-promise.d.mts.map
+│   │   ├── api-promise.d.ts
+│   │   ├── api-promise.d.ts.map
+│   │   ├── api-promise.js
+│   │   ├── api-promise.js.map
+│   │   ├── api-promise.mjs
+│   │   ├── api-promise.mjs.map
+│   │   ├── azure.d.mts
+│   │   ├── azure.d.mts.map
+│   │   ├── azure.d.ts
+│   │   ├── azure.d.ts.map
+│   │   ├── azure.js
+│   │   ├── azure.js.map
+│   │   ├── azure.mjs
+│   │   ├── azure.mjs.map
+│   │   ├── beta
+│   │   │   └── realtime
+│   │   ├── bin
+│   │   │   ├── cli
+│   │   │   └── migration-config.json
+│   │   ├── client.d.mts
+│   │   ├── client.d.mts.map
+│   │   ├── client.d.ts
+│   │   ├── client.d.ts.map
+│   │   ├── client.js
+│   │   ├── client.js.map
+│   │   ├── client.mjs
+│   │   ├── client.mjs.map
+│   │   ├── core
+│   │   │   ├── api-promise.d.mts
+│   │   │   ├── api-promise.d.mts.map
+│   │   │   ├── api-promise.d.ts
+│   │   │   ├── api-promise.d.ts.map
+│   │   │   ├── api-promise.js
+│   │   │   ├── api-promise.js.map
+│   │   │   ├── api-promise.mjs
+│   │   │   ├── api-promise.mjs.map
+│   │   │   ├── error.d.mts
+│   │   │   ├── error.d.mts.map
+│   │   │   ├── error.d.ts
+│   │   │   ├── error.d.ts.map
+│   │   │   ├── error.js
+│   │   │   ├── error.js.map
+│   │   │   ├── error.mjs
+│   │   │   ├── error.mjs.map
+│   │   │   ├── pagination.d.mts
+│   │   │   ├── pagination.d.mts.map
+│   │   │   ├── pagination.d.ts
+│   │   │   ├── pagination.d.ts.map
+│   │   │   ├── pagination.js
+│   │   │   ├── pagination.js.map
+│   │   │   ├── pagination.mjs
+│   │   │   ├── pagination.mjs.map
+│   │   │   ├── resource.d.mts
+│   │   │   ├── resource.d.mts.map
+│   │   │   ├── resource.d.ts
+│   │   │   ├── resource.d.ts.map
+│   │   │   ├── resource.js
+│   │   │   ├── resource.js.map
+│   │   │   ├── resource.mjs
+│   │   │   ├── resource.mjs.map
+│   │   │   ├── streaming.d.mts
+│   │   │   ├── streaming.d.mts.map
+│   │   │   ├── streaming.d.ts
+│   │   │   ├── streaming.d.ts.map
+│   │   │   ├── streaming.js
+│   │   │   ├── streaming.js.map
+│   │   │   ├── streaming.mjs
+│   │   │   ├── streaming.mjs.map
+│   │   │   ├── uploads.d.mts
+│   │   │   ├── uploads.d.mts.map
+│   │   │   ├── uploads.d.ts
+│   │   │   ├── uploads.d.ts.map
+│   │   │   ├── uploads.js
+│   │   │   ├── uploads.js.map
+│   │   │   ├── uploads.mjs
+│   │   │   └── uploads.mjs.map
+│   │   ├── error.d.mts
+│   │   ├── error.d.mts.map
+│   │   ├── error.d.ts
+│   │   ├── error.d.ts.map
+│   │   ├── error.js
+│   │   ├── error.js.map
+│   │   ├── error.mjs
+│   │   ├── error.mjs.map
+│   │   ├── helpers
+│   │   │   ├── audio.d.mts
+│   │   │   ├── audio.d.mts.map
+│   │   │   ├── audio.d.ts
+│   │   │   ├── audio.d.ts.map
+│   │   │   ├── audio.js
+│   │   │   ├── audio.js.map
+│   │   │   ├── audio.mjs
+│   │   │   ├── audio.mjs.map
+│   │   │   ├── zod.d.mts
+│   │   │   ├── zod.d.mts.map
+│   │   │   ├── zod.d.ts
+│   │   │   ├── zod.d.ts.map
+│   │   │   ├── zod.js
+│   │   │   ├── zod.js.map
+│   │   │   ├── zod.mjs
+│   │   │   └── zod.mjs.map
+│   │   ├── index.d.mts
+│   │   ├── index.d.mts.map
+│   │   ├── index.d.ts
+│   │   ├── index.d.ts.map
+│   │   ├── index.js
+│   │   ├── index.js.map
+│   │   ├── index.mjs
+│   │   ├── index.mjs.map
+│   │   ├── internal
+│   │   │   ├── builtin-types.d.mts
+│   │   │   ├── builtin-types.d.mts.map
+│   │   │   ├── builtin-types.d.ts
+│   │   │   ├── builtin-types.d.ts.map
+│   │   │   ├── builtin-types.js
+│   │   │   ├── builtin-types.js.map
+│   │   │   ├── builtin-types.mjs
+│   │   │   ├── builtin-types.mjs.map
+│   │   │   ├── decoders
+│   │   │   ├── detect-platform.d.mts
+│   │   │   ├── detect-platform.d.mts.map
+│   │   │   ├── detect-platform.d.ts
+│   │   │   ├── detect-platform.d.ts.map
+│   │   │   ├── detect-platform.js
+│   │   │   ├── detect-platform.js.map
+│   │   │   ├── detect-platform.mjs
+│   │   │   ├── detect-platform.mjs.map
+│   │   │   ├── errors.d.mts
+│   │   │   ├── errors.d.mts.map
+│   │   │   ├── errors.d.ts
+│   │   │   ├── errors.d.ts.map
+│   │   │   ├── errors.js
+│   │   │   ├── errors.js.map
+│   │   │   ├── errors.mjs
+│   │   │   ├── errors.mjs.map
+│   │   │   ├── headers.d.mts
+│   │   │   ├── headers.d.mts.map
+│   │   │   ├── headers.d.ts
+│   │   │   ├── headers.d.ts.map
+│   │   │   ├── headers.js
+│   │   │   ├── headers.js.map
+│   │   │   ├── headers.mjs
+│   │   │   ├── headers.mjs.map
+│   │   │   ├── parse.d.mts
+│   │   │   ├── parse.d.mts.map
+│   │   │   ├── parse.d.ts
+│   │   │   ├── parse.d.ts.map
+│   │   │   ├── parse.js
+│   │   │   ├── parse.js.map
+│   │   │   ├── parse.mjs
+│   │   │   ├── parse.mjs.map
+│   │   │   ├── qs
+│   │   │   ├── request-options.d.mts
+│   │   │   ├── request-options.d.mts.map
+│   │   │   ├── request-options.d.ts
+│   │   │   ├── request-options.d.ts.map
+│   │   │   ├── request-options.js
+│   │   │   ├── request-options.js.map
+│   │   │   ├── request-options.mjs
+│   │   │   ├── request-options.mjs.map
+│   │   │   ├── shim-types.d.mts
+│   │   │   ├── shim-types.d.mts.map
+│   │   │   ├── shim-types.d.ts
+│   │   │   ├── shim-types.d.ts.map
+│   │   │   ├── shim-types.js
+│   │   │   ├── shim-types.js.map
+│   │   │   ├── shim-types.mjs
+│   │   │   ├── shim-types.mjs.map
+│   │   │   ├── shims.d.mts
+│   │   │   ├── shims.d.mts.map
+│   │   │   ├── shims.d.ts
+│   │   │   ├── shims.d.ts.map
+│   │   │   ├── shims.js
+│   │   │   ├── shims.js.map
+│   │   │   ├── shims.mjs
+│   │   │   ├── shims.mjs.map
+│   │   │   ├── stream-utils.d.mts
+│   │   │   ├── stream-utils.d.mts.map
+│   │   │   ├── stream-utils.d.ts
+│   │   │   ├── stream-utils.d.ts.map
+│   │   │   ├── stream-utils.js
+│   │   │   ├── stream-utils.js.map
+│   │   │   ├── stream-utils.mjs
+│   │   │   ├── stream-utils.mjs.map
+│   │   │   ├── to-file.d.mts
+│   │   │   ├── to-file.d.mts.map
+│   │   │   ├── to-file.d.ts
+│   │   │   ├── to-file.d.ts.map
+│   │   │   ├── to-file.js
+│   │   │   ├── to-file.js.map
+│   │   │   ├── to-file.mjs
+│   │   │   ├── to-file.mjs.map
+│   │   │   ├── tslib.js
+│   │   │   ├── tslib.mjs
+│   │   │   ├── types.d.mts
+│   │   │   ├── types.d.mts.map
+│   │   │   ├── types.d.ts
+│   │   │   ├── types.d.ts.map
+│   │   │   ├── types.js
+│   │   │   ├── types.js.map
+│   │   │   ├── types.mjs
+│   │   │   ├── types.mjs.map
+│   │   │   ├── uploads.d.mts
+│   │   │   ├── uploads.d.mts.map
+│   │   │   ├── uploads.d.ts
+│   │   │   ├── uploads.d.ts.map
+│   │   │   ├── uploads.js
+│   │   │   ├── uploads.js.map
+│   │   │   ├── uploads.mjs
+│   │   │   ├── uploads.mjs.map
+│   │   │   ├── utils
+│   │   │   ├── utils.d.mts
+│   │   │   ├── utils.d.mts.map
+│   │   │   ├── utils.d.ts
+│   │   │   ├── utils.d.ts.map
+│   │   │   ├── utils.js
+│   │   │   ├── utils.js.map
+│   │   │   ├── utils.mjs
+│   │   │   └── utils.mjs.map
+│   │   ├── lib
+│   │   │   ├── AbstractChatCompletionRunner.d.mts
+│   │   │   ├── AbstractChatCompletionRunner.d.mts.map
+│   │   │   ├── AbstractChatCompletionRunner.d.ts
+│   │   │   ├── AbstractChatCompletionRunner.d.ts.map
+│   │   │   ├── AbstractChatCompletionRunner.js
+│   │   │   ├── AbstractChatCompletionRunner.js.map
+│   │   │   ├── AbstractChatCompletionRunner.mjs
+│   │   │   ├── AbstractChatCompletionRunner.mjs.map
+│   │   │   ├── AssistantStream.d.mts
+│   │   │   ├── AssistantStream.d.mts.map
+│   │   │   ├── AssistantStream.d.ts
+│   │   │   ├── AssistantStream.d.ts.map
+│   │   │   ├── AssistantStream.js
+│   │   │   ├── AssistantStream.js.map
+│   │   │   ├── AssistantStream.mjs
+│   │   │   ├── AssistantStream.mjs.map
+│   │   │   ├── ChatCompletionRunner.d.mts
+│   │   │   ├── ChatCompletionRunner.d.mts.map
+│   │   │   ├── ChatCompletionRunner.d.ts
+│   │   │   ├── ChatCompletionRunner.d.ts.map
+│   │   │   ├── ChatCompletionRunner.js
+│   │   │   ├── ChatCompletionRunner.js.map
+│   │   │   ├── ChatCompletionRunner.mjs
+│   │   │   ├── ChatCompletionRunner.mjs.map
+│   │   │   ├── ChatCompletionStream.d.mts
+│   │   │   ├── ChatCompletionStream.d.mts.map
+│   │   │   ├── ChatCompletionStream.d.ts
+│   │   │   ├── ChatCompletionStream.d.ts.map
+│   │   │   ├── ChatCompletionStream.js
+│   │   │   ├── ChatCompletionStream.js.map
+│   │   │   ├── ChatCompletionStream.mjs
+│   │   │   ├── ChatCompletionStream.mjs.map
+│   │   │   ├── ChatCompletionStreamingRunner.d.mts
+│   │   │   ├── ChatCompletionStreamingRunner.d.mts.map
+│   │   │   ├── ChatCompletionStreamingRunner.d.ts
+│   │   │   ├── ChatCompletionStreamingRunner.d.ts.map
+│   │   │   ├── ChatCompletionStreamingRunner.js
+│   │   │   ├── ChatCompletionStreamingRunner.js.map
+│   │   │   ├── ChatCompletionStreamingRunner.mjs
+│   │   │   ├── ChatCompletionStreamingRunner.mjs.map
+│   │   │   ├── EventEmitter.d.mts
+│   │   │   ├── EventEmitter.d.mts.map
+│   │   │   ├── EventEmitter.d.ts
+│   │   │   ├── EventEmitter.d.ts.map
+│   │   │   ├── EventEmitter.js
+│   │   │   ├── EventEmitter.js.map
+│   │   │   ├── EventEmitter.mjs
+│   │   │   ├── EventEmitter.mjs.map
+│   │   │   ├── EventStream.d.mts
+│   │   │   ├── EventStream.d.mts.map
+│   │   │   ├── EventStream.d.ts
+│   │   │   ├── EventStream.d.ts.map
+│   │   │   ├── EventStream.js
+│   │   │   ├── EventStream.js.map
+│   │   │   ├── EventStream.mjs
+│   │   │   ├── EventStream.mjs.map
+│   │   │   ├── ResponsesParser.d.mts
+│   │   │   ├── ResponsesParser.d.mts.map
+│   │   │   ├── ResponsesParser.d.ts
+│   │   │   ├── ResponsesParser.d.ts.map
+│   │   │   ├── ResponsesParser.js
+│   │   │   ├── ResponsesParser.js.map
+│   │   │   ├── ResponsesParser.mjs
+│   │   │   ├── ResponsesParser.mjs.map
+│   │   │   ├── RunnableFunction.d.mts
+│   │   │   ├── RunnableFunction.d.mts.map
+│   │   │   ├── RunnableFunction.d.ts
+│   │   │   ├── RunnableFunction.d.ts.map
+│   │   │   ├── RunnableFunction.js
+│   │   │   ├── RunnableFunction.js.map
+│   │   │   ├── RunnableFunction.mjs
+│   │   │   ├── RunnableFunction.mjs.map
+│   │   │   ├── Util.d.mts
+│   │   │   ├── Util.d.mts.map
+│   │   │   ├── Util.d.ts
+│   │   │   ├── Util.d.ts.map
+│   │   │   ├── Util.js
+│   │   │   ├── Util.js.map
+│   │   │   ├── Util.mjs
+│   │   │   ├── Util.mjs.map
+│   │   │   ├── chatCompletionUtils.d.mts
+│   │   │   ├── chatCompletionUtils.d.mts.map
+│   │   │   ├── chatCompletionUtils.d.ts
+│   │   │   ├── chatCompletionUtils.d.ts.map
+│   │   │   ├── chatCompletionUtils.js
+│   │   │   ├── chatCompletionUtils.js.map
+│   │   │   ├── chatCompletionUtils.mjs
+│   │   │   ├── chatCompletionUtils.mjs.map
+│   │   │   ├── jsonschema.d.mts
+│   │   │   ├── jsonschema.d.mts.map
+│   │   │   ├── jsonschema.d.ts
+│   │   │   ├── jsonschema.d.ts.map
+│   │   │   ├── jsonschema.js
+│   │   │   ├── jsonschema.js.map
+│   │   │   ├── jsonschema.mjs
+│   │   │   ├── jsonschema.mjs.map
+│   │   │   ├── parser.d.mts
+│   │   │   ├── parser.d.mts.map
+│   │   │   ├── parser.d.ts
+│   │   │   ├── parser.d.ts.map
+│   │   │   ├── parser.js
+│   │   │   ├── parser.js.map
+│   │   │   ├── parser.mjs
+│   │   │   ├── parser.mjs.map
+│   │   │   └── responses
+│   │   ├── package.json
+│   │   ├── pagination.d.mts
+│   │   ├── pagination.d.mts.map
+│   │   ├── pagination.d.ts
+│   │   ├── pagination.d.ts.map
+│   │   ├── pagination.js
+│   │   ├── pagination.js.map
+│   │   ├── pagination.mjs
+│   │   ├── pagination.mjs.map
+│   │   ├── resource.d.mts
+│   │   ├── resource.d.mts.map
+│   │   ├── resource.d.ts
+│   │   ├── resource.d.ts.map
+│   │   ├── resource.js
+│   │   ├── resource.js.map
+│   │   ├── resource.mjs
+│   │   ├── resource.mjs.map
+│   │   ├── resources
+│   │   │   ├── audio
+│   │   │   ├── audio.d.mts
+│   │   │   ├── audio.d.mts.map
+│   │   │   ├── audio.d.ts
+│   │   │   ├── audio.d.ts.map
+│   │   │   ├── audio.js
+│   │   │   ├── audio.js.map
+│   │   │   ├── audio.mjs
+│   │   │   ├── audio.mjs.map
+│   │   │   ├── batches.d.mts
+│   │   │   ├── batches.d.mts.map
+│   │   │   ├── batches.d.ts
+│   │   │   ├── batches.d.ts.map
+│   │   │   ├── batches.js
+│   │   │   ├── batches.js.map
+│   │   │   ├── batches.mjs
+│   │   │   ├── batches.mjs.map
+│   │   │   ├── beta
+│   │   │   ├── beta.d.mts
+│   │   │   ├── beta.d.mts.map
+│   │   │   ├── beta.d.ts
+│   │   │   ├── beta.d.ts.map
+│   │   │   ├── beta.js
+│   │   │   ├── beta.js.map
+│   │   │   ├── beta.mjs
+│   │   │   ├── beta.mjs.map
+│   │   │   ├── chat
+│   │   │   ├── chat.d.mts
+│   │   │   ├── chat.d.mts.map
+│   │   │   ├── chat.d.ts
+│   │   │   ├── chat.d.ts.map
+│   │   │   ├── chat.js
+│   │   │   ├── chat.js.map
+│   │   │   ├── chat.mjs
+│   │   │   ├── chat.mjs.map
+│   │   │   ├── completions.d.mts
+│   │   │   ├── completions.d.mts.map
+│   │   │   ├── completions.d.ts
+│   │   │   ├── completions.d.ts.map
+│   │   │   ├── completions.js
+│   │   │   ├── completions.js.map
+│   │   │   ├── completions.mjs
+│   │   │   ├── completions.mjs.map
+│   │   │   ├── containers
+│   │   │   ├── containers.d.mts
+│   │   │   ├── containers.d.mts.map
+│   │   │   ├── containers.d.ts
+│   │   │   ├── containers.d.ts.map
+│   │   │   ├── containers.js
+│   │   │   ├── containers.js.map
+│   │   │   ├── containers.mjs
+│   │   │   ├── containers.mjs.map
+│   │   │   ├── embeddings.d.mts
+│   │   │   ├── embeddings.d.mts.map
+│   │   │   ├── embeddings.d.ts
+│   │   │   ├── embeddings.d.ts.map
+│   │   │   ├── embeddings.js
+│   │   │   ├── embeddings.js.map
+│   │   │   ├── embeddings.mjs
+│   │   │   ├── embeddings.mjs.map
+│   │   │   ├── evals
+│   │   │   ├── evals.d.mts
+│   │   │   ├── evals.d.mts.map
+│   │   │   ├── evals.d.ts
+│   │   │   ├── evals.d.ts.map
+│   │   │   ├── evals.js
+│   │   │   ├── evals.js.map
+│   │   │   ├── evals.mjs
+│   │   │   ├── evals.mjs.map
+│   │   │   ├── files.d.mts
+│   │   │   ├── files.d.mts.map
+│   │   │   ├── files.d.ts
+│   │   │   ├── files.d.ts.map
+│   │   │   ├── files.js
+│   │   │   ├── files.js.map
+│   │   │   ├── files.mjs
+│   │   │   ├── files.mjs.map
+│   │   │   ├── fine-tuning
+│   │   │   ├── fine-tuning.d.mts
+│   │   │   ├── fine-tuning.d.mts.map
+│   │   │   ├── fine-tuning.d.ts
+│   │   │   ├── fine-tuning.d.ts.map
+│   │   │   ├── fine-tuning.js
+│   │   │   ├── fine-tuning.js.map
+│   │   │   ├── fine-tuning.mjs
+│   │   │   ├── fine-tuning.mjs.map
+│   │   │   ├── graders
+│   │   │   ├── graders.d.mts
+│   │   │   ├── graders.d.mts.map
+│   │   │   ├── graders.d.ts
+│   │   │   ├── graders.d.ts.map
+│   │   │   ├── graders.js
+│   │   │   ├── graders.js.map
+│   │   │   ├── graders.mjs
+│   │   │   ├── graders.mjs.map
+│   │   │   ├── images.d.mts
+│   │   │   ├── images.d.mts.map
+│   │   │   ├── images.d.ts
+│   │   │   ├── images.d.ts.map
+│   │   │   ├── images.js
+│   │   │   ├── images.js.map
+│   │   │   ├── images.mjs
+│   │   │   ├── images.mjs.map
+│   │   │   ├── index.d.mts
+│   │   │   ├── index.d.mts.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.d.ts.map
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── index.mjs
+│   │   │   ├── index.mjs.map
+│   │   │   ├── models.d.mts
+│   │   │   ├── models.d.mts.map
+│   │   │   ├── models.d.ts
+│   │   │   ├── models.d.ts.map
+│   │   │   ├── models.js
+│   │   │   ├── models.js.map
+│   │   │   ├── models.mjs
+│   │   │   ├── models.mjs.map
+│   │   │   ├── moderations.d.mts
+│   │   │   ├── moderations.d.mts.map
+│   │   │   ├── moderations.d.ts
+│   │   │   ├── moderations.d.ts.map
+│   │   │   ├── moderations.js
+│   │   │   ├── moderations.js.map
+│   │   │   ├── moderations.mjs
+│   │   │   ├── moderations.mjs.map
+│   │   │   ├── responses
+│   │   │   ├── responses.d.mts
+│   │   │   ├── responses.d.mts.map
+│   │   │   ├── responses.d.ts
+│   │   │   ├── responses.d.ts.map
+│   │   │   ├── responses.js
+│   │   │   ├── responses.js.map
+│   │   │   ├── responses.mjs
+│   │   │   ├── responses.mjs.map
+│   │   │   ├── shared.d.mts
+│   │   │   ├── shared.d.mts.map
+│   │   │   ├── shared.d.ts
+│   │   │   ├── shared.d.ts.map
+│   │   │   ├── shared.js
+│   │   │   ├── shared.js.map
+│   │   │   ├── shared.mjs
+│   │   │   ├── shared.mjs.map
+│   │   │   ├── uploads
+│   │   │   ├── uploads.d.mts
+│   │   │   ├── uploads.d.mts.map
+│   │   │   ├── uploads.d.ts
+│   │   │   ├── uploads.d.ts.map
+│   │   │   ├── uploads.js
+│   │   │   ├── uploads.js.map
+│   │   │   ├── uploads.mjs
+│   │   │   ├── uploads.mjs.map
+│   │   │   ├── vector-stores
+│   │   │   ├── vector-stores.d.mts
+│   │   │   ├── vector-stores.d.mts.map
+│   │   │   ├── vector-stores.d.ts
+│   │   │   ├── vector-stores.d.ts.map
+│   │   │   ├── vector-stores.js
+│   │   │   ├── vector-stores.js.map
+│   │   │   ├── vector-stores.mjs
+│   │   │   ├── vector-stores.mjs.map
+│   │   │   ├── webhooks.d.mts
+│   │   │   ├── webhooks.d.mts.map
+│   │   │   ├── webhooks.d.ts
+│   │   │   ├── webhooks.d.ts.map
+│   │   │   ├── webhooks.js
+│   │   │   ├── webhooks.js.map
+│   │   │   ├── webhooks.mjs
+│   │   │   └── webhooks.mjs.map
+│   │   ├── resources.d.mts
+│   │   ├── resources.d.mts.map
+│   │   ├── resources.d.ts
+│   │   ├── resources.d.ts.map
+│   │   ├── resources.js
+│   │   ├── resources.js.map
+│   │   ├── resources.mjs
+│   │   ├── resources.mjs.map
+│   │   ├── src
+│   │   │   ├── _vendor
+│   │   │   ├── api-promise.ts
+│   │   │   ├── azure.ts
+│   │   │   ├── beta
+│   │   │   ├── client.ts
+│   │   │   ├── core
+│   │   │   ├── error.ts
+│   │   │   ├── helpers
+│   │   │   ├── index.ts
+│   │   │   ├── internal
+│   │   │   ├── lib
+│   │   │   ├── pagination.ts
+│   │   │   ├── resource.ts
+│   │   │   ├── resources
+│   │   │   ├── resources.ts
+│   │   │   ├── streaming.ts
+│   │   │   ├── tsconfig.json
+│   │   │   ├── uploads.ts
+│   │   │   └── version.ts
+│   │   ├── streaming.d.mts
+│   │   ├── streaming.d.mts.map
+│   │   ├── streaming.d.ts
+│   │   ├── streaming.d.ts.map
+│   │   ├── streaming.js
+│   │   ├── streaming.js.map
+│   │   ├── streaming.mjs
+│   │   ├── streaming.mjs.map
+│   │   ├── uploads.d.mts
+│   │   ├── uploads.d.mts.map
+│   │   ├── uploads.d.ts
+│   │   ├── uploads.d.ts.map
+│   │   ├── uploads.js
+│   │   ├── uploads.js.map
+│   │   ├── uploads.mjs
+│   │   ├── uploads.mjs.map
+│   │   ├── version.d.mts
+│   │   ├── version.d.mts.map
+│   │   ├── version.d.ts
+│   │   ├── version.d.ts.map
+│   │   ├── version.js
+│   │   ├── version.js.map
+│   │   ├── version.mjs
+│   │   └── version.mjs.map
+│   ├── optionator
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── help.js
+│   │   │   ├── index.js
+│   │   │   └── util.js
+│   │   └── package.json
+│   ├── own-keys
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── p-limit
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── p-locate
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── parent-module
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── parse5
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── cjs
+│   │   │   ├── common
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── parser
+│   │   │   ├── serializer
+│   │   │   ├── tokenizer
+│   │   │   └── tree-adapters
+│   │   ├── node_modules
+│   │   │   └── entities
+│   │   └── package.json
+│   ├── parse5-htmlparser2-tree-adapter
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── cjs
+│   │   │   ├── index.d.ts
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── parse5-parser-stream
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── cjs
+│   │   │   ├── index.d.ts
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── path-exists
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── path-key
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── path-parse
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── pdf-parse
+│   │   ├── .editorconfig
+│   │   ├── .gitlab-ci.yml
+│   │   ├── .jsbeautifyrc
+│   │   ├── .vscode
+│   │   │   ├── launch.json
+│   │   │   └── settings.json
+│   │   ├── CHANGELOG
+│   │   ├── CONTRIBUTING.md
+│   │   ├── LICENSE
+│   │   ├── NOTES.md
+│   │   ├── QUICKSTART.js
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── pdf-parse.js
+│   │   │   └── pdf.js
+│   │   ├── node_modules
+│   │   │   └── debug
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── 01-valid-default.js
+│   │       ├── 01-valid-v1.10.88.js
+│   │       ├── 01-valid-v1.9.426.js
+│   │       ├── 01-valid-v2.0.550.js
+│   │       ├── 02-valid-default.js
+│   │       ├── 02-valid-v1.10.88.js
+│   │       ├── 02-valid-v1.9.426.js
+│   │       ├── 02-valid-v2.0.550.js
+│   │       ├── 03-invalid-default.js
+│   │       ├── 03-invalid-v1.10.88.js
+│   │       ├── 03-invalid-v1.9.426.js
+│   │       ├── 03-invalid-v2.0.550.js
+│   │       ├── 04-valid-default.js
+│   │       ├── 05-versions-space-default.js
+│   │       └── data
+│   ├── pg
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── esm
+│   │   │   └── index.mjs
+│   │   ├── lib
+│   │   │   ├── client.js
+│   │   │   ├── connection-parameters.js
+│   │   │   ├── connection.js
+│   │   │   ├── crypto
+│   │   │   ├── defaults.js
+│   │   │   ├── index.js
+│   │   │   ├── native
+│   │   │   ├── query.js
+│   │   │   ├── result.js
+│   │   │   ├── stream.js
+│   │   │   ├── type-overrides.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── pg-cloudflare
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── empty.d.ts
+│   │   │   ├── empty.js
+│   │   │   ├── empty.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── index.js.map
+│   │   ├── esm
+│   │   │   └── index.mjs
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── empty.ts
+│   │       ├── index.ts
+│   │       └── types.d.ts
+│   ├── pg-connection-string
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── esm
+│   │   │   └── index.mjs
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── pg-int8
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── pg-pool
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── esm
+│   │   │   └── index.mjs
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── pg-protocol
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── b.d.ts
+│   │   │   ├── b.js
+│   │   │   ├── b.js.map
+│   │   │   ├── buffer-reader.d.ts
+│   │   │   ├── buffer-reader.js
+│   │   │   ├── buffer-reader.js.map
+│   │   │   ├── buffer-writer.d.ts
+│   │   │   ├── buffer-writer.js
+│   │   │   ├── buffer-writer.js.map
+│   │   │   ├── inbound-parser.test.d.ts
+│   │   │   ├── inbound-parser.test.js
+│   │   │   ├── inbound-parser.test.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── messages.d.ts
+│   │   │   ├── messages.js
+│   │   │   ├── messages.js.map
+│   │   │   ├── outbound-serializer.test.d.ts
+│   │   │   ├── outbound-serializer.test.js
+│   │   │   ├── outbound-serializer.test.js.map
+│   │   │   ├── parser.d.ts
+│   │   │   ├── parser.js
+│   │   │   ├── parser.js.map
+│   │   │   ├── serializer.d.ts
+│   │   │   ├── serializer.js
+│   │   │   └── serializer.js.map
+│   │   ├── esm
+│   │   │   └── index.js
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── b.ts
+│   │       ├── buffer-reader.ts
+│   │       ├── buffer-writer.ts
+│   │       ├── inbound-parser.test.ts
+│   │       ├── index.ts
+│   │       ├── messages.ts
+│   │       ├── outbound-serializer.test.ts
+│   │       ├── parser.ts
+│   │       ├── serializer.ts
+│   │       ├── testing
+│   │       └── types
+│   ├── pg-types
+│   │   ├── .travis.yml
+│   │   ├── Makefile
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── index.test-d.ts
+│   │   ├── lib
+│   │   │   ├── arrayParser.js
+│   │   │   ├── binaryParsers.js
+│   │   │   ├── builtins.js
+│   │   │   └── textParsers.js
+│   │   ├── package.json
+│   │   └── test
+│   │       ├── index.js
+│   │       └── types.js
+│   ├── pgpass
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── helper.js
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── picocolors
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   ├── picocolors.browser.js
+│   │   ├── picocolors.d.ts
+│   │   ├── picocolors.js
+│   │   └── types.d.ts
+│   ├── picomatch
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── constants.js
+│   │   │   ├── parse.js
+│   │   │   ├── picomatch.js
+│   │   │   ├── scan.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── possible-typed-array-names
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── postcss
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── at-rule.d.ts
+│   │   │   ├── at-rule.js
+│   │   │   ├── comment.d.ts
+│   │   │   ├── comment.js
+│   │   │   ├── container.d.ts
+│   │   │   ├── container.js
+│   │   │   ├── css-syntax-error.d.ts
+│   │   │   ├── css-syntax-error.js
+│   │   │   ├── declaration.d.ts
+│   │   │   ├── declaration.js
+│   │   │   ├── document.d.ts
+│   │   │   ├── document.js
+│   │   │   ├── fromJSON.d.ts
+│   │   │   ├── fromJSON.js
+│   │   │   ├── input.d.ts
+│   │   │   ├── input.js
+│   │   │   ├── lazy-result.d.ts
+│   │   │   ├── lazy-result.js
+│   │   │   ├── list.d.ts
+│   │   │   ├── list.js
+│   │   │   ├── map-generator.js
+│   │   │   ├── no-work-result.d.ts
+│   │   │   ├── no-work-result.js
+│   │   │   ├── node.d.ts
+│   │   │   ├── node.js
+│   │   │   ├── parse.d.ts
+│   │   │   ├── parse.js
+│   │   │   ├── parser.js
+│   │   │   ├── postcss.d.mts
+│   │   │   ├── postcss.d.ts
+│   │   │   ├── postcss.js
+│   │   │   ├── postcss.mjs
+│   │   │   ├── previous-map.d.ts
+│   │   │   ├── previous-map.js
+│   │   │   ├── processor.d.ts
+│   │   │   ├── processor.js
+│   │   │   ├── result.d.ts
+│   │   │   ├── result.js
+│   │   │   ├── root.d.ts
+│   │   │   ├── root.js
+│   │   │   ├── rule.d.ts
+│   │   │   ├── rule.js
+│   │   │   ├── stringifier.d.ts
+│   │   │   ├── stringifier.js
+│   │   │   ├── stringify.d.ts
+│   │   │   ├── stringify.js
+│   │   │   ├── symbols.js
+│   │   │   ├── terminal-highlight.js
+│   │   │   ├── tokenize.js
+│   │   │   ├── warn-once.js
+│   │   │   ├── warning.d.ts
+│   │   │   └── warning.js
+│   │   └── package.json
+│   ├── postgres-array
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── postgres-bytea
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── postgres-date
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── postgres-interval
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── prelude-ls
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── Func.js
+│   │   │   ├── List.js
+│   │   │   ├── Num.js
+│   │   │   ├── Obj.js
+│   │   │   ├── Str.js
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── prop-types
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── checkPropTypes.js
+│   │   ├── factory.js
+│   │   ├── factoryWithThrowingShims.js
+│   │   ├── factoryWithTypeCheckers.js
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── ReactPropTypesSecret.js
+│   │   │   └── has.js
+│   │   ├── package.json
+│   │   ├── prop-types.js
+│   │   └── prop-types.min.js
+│   ├── punycode
+│   │   ├── LICENSE-MIT.txt
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   ├── punycode.es6.js
+│   │   └── punycode.js
+│   ├── queue-microtask
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── react
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cjs
+│   │   │   ├── react-compiler-runtime.development.js
+│   │   │   ├── react-compiler-runtime.production.js
+│   │   │   ├── react-compiler-runtime.profiling.js
+│   │   │   ├── react-jsx-dev-runtime.development.js
+│   │   │   ├── react-jsx-dev-runtime.production.js
+│   │   │   ├── react-jsx-dev-runtime.profiling.js
+│   │   │   ├── react-jsx-dev-runtime.react-server.development.js
+│   │   │   ├── react-jsx-dev-runtime.react-server.production.js
+│   │   │   ├── react-jsx-runtime.development.js
+│   │   │   ├── react-jsx-runtime.production.js
+│   │   │   ├── react-jsx-runtime.profiling.js
+│   │   │   ├── react-jsx-runtime.react-server.development.js
+│   │   │   ├── react-jsx-runtime.react-server.production.js
+│   │   │   ├── react.development.js
+│   │   │   ├── react.production.js
+│   │   │   ├── react.react-server.development.js
+│   │   │   └── react.react-server.production.js
+│   │   ├── compiler-runtime.js
+│   │   ├── index.js
+│   │   ├── jsx-dev-runtime.js
+│   │   ├── jsx-dev-runtime.react-server.js
+│   │   ├── jsx-runtime.js
+│   │   ├── jsx-runtime.react-server.js
+│   │   ├── package.json
+│   │   └── react.react-server.js
+│   ├── react-dom
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cjs
+│   │   │   ├── react-dom-client.development.js
+│   │   │   ├── react-dom-client.production.js
+│   │   │   ├── react-dom-profiling.development.js
+│   │   │   ├── react-dom-profiling.profiling.js
+│   │   │   ├── react-dom-server-legacy.browser.development.js
+│   │   │   ├── react-dom-server-legacy.browser.production.js
+│   │   │   ├── react-dom-server-legacy.node.development.js
+│   │   │   ├── react-dom-server-legacy.node.production.js
+│   │   │   ├── react-dom-server.browser.development.js
+│   │   │   ├── react-dom-server.browser.production.js
+│   │   │   ├── react-dom-server.bun.development.js
+│   │   │   ├── react-dom-server.bun.production.js
+│   │   │   ├── react-dom-server.edge.development.js
+│   │   │   ├── react-dom-server.edge.production.js
+│   │   │   ├── react-dom-server.node.development.js
+│   │   │   ├── react-dom-server.node.production.js
+│   │   │   ├── react-dom-test-utils.development.js
+│   │   │   ├── react-dom-test-utils.production.js
+│   │   │   ├── react-dom.development.js
+│   │   │   ├── react-dom.production.js
+│   │   │   ├── react-dom.react-server.development.js
+│   │   │   └── react-dom.react-server.production.js
+│   │   ├── client.js
+│   │   ├── client.react-server.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── profiling.js
+│   │   ├── profiling.react-server.js
+│   │   ├── react-dom.react-server.js
+│   │   ├── server.browser.js
+│   │   ├── server.bun.js
+│   │   ├── server.edge.js
+│   │   ├── server.js
+│   │   ├── server.node.js
+│   │   ├── server.react-server.js
+│   │   ├── static.browser.js
+│   │   ├── static.edge.js
+│   │   ├── static.js
+│   │   ├── static.node.js
+│   │   ├── static.react-server.js
+│   │   └── test-utils.js
+│   ├── react-is
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── build-info.json
+│   │   ├── cjs
+│   │   │   ├── react-is.development.js
+│   │   │   └── react-is.production.min.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── umd
+│   │       ├── react-is.development.js
+│   │       └── react-is.production.min.js
+│   ├── reflect.getprototypeof
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── regexp.prototype.flags
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── builtin.js
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── resolve
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── LICENSE
+│   │   ├── SECURITY.md
+│   │   ├── async.js
+│   │   ├── bin
+│   │   │   └── resolve
+│   │   ├── example
+│   │   │   ├── async.js
+│   │   │   └── sync.js
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── async.js
+│   │   │   ├── caller.js
+│   │   │   ├── core.js
+│   │   │   ├── core.json
+│   │   │   ├── homedir.js
+│   │   │   ├── is-core.js
+│   │   │   ├── node-modules-paths.js
+│   │   │   ├── normalize-options.js
+│   │   │   └── sync.js
+│   │   ├── package.json
+│   │   ├── readme.markdown
+│   │   ├── sync.js
+│   │   └── test
+│   │       ├── core.js
+│   │       ├── dotdot
+│   │       ├── dotdot.js
+│   │       ├── faulty_basedir.js
+│   │       ├── filter.js
+│   │       ├── filter_sync.js
+│   │       ├── home_paths.js
+│   │       ├── home_paths_sync.js
+│   │       ├── mock.js
+│   │       ├── mock_sync.js
+│   │       ├── module_dir
+│   │       ├── module_dir.js
+│   │       ├── node-modules-paths.js
+│   │       ├── node_path
+│   │       ├── node_path.js
+│   │       ├── nonstring.js
+│   │       ├── pathfilter
+│   │       ├── pathfilter.js
+│   │       ├── precedence
+│   │       ├── precedence.js
+│   │       ├── resolver
+│   │       ├── resolver.js
+│   │       ├── resolver_sync.js
+│   │       ├── shadowed_core
+│   │       ├── shadowed_core.js
+│   │       ├── subdirs.js
+│   │       └── symlinks.js
+│   ├── resolve-from
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── resolve-pkg-maps
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.cts
+│   │   │   ├── index.d.mts
+│   │   │   └── index.mjs
+│   │   └── package.json
+│   ├── reusify
+│   │   ├── .github
+│   │   │   ├── dependabot.yml
+│   │   │   └── workflows
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── benchmarks
+│   │   │   ├── createNoCodeFunction.js
+│   │   │   ├── fib.js
+│   │   │   └── reuseNoCodeFunction.js
+│   │   ├── eslint.config.js
+│   │   ├── package.json
+│   │   ├── reusify.d.ts
+│   │   ├── reusify.js
+│   │   ├── test.js
+│   │   └── tsconfig.json
+│   ├── rrweb-cssom
+│   │   ├── LICENSE.txt
+│   │   ├── README.mdown
+│   │   ├── build
+│   │   │   └── CSSOM.js
+│   │   ├── lib
+│   │   │   ├── CSSConditionRule.js
+│   │   │   ├── CSSContainerRule.js
+│   │   │   ├── CSSDocumentRule.js
+│   │   │   ├── CSSFontFaceRule.js
+│   │   │   ├── CSSGroupingRule.js
+│   │   │   ├── CSSHostRule.js
+│   │   │   ├── CSSImportRule.js
+│   │   │   ├── CSSKeyframeRule.js
+│   │   │   ├── CSSKeyframesRule.js
+│   │   │   ├── CSSLayerBlockRule.js
+│   │   │   ├── CSSMediaRule.js
+│   │   │   ├── CSSOM.js
+│   │   │   ├── CSSRule.js
+│   │   │   ├── CSSStartingStyleRule.js
+│   │   │   ├── CSSStyleDeclaration.js
+│   │   │   ├── CSSStyleRule.js
+│   │   │   ├── CSSStyleSheet.js
+│   │   │   ├── CSSSupportsRule.js
+│   │   │   ├── CSSValue.js
+│   │   │   ├── CSSValueExpression.js
+│   │   │   ├── MatcherList.js
+│   │   │   ├── MediaList.js
+│   │   │   ├── StyleSheet.js
+│   │   │   ├── clone.js
+│   │   │   ├── index.js
+│   │   │   └── parse.js
+│   │   └── package.json
+│   ├── run-parallel
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── safe-array-concat
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── safe-push-apply
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── safe-regex-test
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── safer-buffer
+│   │   ├── LICENSE
+│   │   ├── Porting-Buffer.md
+│   │   ├── Readme.md
+│   │   ├── dangerous.js
+│   │   ├── package.json
+│   │   ├── safer.js
+│   │   └── tests.js
+│   ├── saxes
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   ├── saxes.d.ts
+│   │   ├── saxes.js
+│   │   └── saxes.js.map
+│   ├── scheduler
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── cjs
+│   │   │   ├── scheduler-unstable_mock.development.js
+│   │   │   ├── scheduler-unstable_mock.production.js
+│   │   │   ├── scheduler-unstable_post_task.development.js
+│   │   │   ├── scheduler-unstable_post_task.production.js
+│   │   │   ├── scheduler.development.js
+│   │   │   ├── scheduler.native.development.js
+│   │   │   ├── scheduler.native.production.js
+│   │   │   └── scheduler.production.js
+│   │   ├── index.js
+│   │   ├── index.native.js
+│   │   ├── package.json
+│   │   ├── unstable_mock.js
+│   │   └── unstable_post_task.js
+│   ├── section-matter
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── semver
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── semver.js
+│   │   ├── classes
+│   │   │   ├── comparator.js
+│   │   │   ├── index.js
+│   │   │   ├── range.js
+│   │   │   └── semver.js
+│   │   ├── functions
+│   │   │   ├── clean.js
+│   │   │   ├── cmp.js
+│   │   │   ├── coerce.js
+│   │   │   ├── compare-build.js
+│   │   │   ├── compare-loose.js
+│   │   │   ├── compare.js
+│   │   │   ├── diff.js
+│   │   │   ├── eq.js
+│   │   │   ├── gt.js
+│   │   │   ├── gte.js
+│   │   │   ├── inc.js
+│   │   │   ├── lt.js
+│   │   │   ├── lte.js
+│   │   │   ├── major.js
+│   │   │   ├── minor.js
+│   │   │   ├── neq.js
+│   │   │   ├── parse.js
+│   │   │   ├── patch.js
+│   │   │   ├── prerelease.js
+│   │   │   ├── rcompare.js
+│   │   │   ├── rsort.js
+│   │   │   ├── satisfies.js
+│   │   │   ├── sort.js
+│   │   │   └── valid.js
+│   │   ├── index.js
+│   │   ├── internal
+│   │   │   ├── constants.js
+│   │   │   ├── debug.js
+│   │   │   ├── identifiers.js
+│   │   │   ├── lrucache.js
+│   │   │   ├── parse-options.js
+│   │   │   └── re.js
+│   │   ├── package.json
+│   │   ├── preload.js
+│   │   ├── range.bnf
+│   │   └── ranges
+│   │       ├── gtr.js
+│   │       ├── intersects.js
+│   │       ├── ltr.js
+│   │       ├── max-satisfying.js
+│   │       ├── min-satisfying.js
+│   │       ├── min-version.js
+│   │       ├── outside.js
+│   │       ├── simplify.js
+│   │       ├── subset.js
+│   │       ├── to-comparators.js
+│   │       └── valid.js
+│   ├── set-function-length
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── env.d.ts
+│   │   ├── env.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── tsconfig.json
+│   ├── set-function-name
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── tsconfig.json
+│   ├── set-proto
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── Object.setPrototypeOf.d.ts
+│   │   ├── Object.setPrototypeOf.js
+│   │   ├── README.md
+│   │   ├── Reflect.setPrototypeOf.d.ts
+│   │   ├── Reflect.setPrototypeOf.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── sharp
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── install
+│   │   │   └── check.js
+│   │   ├── lib
+│   │   │   ├── channel.js
+│   │   │   ├── colour.js
+│   │   │   ├── composite.js
+│   │   │   ├── constructor.js
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── input.js
+│   │   │   ├── is.js
+│   │   │   ├── libvips.js
+│   │   │   ├── operation.js
+│   │   │   ├── output.js
+│   │   │   ├── resize.js
+│   │   │   ├── sharp.js
+│   │   │   └── utility.js
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── binding.gyp
+│   │       ├── common.cc
+│   │       ├── common.h
+│   │       ├── metadata.cc
+│   │       ├── metadata.h
+│   │       ├── operations.cc
+│   │       ├── operations.h
+│   │       ├── pipeline.cc
+│   │       ├── pipeline.h
+│   │       ├── sharp.cc
+│   │       ├── stats.cc
+│   │       ├── stats.h
+│   │       ├── utilities.cc
+│   │       └── utilities.h
+│   ├── shebang-command
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── shebang-regex
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── side-channel
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── side-channel-list
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── list.d.ts
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── side-channel-map
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── side-channel-weakmap
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── simple-swizzle
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── source-map-js
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── array-set.js
+│   │   │   ├── base64-vlq.js
+│   │   │   ├── base64.js
+│   │   │   ├── binary-search.js
+│   │   │   ├── mapping-list.js
+│   │   │   ├── quick-sort.js
+│   │   │   ├── source-map-consumer.d.ts
+│   │   │   ├── source-map-consumer.js
+│   │   │   ├── source-map-generator.d.ts
+│   │   │   ├── source-map-generator.js
+│   │   │   ├── source-node.d.ts
+│   │   │   ├── source-node.js
+│   │   │   └── util.js
+│   │   ├── package.json
+│   │   ├── source-map.d.ts
+│   │   └── source-map.js
+│   ├── split2
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bench.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test.js
+│   ├── sprintf-js
+│   │   ├── .npmignore
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bower.json
+│   │   ├── demo
+│   │   │   └── angular.html
+│   │   ├── dist
+│   │   │   ├── angular-sprintf.min.js
+│   │   │   ├── angular-sprintf.min.js.map
+│   │   │   ├── angular-sprintf.min.map
+│   │   │   ├── sprintf.min.js
+│   │   │   ├── sprintf.min.js.map
+│   │   │   └── sprintf.min.map
+│   │   ├── gruntfile.js
+│   │   ├── package.json
+│   │   ├── src
+│   │   │   ├── angular-sprintf.js
+│   │   │   └── sprintf.js
+│   │   └── test
+│   │       └── test.js
+│   ├── stable-hash
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── index.mjs
+│   │   └── package.json
+│   ├── stop-iteration-iterator
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── string.prototype.includes
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .gitattributes
+│   │   ├── .github
+│   │   │   └── workflows
+│   │   ├── .travis.yml
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── tests
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── string.prototype.matchall
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill-regexp-matchall.js
+│   │   ├── polyfill.js
+│   │   ├── regexp-matchall.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── string.prototype.repeat
+│   │   ├── .editorconfig
+│   │   ├── .gitattributes
+│   │   ├── .travis.yml
+│   │   ├── LICENSE-MIT.txt
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── tests
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── string.prototype.trim
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── string.prototype.trimend
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── string.prototype.trimstart
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── auto.js
+│   │   ├── implementation.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── polyfill.js
+│   │   ├── shim.js
+│   │   └── test
+│   │       ├── implementation.js
+│   │       ├── index.js
+│   │       ├── shimmed.js
+│   │       └── tests.js
+│   ├── strip-bom
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── strip-bom-string
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── strip-json-comments
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── styled-jsx
+│   │   ├── babel-test.js
+│   │   ├── babel.js
+│   │   ├── css.d.ts
+│   │   ├── css.js
+│   │   ├── dist
+│   │   │   ├── babel
+│   │   │   ├── index
+│   │   │   └── webpack
+│   │   ├── global.d.ts
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── style-transform.js
+│   │   │   └── stylesheet.js
+│   │   ├── license.md
+│   │   ├── macro.d.ts
+│   │   ├── macro.js
+│   │   ├── package.json
+│   │   ├── readme.md
+│   │   ├── style.d.ts
+│   │   ├── style.js
+│   │   └── webpack.js
+│   ├── supports-color
+│   │   ├── browser.js
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── supports-preserve-symlinks-flag
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── browser.js
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   └── test
+│   │       └── index.js
+│   ├── symbol-tree
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── SymbolTree.js
+│   │   │   ├── SymbolTreeNode.js
+│   │   │   ├── TreeIterator.js
+│   │   │   └── TreePosition.js
+│   │   └── package.json
+│   ├── tinyglobby
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.d.mts
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── index.mjs
+│   │   ├── node_modules
+│   │   │   ├── fdir
+│   │   │   └── picomatch
+│   │   └── package.json
+│   ├── tldts
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── cli.js
+│   │   ├── dist
+│   │   │   ├── cjs
+│   │   │   ├── es6
+│   │   │   ├── index.cjs.min.js
+│   │   │   ├── index.cjs.min.js.map
+│   │   │   ├── index.esm.min.js
+│   │   │   ├── index.esm.min.js.map
+│   │   │   ├── index.umd.min.js
+│   │   │   ├── index.umd.min.js.map
+│   │   │   └── types
+│   │   ├── index.ts
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── data
+│   │       └── suffix-trie.ts
+│   ├── tldts-core
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── cjs
+│   │   │   ├── es6
+│   │   │   └── types
+│   │   ├── index.ts
+│   │   ├── package.json
+│   │   └── src
+│   │       ├── domain-without-suffix.ts
+│   │       ├── domain.ts
+│   │       ├── extract-hostname.ts
+│   │       ├── factory.ts
+│   │       ├── is-ip.ts
+│   │       ├── is-valid.ts
+│   │       ├── lookup
+│   │       ├── options.ts
+│   │       └── subdomain.ts
+│   ├── to-regex-range
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── tough-cookie
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── cookie
+│   │   │   ├── getPublicSuffix.d.ts
+│   │   │   ├── getPublicSuffix.js
+│   │   │   ├── memstore.d.ts
+│   │   │   ├── memstore.js
+│   │   │   ├── pathMatch.d.ts
+│   │   │   ├── pathMatch.js
+│   │   │   ├── permuteDomain.d.ts
+│   │   │   ├── permuteDomain.js
+│   │   │   ├── store.d.ts
+│   │   │   ├── store.js
+│   │   │   ├── utils.d.ts
+│   │   │   ├── utils.js
+│   │   │   ├── validators.d.ts
+│   │   │   ├── validators.js
+│   │   │   ├── version.d.ts
+│   │   │   └── version.js
+│   │   └── package.json
+│   ├── tr46
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── mappingTable.json
+│   │   │   ├── regexes.js
+│   │   │   └── statusMapping.js
+│   │   └── package.json
+│   ├── ts-api-utils
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── index.cjs
+│   │   │   ├── index.d.cts
+│   │   │   ├── index.d.ts
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── tsconfig-paths
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── __tests__
+│   │   │   ├── config-loader.d.ts
+│   │   │   ├── config-loader.js
+│   │   │   ├── config-loader.js.map
+│   │   │   ├── filesystem.d.ts
+│   │   │   ├── filesystem.js
+│   │   │   ├── filesystem.js.map
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   ├── index.js.map
+│   │   │   ├── mapping-entry.d.ts
+│   │   │   ├── mapping-entry.js
+│   │   │   ├── mapping-entry.js.map
+│   │   │   ├── match-path-async.d.ts
+│   │   │   ├── match-path-async.js
+│   │   │   ├── match-path-async.js.map
+│   │   │   ├── match-path-sync.d.ts
+│   │   │   ├── match-path-sync.js
+│   │   │   ├── match-path-sync.js.map
+│   │   │   ├── options.d.ts
+│   │   │   ├── options.js
+│   │   │   ├── options.js.map
+│   │   │   ├── register.d.ts
+│   │   │   ├── register.js
+│   │   │   ├── register.js.map
+│   │   │   ├── try-path.d.ts
+│   │   │   ├── try-path.js
+│   │   │   ├── try-path.js.map
+│   │   │   ├── tsconfig-loader.d.ts
+│   │   │   ├── tsconfig-loader.js
+│   │   │   └── tsconfig-loader.js.map
+│   │   ├── package.json
+│   │   ├── register.js
+│   │   └── src
+│   │       ├── __tests__
+│   │       ├── config-loader.ts
+│   │       ├── filesystem.ts
+│   │       ├── index.ts
+│   │       ├── mapping-entry.ts
+│   │       ├── match-path-async.ts
+│   │       ├── match-path-sync.ts
+│   │       ├── options.ts
+│   │       ├── register.ts
+│   │       ├── try-path.ts
+│   │       └── tsconfig-loader.ts
+│   ├── tslib
+│   │   ├── CopyrightNotice.txt
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── modules
+│   │   │   ├── index.d.ts
+│   │   │   ├── index.js
+│   │   │   └── package.json
+│   │   ├── package.json
+│   │   ├── tslib.d.ts
+│   │   ├── tslib.es6.html
+│   │   ├── tslib.es6.js
+│   │   ├── tslib.es6.mjs
+│   │   ├── tslib.html
+│   │   └── tslib.js
+│   ├── type-check
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── check.js
+│   │   │   ├── index.js
+│   │   │   └── parse-type.js
+│   │   └── package.json
+│   ├── typed-array-buffer
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── typed-array-byte-length
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── typed-array-byte-offset
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── typed-array-length
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── typescript
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── SECURITY.md
+│   │   ├── ThirdPartyNoticeText.txt
+│   │   ├── bin
+│   │   │   ├── tsc
+│   │   │   └── tsserver
+│   │   ├── lib
+│   │   │   ├── _tsc.js
+│   │   │   ├── _tsserver.js
+│   │   │   ├── _typingsInstaller.js
+│   │   │   ├── cs
+│   │   │   ├── de
+│   │   │   ├── es
+│   │   │   ├── fr
+│   │   │   ├── it
+│   │   │   ├── ja
+│   │   │   ├── ko
+│   │   │   ├── lib.d.ts
+│   │   │   ├── lib.decorators.d.ts
+│   │   │   ├── lib.decorators.legacy.d.ts
+│   │   │   ├── lib.dom.asynciterable.d.ts
+│   │   │   ├── lib.dom.d.ts
+│   │   │   ├── lib.dom.iterable.d.ts
+│   │   │   ├── lib.es2015.collection.d.ts
+│   │   │   ├── lib.es2015.core.d.ts
+│   │   │   ├── lib.es2015.d.ts
+│   │   │   ├── lib.es2015.generator.d.ts
+│   │   │   ├── lib.es2015.iterable.d.ts
+│   │   │   ├── lib.es2015.promise.d.ts
+│   │   │   ├── lib.es2015.proxy.d.ts
+│   │   │   ├── lib.es2015.reflect.d.ts
+│   │   │   ├── lib.es2015.symbol.d.ts
+│   │   │   ├── lib.es2015.symbol.wellknown.d.ts
+│   │   │   ├── lib.es2016.array.include.d.ts
+│   │   │   ├── lib.es2016.d.ts
+│   │   │   ├── lib.es2016.full.d.ts
+│   │   │   ├── lib.es2016.intl.d.ts
+│   │   │   ├── lib.es2017.arraybuffer.d.ts
+│   │   │   ├── lib.es2017.d.ts
+│   │   │   ├── lib.es2017.date.d.ts
+│   │   │   ├── lib.es2017.full.d.ts
+│   │   │   ├── lib.es2017.intl.d.ts
+│   │   │   ├── lib.es2017.object.d.ts
+│   │   │   ├── lib.es2017.sharedmemory.d.ts
+│   │   │   ├── lib.es2017.string.d.ts
+│   │   │   ├── lib.es2017.typedarrays.d.ts
+│   │   │   ├── lib.es2018.asyncgenerator.d.ts
+│   │   │   ├── lib.es2018.asynciterable.d.ts
+│   │   │   ├── lib.es2018.d.ts
+│   │   │   ├── lib.es2018.full.d.ts
+│   │   │   ├── lib.es2018.intl.d.ts
+│   │   │   ├── lib.es2018.promise.d.ts
+│   │   │   ├── lib.es2018.regexp.d.ts
+│   │   │   ├── lib.es2019.array.d.ts
+│   │   │   ├── lib.es2019.d.ts
+│   │   │   ├── lib.es2019.full.d.ts
+│   │   │   ├── lib.es2019.intl.d.ts
+│   │   │   ├── lib.es2019.object.d.ts
+│   │   │   ├── lib.es2019.string.d.ts
+│   │   │   ├── lib.es2019.symbol.d.ts
+│   │   │   ├── lib.es2020.bigint.d.ts
+│   │   │   ├── lib.es2020.d.ts
+│   │   │   ├── lib.es2020.date.d.ts
+│   │   │   ├── lib.es2020.full.d.ts
+│   │   │   ├── lib.es2020.intl.d.ts
+│   │   │   ├── lib.es2020.number.d.ts
+│   │   │   ├── lib.es2020.promise.d.ts
+│   │   │   ├── lib.es2020.sharedmemory.d.ts
+│   │   │   ├── lib.es2020.string.d.ts
+│   │   │   ├── lib.es2020.symbol.wellknown.d.ts
+│   │   │   ├── lib.es2021.d.ts
+│   │   │   ├── lib.es2021.full.d.ts
+│   │   │   ├── lib.es2021.intl.d.ts
+│   │   │   ├── lib.es2021.promise.d.ts
+│   │   │   ├── lib.es2021.string.d.ts
+│   │   │   ├── lib.es2021.weakref.d.ts
+│   │   │   ├── lib.es2022.array.d.ts
+│   │   │   ├── lib.es2022.d.ts
+│   │   │   ├── lib.es2022.error.d.ts
+│   │   │   ├── lib.es2022.full.d.ts
+│   │   │   ├── lib.es2022.intl.d.ts
+│   │   │   ├── lib.es2022.object.d.ts
+│   │   │   ├── lib.es2022.regexp.d.ts
+│   │   │   ├── lib.es2022.string.d.ts
+│   │   │   ├── lib.es2023.array.d.ts
+│   │   │   ├── lib.es2023.collection.d.ts
+│   │   │   ├── lib.es2023.d.ts
+│   │   │   ├── lib.es2023.full.d.ts
+│   │   │   ├── lib.es2023.intl.d.ts
+│   │   │   ├── lib.es2024.arraybuffer.d.ts
+│   │   │   ├── lib.es2024.collection.d.ts
+│   │   │   ├── lib.es2024.d.ts
+│   │   │   ├── lib.es2024.full.d.ts
+│   │   │   ├── lib.es2024.object.d.ts
+│   │   │   ├── lib.es2024.promise.d.ts
+│   │   │   ├── lib.es2024.regexp.d.ts
+│   │   │   ├── lib.es2024.sharedmemory.d.ts
+│   │   │   ├── lib.es2024.string.d.ts
+│   │   │   ├── lib.es5.d.ts
+│   │   │   ├── lib.es6.d.ts
+│   │   │   ├── lib.esnext.array.d.ts
+│   │   │   ├── lib.esnext.collection.d.ts
+│   │   │   ├── lib.esnext.d.ts
+│   │   │   ├── lib.esnext.decorators.d.ts
+│   │   │   ├── lib.esnext.disposable.d.ts
+│   │   │   ├── lib.esnext.error.d.ts
+│   │   │   ├── lib.esnext.float16.d.ts
+│   │   │   ├── lib.esnext.full.d.ts
+│   │   │   ├── lib.esnext.intl.d.ts
+│   │   │   ├── lib.esnext.iterator.d.ts
+│   │   │   ├── lib.esnext.promise.d.ts
+│   │   │   ├── lib.esnext.sharedmemory.d.ts
+│   │   │   ├── lib.scripthost.d.ts
+│   │   │   ├── lib.webworker.asynciterable.d.ts
+│   │   │   ├── lib.webworker.d.ts
+│   │   │   ├── lib.webworker.importscripts.d.ts
+│   │   │   ├── lib.webworker.iterable.d.ts
+│   │   │   ├── pl
+│   │   │   ├── pt-br
+│   │   │   ├── ru
+│   │   │   ├── tr
+│   │   │   ├── tsc.js
+│   │   │   ├── tsserver.js
+│   │   │   ├── tsserverlibrary.d.ts
+│   │   │   ├── tsserverlibrary.js
+│   │   │   ├── typesMap.json
+│   │   │   ├── typescript.d.ts
+│   │   │   ├── typescript.js
+│   │   │   ├── typingsInstaller.js
+│   │   │   ├── watchGuard.js
+│   │   │   ├── zh-cn
+│   │   │   └── zh-tw
+│   │   └── package.json
+│   ├── unbox-primitive
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── undici
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── docs
+│   │   │   └── docs
+│   │   ├── index-fetch.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── api
+│   │   │   ├── cache
+│   │   │   ├── core
+│   │   │   ├── dispatcher
+│   │   │   ├── global.js
+│   │   │   ├── handler
+│   │   │   ├── interceptor
+│   │   │   ├── llhttp
+│   │   │   ├── mock
+│   │   │   ├── util
+│   │   │   └── web
+│   │   ├── package.json
+│   │   ├── scripts
+│   │   │   └── strip-comments.js
+│   │   └── types
+│   │       ├── README.md
+│   │       ├── agent.d.ts
+│   │       ├── api.d.ts
+│   │       ├── balanced-pool.d.ts
+│   │       ├── cache-interceptor.d.ts
+│   │       ├── cache.d.ts
+│   │       ├── client-stats.d.ts
+│   │       ├── client.d.ts
+│   │       ├── connector.d.ts
+│   │       ├── content-type.d.ts
+│   │       ├── cookies.d.ts
+│   │       ├── diagnostics-channel.d.ts
+│   │       ├── dispatcher.d.ts
+│   │       ├── env-http-proxy-agent.d.ts
+│   │       ├── errors.d.ts
+│   │       ├── eventsource.d.ts
+│   │       ├── fetch.d.ts
+│   │       ├── formdata.d.ts
+│   │       ├── global-dispatcher.d.ts
+│   │       ├── global-origin.d.ts
+│   │       ├── h2c-client.d.ts
+│   │       ├── handlers.d.ts
+│   │       ├── header.d.ts
+│   │       ├── index.d.ts
+│   │       ├── interceptors.d.ts
+│   │       ├── mock-agent.d.ts
+│   │       ├── mock-call-history.d.ts
+│   │       ├── mock-client.d.ts
+│   │       ├── mock-errors.d.ts
+│   │       ├── mock-interceptor.d.ts
+│   │       ├── mock-pool.d.ts
+│   │       ├── patch.d.ts
+│   │       ├── pool-stats.d.ts
+│   │       ├── pool.d.ts
+│   │       ├── proxy-agent.d.ts
+│   │       ├── readable.d.ts
+│   │       ├── retry-agent.d.ts
+│   │       ├── retry-handler.d.ts
+│   │       ├── snapshot-agent.d.ts
+│   │       ├── util.d.ts
+│   │       ├── utility.d.ts
+│   │       ├── webidl.d.ts
+│   │       └── websocket.d.ts
+│   ├── undici-types
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── agent.d.ts
+│   │   ├── api.d.ts
+│   │   ├── balanced-pool.d.ts
+│   │   ├── cache.d.ts
+│   │   ├── client.d.ts
+│   │   ├── connector.d.ts
+│   │   ├── content-type.d.ts
+│   │   ├── cookies.d.ts
+│   │   ├── diagnostics-channel.d.ts
+│   │   ├── dispatcher.d.ts
+│   │   ├── env-http-proxy-agent.d.ts
+│   │   ├── errors.d.ts
+│   │   ├── eventsource.d.ts
+│   │   ├── fetch.d.ts
+│   │   ├── file.d.ts
+│   │   ├── filereader.d.ts
+│   │   ├── formdata.d.ts
+│   │   ├── global-dispatcher.d.ts
+│   │   ├── global-origin.d.ts
+│   │   ├── handlers.d.ts
+│   │   ├── header.d.ts
+│   │   ├── index.d.ts
+│   │   ├── interceptors.d.ts
+│   │   ├── mock-agent.d.ts
+│   │   ├── mock-client.d.ts
+│   │   ├── mock-errors.d.ts
+│   │   ├── mock-interceptor.d.ts
+│   │   ├── mock-pool.d.ts
+│   │   ├── package.json
+│   │   ├── patch.d.ts
+│   │   ├── pool-stats.d.ts
+│   │   ├── pool.d.ts
+│   │   ├── proxy-agent.d.ts
+│   │   ├── readable.d.ts
+│   │   ├── retry-agent.d.ts
+│   │   ├── retry-handler.d.ts
+│   │   ├── util.d.ts
+│   │   ├── webidl.d.ts
+│   │   └── websocket.d.ts
+│   ├── unrs-resolver
+│   │   ├── README.md
+│   │   ├── browser.js
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── uri-js
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── es5
+│   │   │   └── esnext
+│   │   ├── package.json
+│   │   └── yarn.lock
+│   ├── w3c-xmlserializer
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── attributes.js
+│   │   │   ├── constants.js
+│   │   │   └── serialize.js
+│   │   └── package.json
+│   ├── web -> ../apps/web
+│   ├── webidl-conversions
+│   │   ├── LICENSE.md
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   └── index.js
+│   │   └── package.json
+│   ├── whatwg-encoding
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── labels-to-names.json
+│   │   │   ├── supported-names.json
+│   │   │   └── whatwg-encoding.js
+│   │   └── package.json
+│   ├── whatwg-mimetype
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   ├── mime-type-parameters.js
+│   │   │   ├── mime-type.js
+│   │   │   ├── parser.js
+│   │   │   ├── serializer.js
+│   │   │   └── utils.js
+│   │   └── package.json
+│   ├── whatwg-url
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── Function.js
+│   │   │   ├── URL-impl.js
+│   │   │   ├── URL.js
+│   │   │   ├── URLSearchParams-impl.js
+│   │   │   ├── URLSearchParams.js
+│   │   │   ├── VoidFunction.js
+│   │   │   ├── encoding.js
+│   │   │   ├── infra.js
+│   │   │   ├── percent-encoding.js
+│   │   │   ├── url-state-machine.js
+│   │   │   ├── urlencoded.js
+│   │   │   └── utils.js
+│   │   ├── package.json
+│   │   └── webidl2js-wrapper.js
+│   ├── which
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── bin
+│   │   │   └── node-which
+│   │   ├── package.json
+│   │   └── which.js
+│   ├── which-boxed-primitive
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── which-builtin-type
+│   │   ├── .eslintrc
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── which-collection
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── which-typed-array
+│   │   ├── .editorconfig
+│   │   ├── .eslintrc
+│   │   ├── .github
+│   │   │   └── FUNDING.yml
+│   │   ├── .nycrc
+│   │   ├── CHANGELOG.md
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── package.json
+│   │   ├── test
+│   │   │   └── index.js
+│   │   └── tsconfig.json
+│   ├── word-wrap
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   └── package.json
+│   ├── ws
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── browser.js
+│   │   ├── index.js
+│   │   ├── lib
+│   │   │   ├── buffer-util.js
+│   │   │   ├── constants.js
+│   │   │   ├── event-target.js
+│   │   │   ├── extension.js
+│   │   │   ├── limiter.js
+│   │   │   ├── permessage-deflate.js
+│   │   │   ├── receiver.js
+│   │   │   ├── sender.js
+│   │   │   ├── stream.js
+│   │   │   ├── subprotocol.js
+│   │   │   ├── validation.js
+│   │   │   ├── websocket-server.js
+│   │   │   └── websocket.js
+│   │   ├── package.json
+│   │   └── wrapper.mjs
+│   ├── xml-name-validator
+│   │   ├── LICENSE.txt
+│   │   ├── README.md
+│   │   ├── lib
+│   │   │   └── xml-name-validator.js
+│   │   └── package.json
+│   ├── xmlchars
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── package.json
+│   │   ├── xml
+│   │   │   ├── 1.0
+│   │   │   └── 1.1
+│   │   ├── xmlchars.d.ts
+│   │   ├── xmlchars.js
+│   │   ├── xmlchars.js.map
+│   │   └── xmlns
+│   │       └── 1.0
+│   ├── xtend
+│   │   ├── .jshintrc
+│   │   ├── LICENSE
+│   │   ├── README.md
+│   │   ├── immutable.js
+│   │   ├── mutable.js
+│   │   ├── package.json
+│   │   └── test.js
+│   ├── yocto-queue
+│   │   ├── index.d.ts
+│   │   ├── index.js
+│   │   ├── license
+│   │   ├── package.json
+│   │   └── readme.md
+│   ├── youtube-transcript
+│   │   ├── README.md
+│   │   ├── dist
+│   │   │   ├── index.d.ts
+│   │   │   ├── youtube-transcript.common.js
+│   │   │   └── youtube-transcript.esm.js
+│   │   └── package.json
+│   └── zod
+│       ├── LICENSE
+│       ├── README.md
+│       ├── index.cjs
+│       ├── index.d.cts
+│       ├── index.d.ts
+│       ├── index.js
+│       ├── package.json
+│       ├── src
+│       │   ├── index.ts
+│       │   ├── v3
+│       │   ├── v4
+│       │   └── v4-mini
+│       ├── v3
+│       │   ├── ZodError.cjs
+│       │   ├── ZodError.d.cts
+│       │   ├── ZodError.d.ts
+│       │   ├── ZodError.js
+│       │   ├── errors.cjs
+│       │   ├── errors.d.cts
+│       │   ├── errors.d.ts
+│       │   ├── errors.js
+│       │   ├── external.cjs
+│       │   ├── external.d.cts
+│       │   ├── external.d.ts
+│       │   ├── external.js
+│       │   ├── helpers
+│       │   ├── index.cjs
+│       │   ├── index.d.cts
+│       │   ├── index.d.ts
+│       │   ├── index.js
+│       │   ├── locales
+│       │   ├── standard-schema.cjs
+│       │   ├── standard-schema.d.cts
+│       │   ├── standard-schema.d.ts
+│       │   ├── standard-schema.js
+│       │   ├── types.cjs
+│       │   ├── types.d.cts
+│       │   ├── types.d.ts
+│       │   └── types.js
+│       ├── v4
+│       │   ├── classic
+│       │   ├── core
+│       │   ├── index.cjs
+│       │   ├── index.d.cts
+│       │   ├── index.d.ts
+│       │   ├── index.js
+│       │   ├── locales
+│       │   └── mini
+│       └── v4-mini
+│           ├── index.cjs
+│           ├── index.d.cts
+│           ├── index.d.ts
+│           └── index.js
+├── package-lock.json
+├── package.json
+├── packages
+├── scripts
+│   └── repair_published_at.sh
+└── tree.txt
+
+1503 directories, 8347 files
diff --git a/youtube_ingest_diag.tar.gz b/youtube_ingest_diag.tar.gz
new file mode 100644
index 0000000..326960d
Binary files /dev/null and b/youtube_ingest_diag.tar.gz differ
